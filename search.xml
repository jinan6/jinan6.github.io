<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>端口占用解决</title>
      <link href="/posts/3700149003/"/>
      <url>/posts/3700149003/</url>
      
        <content type="html"><![CDATA[<div class="snote idea yellow"><p>最近天天遇到端口占用问题，记录一下，方便查看</p></div><h3 id="了解"><a href="#了解" class="headerlink" title="了解"></a>了解</h3><p>端口：所谓的端口，就好像是门牌号一样，<a href="https://baike.baidu.com/item/客户端/101081" target="_blank" rel="noopener">客户端</a>可以通过ip地址找到对应的<a href="https://baike.baidu.com/item/服务器端/3369401" target="_blank" rel="noopener">服务器端</a>，但是服务器端是有很多端口的，每个<a href="https://baike.baidu.com/item/应用程序/5985445" target="_blank" rel="noopener">应用程序</a>对应一个端口号，通过类似门牌号的端口号，客户端才能真正的访问到该服务器。为了对端口进行区分，将每个端口进行了编号，这就是端口号</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>端口号的主要作用是表示一台计算机中的特定进程所提供的服务。网络中的计算机是通过IP地址来代表其身份的，它只能表示某台特定的计算机，但是一台计算机上可以同时提供很多个服务，如数据库服务、FTP服务、Web服务等，我们就通过端口号来区别相同计算机所提供的这些不同的服务，如常见的端口号21表示的是FTP服务，端口号23表示的是Telnet服务端口号25指的是SMTP服务等。端口号一般习惯为4位整数，在同一台计算机上端口号不能重复，否则，就会产生端口号冲突这样的例外</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><ol><li><p>开始—-&gt;运行—-&gt;cmd，或者是<code>window+R</code>组合键，调出命令窗口</p></li><li><p>输入相关命令</p><p>查看所有端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><hr><p>查看指定端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -aon|findstr &quot;端口号&quot;</span><br></pre></td></tr></table></figure></li><li><p>关闭端口</p><p>在上一步通过找到<strong>端口号对应的PID</strong>（进程号），就可以到任务管理器中,找到对应进程号并关闭</p><hr><p>直接使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill &#x2F;pid 进程号 &#x2F;f</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记</title>
      <link href="/posts/1124952030/"/>
      <url>/posts/1124952030/</url>
      
        <content type="html"><![CDATA[<div class="snote idea yellow"><p>一些小杂记😋😋😋</p></div><h3 id="绑定接口时往前端数组里追加数据"><a href="#绑定接口时往前端数组里追加数据" class="headerlink" title="绑定接口时往前端数组里追加数据"></a>绑定接口时往前端数组里追加数据</h3><ol><li><p>v-for</p></li><li><p>定义数组</p></li><li><p>追加值</p><ol><li>先获取长度，然后for循环追加</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var len &#x3D; res.data.data.length;</span><br><span class="line">for (let i&#x3D;0;i&lt;len;i++) &#123;</span><br><span class="line">this.imagess.push(res.data.data[i])</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h3><p>查询某个字段不为空或不为某个特定值</p><p>原SQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *,t2.<span class="string">`type_name`</span> fname <span class="keyword">FROM</span> used_type t1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> used_type t2 <span class="keyword">ON</span> t1.<span class="string">`fid`</span>=t2.<span class="string">`type_id`</span></span><br></pre></td></tr></table></figure><p>可以查询出全部内容</p><p>更改后：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *,t2.<span class="string">`type_name`</span> fname <span class="keyword">FROM</span> used_type t1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> used_type t2 <span class="keyword">ON</span> t1.<span class="string">`fid`</span>=t2.<span class="string">`type_id`</span> </span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">TRIM</span>(t1.<span class="string">`fid`</span>)!=<span class="string">'0'</span> <span class="keyword">AND</span> t1.<span class="string">`fid`</span>=t2.<span class="string">`type_id`</span></span><br></pre></td></tr></table></figure><p>可以查出对应的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//条件</span><br><span class="line">WHERE TRIM(t1.`fid`)!='0'</span><br><span class="line">//括号里填入需要判断的字段</span><br><span class="line">//  !='' 不等于某个值</span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.toIntExact() <span class="comment">//类型转换  把long型转换为int</span></span><br></pre></td></tr></table></figure><h3 id="mybatis整理"><a href="#mybatis整理" class="headerlink" title="mybatis整理"></a>mybatis整理</h3><h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><ol><li>传递多个参数时，使用 <code>@Param</code></li><li><code>@Repository</code>   被spring 接管</li><li><code>@RequestBody</code><ol><li>@RequestBody主要用来接收前端传递给后端的json字符串中的数据的(请求体中的数据的)；</li><li>GET方式无请求体，所以使用@RequestBody接收数据时，前端不能使用GET方式提交数据，而是用POST方式进行提交。</li><li>在后端的同一个接收方法里，@RequestBody与@RequestParam()可以同时使用，@RequestBody最多只能有一个，而@RequestParam()可以有多个。</li></ol></li><li><code>resultType</code> 返回值类型</li><li><code>resultMap</code>resultMap可以实现将查询结果映射为复杂类型的pojo，比如在查询结果映射对象中包括pojo和list实现一对一查询和一对多查询</li><li><code>parameterType</code>用于对应的mapper接口方法接受的参数类型</li></ol><p><span class="inline-tag blue">不定时更新~~</span></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用知识点汇总</title>
      <link href="/posts/961488241/"/>
      <url>/posts/961488241/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>🌳🌳🌳数据库方面</p>          </div><h2 id="数据库优化——-gt-MySQL"><a href="#数据库优化——-gt-MySQL" class="headerlink" title="数据库优化——-&gt;MySQL"></a>数据库优化——-&gt;MySQL</h2><h3 id="MySQL四个优化方向"><a href="#MySQL四个优化方向" class="headerlink" title="MySQL四个优化方向"></a>MySQL四个优化方向</h3><p><strong>设计角度：</strong> 存储引擎的选择，字段类型选择，范式。</p><p><strong>自身特性：</strong>索引，查询缓存，分区分表，存储过程，SQL语句优化配置</p><p><strong>架构体系：</strong>主从复制（读写分离）</p><p><strong>硬件升级：</strong>CPU、内存等。</p><h4 id="选择合适的存储引擎"><a href="#选择合适的存储引擎" class="headerlink" title="选择合适的存储引擎"></a>选择合适的存储引擎</h4><ol><li>MYISAM  查询快，增删慢 表锁</li><li>InnoDB 支持事务，并发 行锁</li></ol><h4 id="表结构优化"><a href="#表结构优化" class="headerlink" title="表结构优化"></a>表结构优化</h4><ol><li>恰当的字段类型</li><li>范式</li><li>水平划分</li><li>垂直划分</li></ol><h3 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h3><p>避免使用  select  *   like   or</p><h3 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a>MySQL存储引擎</h3><h4 id="InnoDB和MYISAM的区别"><a href="#InnoDB和MYISAM的区别" class="headerlink" title="InnoDB和MYISAM的区别"></a>InnoDB和MYISAM的区别</h4><ol><li>InnoDB 支持主外键、事务</li><li>InnoDB 是行锁，操作时候只锁一行数据，适合高并发；MYISAM是表锁</li><li>InnoDB 不仅缓存索引，还缓存真实数据；MYISAM只缓存索引</li><li>InnoDB 需要表空间大</li><li>InnoDB 关注事务，MYISAM关注性能（查）；</li></ol><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>索引：排好序的快速查找数据结构</p><p>优点：提高数据检索的效率，降低数据排序的成本</p><p>缺点：会降低更新表的速度</p><p>单值索引：一个索引只包含单个列，一个表可以由多个单值索引</p><p>唯一索引：索引列的值必须唯一，允许有空值</p><p>符合索引：即一个索引包含多个列</p><h3 id="索引失效"><a href="#索引失效" class="headerlink" title="索引失效"></a>索引失效</h3><ol><li>最好全值匹配</li><li>最左前缀法则：如果索引了多列，查询从索引的最左前列开始，且不能跳过索引中的列</li><li>不在索引列上做任何操作（计算，函数，类型转换），会导致索引时校而转向全表扫描</li><li>存储引擎不能使用索引中范围条件右边的列，即范围之后全失效</li><li>尽量使用覆盖索引，只访问索引的查询（索引列和查询列一致），减少   select *</li><li>MySQL在使用不等于的时候无法使用索引会导致全表扫描</li><li>is null， is not null 也无法使用索引</li><li>like  以通配符开头  （’%aa’）索引会失效，变成全表扫描</li><li>字符串不加单引号，索引失效</li><li>少用  or ，用它连的接时候索引会失效</li></ol><h3 id="Mysql命令增加、修改、删除表字段"><a href="#Mysql命令增加、修改、删除表字段" class="headerlink" title="Mysql命令增加、修改、删除表字段"></a>Mysql命令增加、修改、删除表字段</h3><h4 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h4><p>alter add命令格式：alter table 表名 add字段 类型 其他；如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> car_evidence <span class="keyword">add</span> <span class="string">`unit_name`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">comment</span> <span class="string">'单位'</span></span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p>alter drop 命令格式：alter table 表名 drop column 字段；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> car_evidence <span class="keyword">drop</span> <span class="keyword">column</span> <span class="string">`unit_name`</span>;</span><br></pre></td></tr></table></figure><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>　alter modify 命令格式：alter table 表名 modify 字段 其他；如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_plan <span class="keyword">MODIFY</span> box_size <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">comment</span> <span class="string">'盒内的数量'</span>;</span><br></pre></td></tr></table></figure><h3 id="SQL题目"><a href="#SQL题目" class="headerlink" title="SQL题目"></a>SQL题目</h3><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200701091058.png" alt></p><p>1.在studen表中插入一条记录:1008,王明,男,1997-7-1,1801</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student()<span class="keyword">VALUES</span>(<span class="number">1008</span>,<span class="string">'王明'</span>,<span class="number">1</span>,<span class="string">'1999-7-1'</span>,<span class="string">'1801'</span>)</span><br></pre></td></tr></table></figure><p>2.修改student表中姓名是王明的学生的班级为1802</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> <span class="keyword">class</span>=<span class="string">'1802'</span> <span class="keyword">WHERE</span> sname=<span class="string">'王明'</span></span><br></pre></td></tr></table></figure><p>3.删除student表中姓名是王明且班级是1802的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sname=<span class="string">'王明'</span> <span class="keyword">AND</span> <span class="keyword">class</span>=<span class="string">'1802'</span></span><br></pre></td></tr></table></figure><p>4.查询student表中的学号.姓名和班级字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span> 学号,sname 姓名,<span class="keyword">class</span> 班级字段 <span class="keyword">FROM</span> student</span><br></pre></td></tr></table></figure><p>5.查询student表中性别为女的学生信息  <strong>男生为1 女生为2</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sex=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>6.查询student表中学号分别为1001,1003，1006的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">sid</span> <span class="keyword">IN</span> (<span class="number">1001</span>,<span class="number">1003</span>,<span class="number">1006</span>)</span><br></pre></td></tr></table></figure><p>7.在score表中查询课程号为1且成绩大于80分的学号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span> 学号 <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> coid=<span class="number">1</span> <span class="keyword">AND</span> grade&gt;<span class="number">80</span></span><br></pre></td></tr></table></figure><p>8.一条sql统计student表中每个班的人数,并找出人数大于50的班级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">class</span>) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">class</span> <span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(<span class="keyword">class</span>)&gt;<span class="number">50</span></span><br></pre></td></tr></table></figure><p>9.查询每个学生平均成绩大于60分的学生的学号和平均成绩,并根据成绩进行倒序排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span>,<span class="keyword">AVG</span>(grade) <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">sid</span> <span class="keyword">HAVING</span> <span class="keyword">AVG</span>(grade)&gt;<span class="number">60</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">AVG</span>(grade) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><p>10.通过表连接查询出学生的姓名、课程名及成绩</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student.<span class="string">`sname`</span>,cname,grade <span class="keyword">FROM</span> student <span class="keyword">JOIN</span> score <span class="keyword">ON</span> student.<span class="string">`sid`</span>=score.<span class="string">`sid`</span> <span class="keyword">JOIN</span> course <span class="keyword">ON</span></span><br><span class="line">score.<span class="string">`coid`</span>=course.<span class="string">`coid`</span></span><br></pre></td></tr></table></figure><h4 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h4><h5 id="char-和-varchar-的区别"><a href="#char-和-varchar-的区别" class="headerlink" title="char 和 varchar 的区别"></a>char 和 varchar 的区别</h5><ol><li><p>定长和变长</p><p>​    char 表示定长，长度固定，varchar表示变长，即长度可变。char如果插入的长度小于定义长度时，则用空格填充；varchar小于定义长度时，还是按实际长度存储，插入多长就存多长</p></li><li><p>存储的容量不同</p><p>对 char 来说，最多能存放的字符个数 255，和编码无关。<br>而 varchar 呢，最多能存放 65532 个字符。varchar的最大有效长度由最大行大小和使用的字符集确定。整体最大长度是 65,532字节。</p></li></ol><a class="btn-beautify button--animated purple larger" href="http://localhost:4000/posts/3155752545/" title="点击这里查看更多"><i class="far fa-hand-point-right fa-fw"></i><span>点击这里查看更多</span></a><hr><div class="note info">            <p>🍊🍊🍊代码题</p>          </div><h2 id="代码题"><a href="#代码题" class="headerlink" title="代码题"></a>代码题</h2><h3 id="用java实现求1到100数偶数以及个数"><a href="#用java实现求1到100数偶数以及个数" class="headerlink" title="用java实现求1到100数偶数以及个数"></a>用java实现求1到100数偶数以及个数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"1到100之间的偶数为："</span>);</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">101</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"偶数为："</span>+i);</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"偶数的个数为："</span>+sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求闰年"><a href="#求闰年" class="headerlink" title="求闰年"></a>求闰年</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        求闰年</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2000</span>;i&lt;=<span class="number">2020</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;i%<span class="number">100</span>!=<span class="number">0</span>||i%<span class="number">400</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                sum++;</span><br><span class="line">                System.out.println(<span class="string">"闰年为："</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"个数为："</span> + sum);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">List</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="string">"1"</span>);</span><br><span class="line">        list.add(<span class="string">"2"</span>);</span><br><span class="line">        list.add(<span class="string">"3"</span>);</span><br><span class="line">        list.add(<span class="string">"4"</span>);</span><br><span class="line">        list.add(<span class="string">"5"</span>);</span><br><span class="line">        <span class="comment">// for循环输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//  迭代器输出</span></span><br><span class="line">        Iterator i = list.iterator();</span><br><span class="line">        <span class="keyword">while</span>(i.hasNext())&#123;</span><br><span class="line">            System.out.println(i.next());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//默认调用toString</span></span><br><span class="line">        System.out.println(<span class="string">"\n--------toString---------"</span>);</span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//正向输出</span></span><br><span class="line">        System.out.println(<span class="string">"\n----正向输出---"</span>);</span><br><span class="line">        ListIterator li = list.listIterator();</span><br><span class="line">        <span class="keyword">while</span>(li.hasNext())&#123;</span><br><span class="line">            System.out.print(li.next());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"\n-----反向输出--------"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//反向输出</span></span><br><span class="line">        <span class="keyword">while</span>(li.hasPrevious())&#123;</span><br><span class="line">            System.out.print(li.previous());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HashMap-高性能输出"><a href="#HashMap-高性能输出" class="headerlink" title="HashMap 高性能输出"></a>HashMap 高性能输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    map.put(<span class="string">"1"</span>,<span class="string">"111"</span>);</span><br><span class="line">    map.put(<span class="string">"2"</span>,<span class="string">"222"</span>);</span><br><span class="line">    map.put(<span class="string">"3"</span>,<span class="string">"333"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认使用tostring</span></span><br><span class="line">    System.out.println(map);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//低效</span></span><br><span class="line">    Set keys = map.keySet();</span><br><span class="line">    <span class="keyword">for</span> (Object key : keys) &#123;</span><br><span class="line">        System.out.print(key+<span class="string">"="</span>+map.get(key)+<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//高效</span></span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; me:map.entrySet()) &#123;</span><br><span class="line">        System.out.print(me.getKey()+<span class="string">"="</span>+me.getValue()+<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><div class="note warning">            <p>🍓🍓🍓面向对象</p>          </div><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="面向对象的三大特征"><a href="#面向对象的三大特征" class="headerlink" title="面向对象的三大特征"></a>面向对象的三大特征</h3><ol><li>封装</li><li>继承</li><li>多态</li></ol><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ol><li>类就是<code>相同属性</code>和<code>方法</code>的集合</li><li>定义类的关键字  <strong>class</strong></li><li>类的继承  <strong>extends</strong></li></ol><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><p>是一种特殊的，不能被实例化的类，只能为其他类的父类使用</p><p>使用  <strong>abstract</strong> 关键字声明</p><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><ol><li>定义接口的关键字   <strong>interface</strong></li><li>实现接口的关键字  <strong>implements</strong></li><li>接口继承接口的关键字  <strong>extends</strong></li><li>接口是一种特殊的抽象类，也是一个特殊的类，可实现多继承</li><li>接口中的所有方法都必须是抽象方法</li><li>接口中的属性必须是常量</li><li>一个类可以实现多个接口</li></ol><h3 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h3><ol><li><strong>final</strong>  用来修饰类和方法，不能再有子类或者被继承</li><li><strong>static</strong>  声明静态类的成员</li></ol><h3 id="重写和重载"><a href="#重写和重载" class="headerlink" title="重写和重载"></a>重写和重载</h3><h4 id="重写-Override"><a href="#重写-Override" class="headerlink" title="重写(Override)"></a>重写(Override)</h4><p>子类对父类的方法进行重写，返回值和形参都不能改变，只改变方法体</p><p>方法重写的关键是：在子类中创建与父类相同的方法</p><h4 id="重载-Overload"><a href="#重载-Overload" class="headerlink" title="重载(Overload)"></a>重载(Overload)</h4><p>重载(overloading) 是在一个类里面，方法名字相同，而参数不同。返回类型可以相同也可以不同。</p><p>每个重载的方法（或者构造函数）都必须有一个独一无二的参数类型列表。</p><h3 id="简答题-1"><a href="#简答题-1" class="headerlink" title="简答题"></a>简答题</h3><h4 id="表单传值方式有什么，简述其区别"><a href="#表单传值方式有什么，简述其区别" class="headerlink" title="表单传值方式有什么，简述其区别"></a>表单传值方式有什么，简述其区别</h4><ol><li>get   post </li><li>get  明文传输 ，不安全，传输快，传输量小</li><li>post  加密传输 ，安全，传输慢，传输量大</li></ol><h4 id="抽象类和接口的区别"><a href="#抽象类和接口的区别" class="headerlink" title="抽象类和接口的区别"></a>抽象类和接口的区别</h4><ol><li>【继承方式】抽象类的操作通过继承关键字extends实现，而接口的使用是通过implements关键字来实现</li><li>【属性】 抽象类中有数据成员，可以实现数据的封装，但是接口没有数据成员</li><li>【构造方法】抽象类中可以有构造方法，但是接口没有构造方法</li><li>【修饰符】抽象类的方法可以通过private、protected、public关键字修饰（抽象方法不能是private），而接口中的方法只能使用public关键字修饰</li><li>【继承关系】一个类只能继承于一个抽象类（单继承），而一个类可以同时实现多个接口。（抽象类只能被单继承，接口可以被多实现）</li><li>【普通方法】抽象类中可以有成员方法的实现代码，而接口中不可以有成员方法的实现代码</li><li>抽象类是单继承、接口是多实现</li></ol><h4 id="三个（public-protected-private）权限修饰符，修饰的范围"><a href="#三个（public-protected-private）权限修饰符，修饰的范围" class="headerlink" title="三个（public protected  private）权限修饰符，修饰的范围"></a>三个（public protected  private）权限修饰符，修饰的范围</h4><ol><li>public修饰的成员为公有的，可以在类内、子类以及类外进行访问</li><li>protected修饰的成员为受保护的，可以在类内和子类中访问</li><li>private修饰的成员为私有的，只能在本类内进行访问</li></ol><h4 id="请写出封装的含义？为什么"><a href="#请写出封装的含义？为什么" class="headerlink" title="请写出封装的含义？为什么"></a>请写出封装的含义？为什么</h4><p>主要是为了安全和方便。隐藏不想让外界直接访问到的属性或实现细节（方法），只提供访问入口</p><h4 id="请写出继承的含义？为什么"><a href="#请写出继承的含义？为什么" class="headerlink" title="请写出继承的含义？为什么"></a>请写出继承的含义？为什么</h4><p>派生类（子类）自动继承一个或多个基类（父类）中的非私有的属性和方法，并可以重写或添加新的属性或方法</p><p>代码复用</p><h4 id="请写出多态的含义？为什么"><a href="#请写出多态的含义？为什么" class="headerlink" title="请写出多态的含义？为什么"></a>请写出多态的含义？为什么</h4><p>同一类的不同对象使用同一个方法可以获得不同的结果，并可以进行方法的重写，增加了软件的灵活性和重用性</p><h4 id="什么是抽象类"><a href="#什么是抽象类" class="headerlink" title="什么是抽象类"></a>什么是抽象类</h4><ol><li>抽象类和普通类相似，都可以有成员变量和成员方法（普通方法），但不能是private的</li><li>要有一个抽象方法。即使用abstract修饰的没有方法体的方法</li><li>若一个类中存在一个抽象方法，则该类必须声明为抽象类，但一个抽象类中不是必须有抽象方法（抽象类中可以没有抽象方法）</li></ol><h4 id="简述什么是MVC"><a href="#简述什么是MVC" class="headerlink" title="简述什么是MVC"></a>简述什么是MVC</h4><ol><li>Model（模型）<ol><li>是应用程序中用于处理应用程序数据逻辑的部分</li><li>通常模型对象负责在数据库中存取数据</li></ol></li><li>View（视图）<ol><li>是应用程序中处理数据显示的部分</li><li>通常视图是依据模型数据创建的</li></ol></li><li>Controller（控制器）<ol><li>是应用程序中处理用户交互的部分</li><li>通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据</li></ol></li></ol><h4 id="列出几种设计模式"><a href="#列出几种设计模式" class="headerlink" title="列出几种设计模式"></a>列出几种设计模式</h4><p>工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式</p><p>适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式</p><h4 id="final修饰的类和方法具有什么特点"><a href="#final修饰的类和方法具有什么特点" class="headerlink" title="final修饰的类和方法具有什么特点"></a>final修饰的类和方法具有什么特点</h4><ol><li>可以修饰类和方法，但不能修饰成员属性</li><li>final修饰的类，不能被继承</li><li>final修饰的成员方法，在子类中不能被重写</li></ol><hr><div class="note danger">            <p>🍉🍉🍉Spring Boot</p>          </div><h2 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h2><h3 id="什么是-Spring-Boot"><a href="#什么是-Spring-Boot" class="headerlink" title="什么是 Spring Boot"></a>什么是 Spring Boot</h3><p>Spring Boot是Spring社区发布的一个开源项目，旨在帮助开发者快速并且更简单的构建项目。大多数SpringBoot项目只需要很少的配置文件。开箱即用 约定大于配置 </p><h3 id="SpringBoot自动配置的原理"><a href="#SpringBoot自动配置的原理" class="headerlink" title="SpringBoot自动配置的原理"></a>SpringBoot自动配置的原理</h3><p>在spring程序main方法中 添加@SpringBootApplication或者@EnableAutoConfiguration<br>会自动去maven中读取每个starter中的spring.factories文件 该文件里配置了所有需要被创建spring容器中的bean</p><h3 id="SprinBoot读取配置文件的方式"><a href="#SprinBoot读取配置文件的方式" class="headerlink" title="SprinBoot读取配置文件的方式"></a>SprinBoot读取配置文件的方式</h3><p>springboot默认读取配置文件为application.properties或者是application.yml</p><h3 id="SpringBoot优缺点"><a href="#SpringBoot优缺点" class="headerlink" title="SpringBoot优缺点"></a>SpringBoot优缺点</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><ol><li>快速构建项目</li><li>对主流开发框架的无配置集成。</li><li>项目可独立运行，无须外部依赖Servlet容器。</li><li>提供运行时的应用监控。</li><li>极大的提高了开发、部署效率。</li><li>与云计算的天然集成。</li></ol><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><p>如果你不认同spring框架，也许这就是缺点。</p><h3 id="SpringBoot几个常用的注解"><a href="#SpringBoot几个常用的注解" class="headerlink" title="SpringBoot几个常用的注解"></a>SpringBoot几个常用的注解</h3><ol><li>@RestController和@Controller指定一个类，作为控制器的注解 </li><li>@RequestMapping方法级别的映射注解，这一个用过Spring MVC的小伙伴相信都很熟悉 </li><li>@EnableAutoConfiguration和@SpringBootApplication是类级别的注解，根据maven依赖的jar来自动猜测完成正确的spring的对应配置，只要引入了spring-boot-starter-web的依赖，默认会自动配置Spring MVC和tomcat容器</li><li>@Configuration类级别的注解，一般这个注解，我们用来标识main方法所在的类,完成元数据bean的初始化。</li><li>@ComponentScan类级别的注解，自动扫描加载所有的Spring组件包括Bean注入，一般用在main方法所在的类上 </li><li>@ImportResource类级别注解，当我们必须使用一个xml的配置时，使用@ImportResource和@Configuration来标识这个文件资源的类。 </li><li>@Autowired注解，一般结合@ComponentScan注解，来自动注入一个Service或Dao级别的Bean</li><li>@Component类级别注解，用来标识一个组件，比如我自定了一个filter，则需要此注解标识之后，Spring Boot才会正确识别。</li></ol><h3 id="spring的IOC-和AOP"><a href="#spring的IOC-和AOP" class="headerlink" title="spring的IOC 和AOP"></a>spring的IOC 和AOP</h3><h4 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h4><p>IOC 控制反转<br>首先：IOC（Inverse of Contro）控制反转，有时候也被称为DI依赖注入，它是一种降低对象耦合关系的一种设计思想。</p><h4 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h4><p>AOP  切面编程<br>概念：AOP面向切面编程，是面向对象开发的一种补充，它允许开发人员在不改变原来模型的以满足新的需求，例如，开发人员可以在不改变原来业务逻辑模型的基础可以进行动态的增加日志，安全或异常处理功能。</p><a class="btn-beautify button--animated blue larger" href="https://jinan6.vip/posts/1864766114/" title="点击这里查看更多"><i class="far fa-hand-point-right fa-fw"></i><span>点击这里查看更多</span></a><hr><div class="note default">            <p>🍒🍒🍒Mybatis</p>          </div><h2 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h2><h3 id="什么是MyBatis？"><a href="#什么是MyBatis？" class="headerlink" title="什么是MyBatis？"></a>什么是MyBatis？</h3><p>MyBatis是一个可以自定义SQL、存储过程和高级映射的持久层框架。</p><h3 id="请描述下MyBatis的缓存"><a href="#请描述下MyBatis的缓存" class="headerlink" title="请描述下MyBatis的缓存?"></a>请描述下MyBatis的缓存?</h3><p>MyBatis的缓存分为一级缓存和二级缓存,一级缓存放在session里面,默认就有,二级缓存放在它的命名空间里,默认是不打开的,使用二级缓存属性类需要实现Serializable序列化接口(可用来保存对象的状态),可在它的映射文件中配置&lt; cache/&gt;</p><h3 id="和-的区别是什么？"><a href="#和-的区别是什么？" class="headerlink" title="#{}和${}的区别是什么？"></a>#{}和${}的区别是什么？</h3><ol><li>#{}是预编译处理，${}是字符串替换。</li><li>Mybatis在处理#{}时，会将sql中的#{}替换为?号，调用PreparedStatement的set方法来赋值；</li><li>Mybatis在处理${}时，就是把${}替换成变量的值。</li><li>使用#{}可以有效的防止SQL注入，提高系统安全性。</li></ol><h3 id="MyBatis框架适用场合"><a href="#MyBatis框架适用场合" class="headerlink" title="MyBatis框架适用场合?"></a>MyBatis框架适用场合?</h3><ol><li>MyBatis专注于SQL本身，是一个足够灵活的DAO层解决方案</li><li>对性能的要求很高，或者需求变化较多的项目，如互联网项目，MyBatis将是不错的选择</li></ol><a class="btn-beautify button--animated orange larger" href="https://jinan6.vip/posts/3661501281/" title="点击这里查看更多"><i class="far fa-hand-point-right fa-fw"></i><span>点击这里查看更多</span></a><hr><div class="note success">            <p>🌿🌿🌿Linux</p>          </div><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="填空"><a href="#填空" class="headerlink" title="填空"></a>填空</h3><ol><li>默认情况下，超级用户和普通用户的登录提示符分别是<code>#</code>和<code>$</code></li><li>Linux系统中有三种基本的文件类型 <code>普通文件</code>、<code>目录文件</code>、<code>设备文件</code></li><li>跳到/usr/bin 命令为 <code>d  /usr/bin</code>，跳到目前目录的上上两层 <code>cd  ../..</code></li><li>查看目录命令为<code>ls</code>；列出目录下的所有文件<code>-a</code>；列出文件的详细信息<code>-l</code></li><li><code>cat</code>命令用于显示文本内容时，加选项 <code>-n</code> 可以在显示时加上行编号.</li><li>分屏显示命令：<code>more</code> ，清除屏幕命令<code>clear</code> 。</li><li>复制命令<code>cp</code>，复制时删除已经存在的目标文件而不提示 <code>-f</code> ，递归复制该目录下所有的子目录和文件命令 <code>-r</code></li><li>删除命令 <code>rm</code></li><li>在当前目录下创建目录abc：<code>#mkdir abc</code> ,创建多级目录a/b/c：<code>#mkdir -p a/b/c</code></li><li>用户有唯一的用户标识符<code>uid</code>  ,组标识符<code>gid</code>。</li><li>显示当前目录：<code>pwd</code></li><li>删除一个非空子目录：<code>rm -rf /tmp</code></li><li>存放用户帐号的文件：<code>passwd</code></li><li>删除文件命令：<code>rm</code></li><li>列出当前目录以及子目录下所有扩展名：<code>find . –name 文件名称</code></li><li>设定使用者的密码：<code>passwd</code></li><li>切换使用者身份：<code>su</code></li><li>文件重命名的命令：<code>mv</code></li><li>可以显示目录的大小：<code>du</code></li><li>下面哪个系统目录中存放了启动时使用的一些文件和目录：<code>/boot</code></li><li>如何删除目录 /tmp下的所有文件及子目录：<code>rm –rf /tmp/*</code></li><li>把当前目录下的 file1.txt 复制为 file2.txt的命令：<code>cat file1.txt &gt; file2.txt</code></li><li>如果执行命令 #chmod 746 file.txt，那么该文件的权限是：<code>rwx--r--rw</code> （对应746）</li><li>vim退出不保存的命令：<code>:q!</code></li><li>全屏文本编辑器：<code>v</code> </li></ol><h3 id="Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是"><a href="#Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是" class="headerlink" title="Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是"></a>Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是</h3><ol><li>r（read）读</li><li>w（write） 写</li><li>x （execute） 执行</li></ol><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><ol><li>目录<ol><li>r权限(READ，读取)  和 x权限(EXCUTE，执行) 的结合才允许列出目录的内容。w权限(WRITE，写入) 和 x权限(ExCUTE，执行) 的结合 则允许在目录中创建、删除和重新命名文件。</li></ol></li><li>文件<ol><li>文件不用结合x权限 </li></ol></li></ol><h3 id="若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因"><a href="#若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因" class="headerlink" title="若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因"></a>若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因</h3><ol><li>此目录可能不存在</li><li>目录不为空</li><li>目录中有隐含文件存在</li><li>目录被设置了权限，解决方法：先修改权限，在使用rm_r命令删除</li></ol><h3 id="与其他操作系统相比，Linux具有那些显著的特点"><a href="#与其他操作系统相比，Linux具有那些显著的特点" class="headerlink" title="与其他操作系统相比，Linux具有那些显著的特点"></a>与其他操作系统相比，Linux具有那些显著的特点</h3><ol><li>模块化程度高</li><li>源码公开</li><li>广泛的硬件支持</li><li>安全性及可靠性好</li><li>有很好的网络支持和文件系统支持</li><li>与UNIX完全兼容</li></ol><h3 id="vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换"><a href="#vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换" class="headerlink" title="vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换"></a>vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换</h3><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><p>在命令模式下输入a、A、i、I、o、O等命令之一可以进入输入模式，</p><h4 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h4><p>在输入模式下按Esc键回到命令模式</p><h4 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h4><p>在命令模式下按下:（英文冒号）就进入了末行模式末行命令执行完后回到命令模式</p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><h3 id="linux试述如何创建一个用户"><a href="#linux试述如何创建一个用户" class="headerlink" title="linux试述如何创建一个用户"></a>linux试述如何创建一个用户</h3><p>可使用命令useradd创建新用户，但不能在系统中随便创建用户，</p><p>需经相关部分批准后方能创建。对于长期或暂时不使用的用户，应将其从</p><p>系统中删除或锁定起来，以防非法使用。创建新用户时可以使用命令useradd -d </p><p>home newuser指定用户家目录，若不指定则使用默认的家目录/home/newuser。一般情况下，</p><p>当一个用户被创建之后，只有超级用户为它设置密码后才能被启用或登录使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">useradd test &#x2F;&#x2F;*建立用户test*&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">passwd test &#x2F;&#x2F;*设置用户test密码*&#x2F;&#x2F;</span><br><span class="line">        修改&#x2F;etc&#x2F;password文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;  2</span><br><span class="line">useradd 选项 用户名</span><br><span class="line"></span><br><span class="line">参数说明：选项 :</span><br><span class="line">   -c comment 指定一段注释性描述。</span><br><span class="line">   -d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</span><br><span class="line">   -g 用户组 指定用户所属的用户组。</span><br><span class="line">   -G 用户组，用户组 指定用户所属的附加组。</span><br><span class="line">   -m　使用者目录如不存在则自动建立。</span><br><span class="line">   -s Shell文件 指定用户的登录Shell。</span><br><span class="line">   -u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识</span><br></pre></td></tr></table></figure><hr><div class="note info">            <p>🍍🍍🍍其他</p>          </div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>json是一种轻量级的数据交换格式。</p><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">　　　　url : <span class="string">"Servlet"</span>,　　　　<span class="comment">//传地址</span></span><br><span class="line">　　　　type : <span class="string">"post"</span>,　　　　<span class="comment">//类型 </span></span><br><span class="line">　　　　async : <span class="string">"true"</span>,　　　　<span class="comment">//是否异步</span></span><br><span class="line">　　　　data : &#123; <span class="string">"action"</span>: <span class="string">"action"</span> &#125;,　　<span class="comment">//数据</span></span><br><span class="line">　　　　dataType : <span class="string">"json"</span>,　　　　　　<span class="comment">//数据格式</span></span><br><span class="line">　　　　success : function(data)&#123;　　　　<span class="comment">//成功后操作</span></span><br><span class="line">　　　　　　alert(<span class="string">"AJAX"</span>);</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　&#125;);</span><br></pre></td></tr></table></figure><h3 id="同步和异步"><a href="#同步和异步" class="headerlink" title="同步和异步"></a>同步和异步</h3><p><strong>同步方法</strong>调用一但开始，调用者必须等到方法调用返回后，才能继续向后执行</p><p><strong>异步方法</strong>调用一但开始，方法调用就会立即返回，可以继续向后执行</p><p>异步方法通常会在另一个线程中执行，整个过程，不会阻碍调用者的工作</p><p><strong>同步：</strong></p><p>同步的思想是：所有的操作都做完，才返回给用户。这样用户在线等待的时间太长，给用户一种卡死了的感觉（就是系统迁移中，点击了迁移，界面就不动了，但是程序还在执行，卡死了的感觉）。这种情况下，用户不能关闭界面，如果关闭了，即迁移程序就中断了。</p><p><strong>异步：</strong></p><p>将用户请求放入消息队列，并反馈给用户，系统迁移程序已经启动，你可以关闭浏览器了。然后程序再慢慢地去写入数据库去。这就是异步。但是用户没有卡死的感觉，会告诉你，你的请求系统已经响应了。你可以关闭界面了。</p><h3 id="JDBC的优缺点"><a href="#JDBC的优缺点" class="headerlink" title="JDBC的优缺点"></a>JDBC的优缺点</h3><h4 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a>优点：</h4><p>直接底层操作，提供了很简单，便捷的访问数据库的方法，跨平台型比较强，灵活性比较强，可以写很复杂的SQL语句</p><h4 id="缺点：-1"><a href="#缺点：-1" class="headerlink" title="缺点："></a>缺点：</h4><p>操作比较繁琐。很多代码需要重复写很多次</p><p>如果遇到批量操作，频繁与数据库进行交互，容易造成效率的下降</p><p>JDBC没有做到使数据能够面向对象的编程，使程序员的思考仍停留在SQL语句上</p><h3 id="数组的两个异常"><a href="#数组的两个异常" class="headerlink" title="数组的两个异常"></a>数组的两个异常</h3><ol><li>下标越界异常</li><li>空指针异常</li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>emoji速查</title>
      <link href="/posts/709269996/"/>
      <url>/posts/709269996/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>emoji速查，可以直接复制使用</p>          </div><p>🌹🍀🍎💰📱🌙🍁🍂🍃🌷💎🔪🔫🏀⚽⚡👄👍🔥</p><h3 id="emoji表情"><a href="#emoji表情" class="headerlink" title="emoji表情"></a>emoji表情</h3><p>😀😁😂😃😄😅😆😉😊😋😎😍😘😗😙😚☺😇😐😑😶😏😣😥😮😯😪😫😴😌😛😜😝😒😓😔😕😲😷😖😞😟😤😢😭😦😧😨😬😰😱😳😵😡😠</p><h3 id="emoji人物"><a href="#emoji人物" class="headerlink" title="emoji人物"></a>emoji人物</h3><p>👦👧👨👩👴👵👶👱👮👲👳👷👸💂🎅👰👼💆💇🙍🙎🙅🙆💁🙋🙇🙌🙏👤👥🚶🏃👯💃👫👬👭💏💑👪</p><h3 id="emoji手势"><a href="#emoji手势" class="headerlink" title="emoji手势"></a>emoji手势</h3><p>💪👈👉☝👆👇✌✋👌👍👎✊👊👋👏👐✍</p><h3 id="emoji日常"><a href="#emoji日常" class="headerlink" title="emoji日常"></a>emoji日常</h3><p>👣👀👂👃👅👄💋👓👔👕👖👗👘👙👚👛👜👝🎒💼👞👟👠👡👢👑👒🎩🎓💄💅💍🌂</p><h3 id="emoji手机"><a href="#emoji手机" class="headerlink" title="emoji手机"></a>emoji手机</h3><p>📱📲📶📳📴☎📞📟📠</p><h3 id="emoji公共"><a href="#emoji公共" class="headerlink" title="emoji公共"></a>emoji公共</h3><p>♻🏧🚮🚰♿🚹🚺🚻🚼🚾⚠🚸⛔🚫🚳🚭🚯🚱🚷🔞💈</p><h3 id="emoji动物"><a href="#emoji动物" class="headerlink" title="emoji动物"></a>emoji动物</h3><p>🙈🙉🙊🐵🐒🐶🐕🐩🐺🐱😺😸😹😻😼😽🙀😿😾🐈🐯🐅🐆🐴🐎🐮🐂🐃🐄🐷🐖🐗🐽🐏🐑🐐🐪🐫🐘🐭🐁🐀🐹🐰🐇🐻🐨🐼🐾🐔🐓🐣🐤🐥🐦🐧🐸🐊🐢🐍🐲🐉🐳🐋🐬🐟🐠🐡🐙🐚🐌🐛🐜🐝🐞🦋</p><h3 id="emoji植物"><a href="#emoji植物" class="headerlink" title="emoji植物"></a>emoji植物</h3><p>💐🌸💮🌹🌺🌻🌼🌷🌱🌲🌳🌴🌵🌾🌿🍀🍁🍂🍃</p><h3 id="emoji自然"><a href="#emoji自然" class="headerlink" title="emoji自然"></a>emoji自然</h3><p>🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜☀🌝🌞⭐🌟🌠☁⛅☔⚡❄🔥💧🌊</p><h3 id="emoji饮食"><a href="#emoji饮食" class="headerlink" title="emoji饮食"></a>emoji饮食</h3><p>🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍅🍆🌽🍄🌰🍞🍖🍗🍔🍟🍕🍳🍲🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🍡🍦🍧🍨🍩🍪🎂🍰🍫🍬🍭🍮🍯🍼☕🍵🍶🍷🍸🍹🍺🍻🍴</p><h3 id="emoji文体"><a href="#emoji文体" class="headerlink" title="emoji文体"></a>emoji文体</h3><p>🎪🎭🎨🎰🚣🛀🎫🏆⚽⚾🏀🏈🏉🎾🎱🎳⛳🎣🎽🎿🏂🏄🏇🏊🚴🚵🎯🎮🎲🎷🎸🎺🎻🎬</p><h3 id="emoji恐怖"><a href="#emoji恐怖" class="headerlink" title="emoji恐怖"></a>emoji恐怖</h3><p>😈👿👹👺💀☠👻👽👾💣</p><h3 id="emoji旅游"><a href="#emoji旅游" class="headerlink" title="emoji旅游"></a>emoji旅游</h3><p>🌋🗻🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪⛲🌁🌃🌆🌇🌉🌌🎠🎡🎢🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚚🚛🚜🚲⛽🚨🚥🚦🚧⚓⛵🚤🚢✈💺🚁🚟🚠🚡🚀🎑🗿🛂🛃🛄🛅</p><h3 id="emoji物品"><a href="#emoji物品" class="headerlink" title="emoji物品"></a>emoji物品</h3><p>💌💎🔪💈🚪🚽🚿🛁⌛⏳⌚⏰🎈🎉🎊🎎🎏🎐🎀🎁📯📻📱📲☎📞📟📠🔋🔌💻💽💾💿📀🎥📺📷📹📼🔍🔎🔬🔭📡💡🔦🏮📔📕📖📗📘📙📚📓📃📜📄📰📑🔖💰💴💵💶💷💸💳✉📧📨📩📤📥📦📫📪📬📭📮✏✒📝📁📂📅📆📇📈📉📊📋📌📍📎📏📐✂🔒🔓🔏🔐🔑🔨🔫🔧🔩🔗💉💊🚬🔮🚩🎌💦💨</p><h3 id="emoji标志"><a href="#emoji标志" class="headerlink" title="emoji标志"></a>emoji标志</h3><p>♠♥♦♣🀄🎴🔇🔈🔉🔊📢📣💤💢💬💭♨🌀🔔🔕✡✝🔯📛🔰🔱⭕✅☑✔✖❌❎➕➖➗➰➿〽✳✴❇‼⁉❓❔❕❗©®™🎦🔅🔆💯🔠🔡🔢🔣🔤🅰🆎🅱🆑🆒🆓ℹ🆔Ⓜ🆕🆖🅾🆗🅿🆘🆙🆚🈁🈂🈷🈶🈯🉐🈹🈚🈲🉑🈸🈴🈳㊗㊙🈺🈵▪▫◻◼◽◾⬛⬜🔶🔷🔸🔹🔺🔻💠🔲🔳⚪⚫🔴🔵</p><h3 id="emoji生肖"><a href="#emoji生肖" class="headerlink" title="emoji生肖"></a>emoji生肖</h3><p>🐁🐂🐅🐇🐉🐍🐎🐐🐒🐓🐕🐖</p><h3 id="emoji心形"><a href="#emoji心形" class="headerlink" title="emoji心形"></a>emoji心形</h3><p>💘❤💓💔💕💖💗💙💚💛💜💝💞💟❣</p><h3 id="emoji花草"><a href="#emoji花草" class="headerlink" title="emoji花草"></a>emoji花草</h3><p>💐🌸💮🌹🌺🌻🌼🌷🌱🌿🍀</p><h3 id="emoji树叶"><a href="#emoji树叶" class="headerlink" title="emoji树叶"></a>emoji树叶</h3><p>🌿🍀🍁🍂🍃</p><h3 id="emoji月亮"><a href="#emoji月亮" class="headerlink" title="emoji月亮"></a>emoji月亮</h3><p>🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜🌝</p><h3 id="emoji水果"><a href="#emoji水果" class="headerlink" title="emoji水果"></a>emoji水果</h3><p>🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓</p><h3 id="emoji钱币"><a href="#emoji钱币" class="headerlink" title="emoji钱币"></a>emoji钱币</h3><p>💴💵💶💷💰💸💳</p><h3 id="emoji交通"><a href="#emoji交通" class="headerlink" title="emoji交通"></a>emoji交通</h3><p>🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚚🚛🚜🚲⛽🚨🚥🚦🚧⚓⛵🚣🚤🚢✈💺🚁🚟🚠🚡🚀</p><h3 id="emoji建筑"><a href="#emoji建筑" class="headerlink" title="emoji建筑"></a>emoji建筑</h3><p>🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪🌆🌇🌉</p><h3 id="emoji办公"><a href="#emoji办公" class="headerlink" title="emoji办公"></a>emoji办公</h3><p>📱📲☎📞📟📠🔋🔌💻💽💾💿📀🎥📺📷📹📼🔍🔎🔬🔭📡📔📕📖📗📘📙📚📓📃📜📄📰📑🔖💳✉📧📨📩📤📥📦📫📪📬📭📮✏✒📝📁📂📅📆📇📈📉📊📋📌📍📎📏📐✂🔒🔓🔏🔐🔑</p>]]></content>
      
      
      <categories>
          
          <category> emoji </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emoji </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis</title>
      <link href="/posts/3661501281/"/>
      <url>/posts/3661501281/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>mybatis相关内容</p>          </div><p>在使用MyBatis的时候,除了可以使用@Param注解来实现多参数入参,还可以用（<strong>A</strong>）传递多个参数值。</p><p>​        A.用Map对象可以实现传递多参数值</p><p>​        B.用List对象可以实现传递多参数值</p><p>​        C.用数组的方式传递</p><p>​        D.用Set集合的方式传递</p><h3 id="什么是MyBatis"><a href="#什么是MyBatis" class="headerlink" title="什么是MyBatis"></a>什么是MyBatis</h3><p>MyBatis是一个可以自定义SQL、存储过程和高级映射的持久层框架</p><h3 id="MyBatis的缓存"><a href="#MyBatis的缓存" class="headerlink" title="MyBatis的缓存"></a>MyBatis的缓存</h3><p>MyBatis 的缓存分为一级缓存和二级缓存，一级缓存放在 session里面，默认就有，二级缓存放在它的命名空间里，默认是不打开的，使用二级缓存，属性类需要实现Serializable序列化接口（可用来保存对象的状态），可在它的映射文件中配置&lt; cache/&gt;</p><h3 id="和-的区别是什么"><a href="#和-的区别是什么" class="headerlink" title="#{}和${}的区别是什么"></a>#{}和${}的区别是什么</h3><p>#{}是预编译处理，${}是字符串替换</p><p>mybatis 在处理#{}时，会将SQL中的#{}替换为？号，调用PreparedStatement的set方法来赋值</p><p>Mybatis在处理时，就是把${}替换成变量的值。</p><p>使用#{}可以有效的防止SQL注入，提高系统安全性。</p><h3 id="MyBatis框架适用场合"><a href="#MyBatis框架适用场合" class="headerlink" title="MyBatis框架适用场合"></a>MyBatis框架适用场合</h3><ol><li>MyBatis专注于SQL本身，是一个足够灵活的DAO层解决方案</li><li>对性能的要求很高，或者需求变化较多的项目，如互联网项目，MyBatis将是不错的选择。</li></ol><h3 id="Mybatis分为哪三层"><a href="#Mybatis分为哪三层" class="headerlink" title="Mybatis分为哪三层"></a>Mybatis分为哪三层</h3><ol><li>API接口层：提供给外部使用的接口API</li><li>数据处理层：负责具体的SQL</li><li>基础支撑层：负责最基本的功能支撑，如连接管理，事务管理，配置加载和缓存处理</li></ol><h3 id="什么情况下用注解绑定-什么情况下用xml绑定"><a href="#什么情况下用注解绑定-什么情况下用xml绑定" class="headerlink" title="什么情况下用注解绑定,什么情况下用xml绑定"></a>什么情况下用注解绑定,什么情况下用xml绑定</h3><p>当Sql语句比较简单时候,用注解绑定；当SQL语句比较复杂时候,用xml绑定,一般用xml绑定的比较多</p><h3 id="在mapper中如何传递多个参数"><a href="#在mapper中如何传递多个参数" class="headerlink" title="在mapper中如何传递多个参数"></a>在mapper中如何传递多个参数</h3><ol><li>直接在方法中传递参数，xml文件用#{0} #{1}来获取</li><li>使用 @param 注解:这样可以直接在xml文件中通过#{name}来获取</li></ol><h3 id="resultType-resultMap的区别"><a href="#resultType-resultMap的区别" class="headerlink" title="resultType resultMap的区别"></a>resultType resultMap的区别</h3><ol><li>类的名字和数据库相同时，可以直接设置resultType参数为Pojo类</li><li>若不同，需要设置resultMap 将结果名字和Pojo名字进行转换</li></ol><h3 id="MyBatis的好处是什么"><a href="#MyBatis的好处是什么" class="headerlink" title="MyBatis的好处是什么"></a>MyBatis的好处是什么</h3><ol><li>MyBatis把sql语句从Java源程序中独立出来，放在单独的XML文件中编写，给程序的维护带来了很大便利。</li><li>MyBatis封装了底层JDBC API的调用细节，并能自动将结果集转换成Java Bean对象，大大简化了Java数据库编程的重复工作。</li><li>因为MyBatis需要程序员自己去编写sql语句，程序员可以结合数据库自身的特点灵活控制sql语句，因此能够实现比Hibernate等全自动orm框架更高的查询效率，能够完成复杂查询。</li></ol><h3 id="什么是Mybatis的接口绑定，有什么好处"><a href="#什么是Mybatis的接口绑定，有什么好处" class="headerlink" title="什么是Mybatis的接口绑定，有什么好处"></a>什么是Mybatis的接口绑定，有什么好处</h3><p>Mybatis实现了DAO接口与xml映射文件的绑定，自动为我们生成接口的具体实现，使用起来变得更加省事和方便。</p><h3 id="Mybatis的好处"><a href="#Mybatis的好处" class="headerlink" title="Mybatis的好处"></a>Mybatis的好处</h3><p>把Sql语句从Java中独立出来。</p><p>封装了底层的JDBC，API的调用，并且能够将结果集自动转换成JavaBean对象，简化了Java数据库编程的重复工作。</p><p>自己编写Sql语句，更加的灵活。</p><p>入参无需用对象封装（或者map封装）,使用@Param注解</p><h3 id="Mybatis配置一对多"><a href="#Mybatis配置一对多" class="headerlink" title="Mybatis配置一对多"></a>Mybatis配置一对多</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"topicComment"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">ofType</span>=<span class="string">"com.tmf.bbs.pojo.Comment"</span> <span class="attr">select</span>=<span class="string">"selectComment"</span> /&gt;</span></span><br><span class="line">property：属性名</span><br><span class="line">column：共同列</span><br><span class="line">ofType：集合中元素的类型</span><br><span class="line">select：要连接的查询</span><br></pre></td></tr></table></figure><h3 id="Mybatis配置一对一"><a href="#Mybatis配置一对一" class="headerlink" title="Mybatis配置一对一"></a>Mybatis配置一对一</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"topicType"</span> <span class="attr">select</span>=<span class="string">"selectType"</span> <span class="attr">column</span>=<span class="string">"topics_type_id"</span> <span class="attr">javaType</span>=<span class="string">"com.tmf.bbs.pojo.Type"</span>/&gt;</span></span><br><span class="line">property：属性名</span><br><span class="line">select：要连接的查询</span><br><span class="line">column：共同列</span><br><span class="line">javaType：集合中元素的类型</span><br></pre></td></tr></table></figure><h3 id="Mybatis的优点"><a href="#Mybatis的优点" class="headerlink" title="Mybatis的优点"></a>Mybatis的优点</h3><ol><li>基于 SQL 语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL 写在 XML 里，解除 sql 与程序代码的耦合，便于统一管理；提供 XML标签，支持编写动态 SQL 语句，并可重用。</li><li>与 JDBC 相比，减少了 50%以上的代码量，消除了 JDBC 大量冗余的代码，不需要手动开关连接；</li><li>很好的与各种数据库兼容（因为 MyBatis 使用 JDBC 来连接数据库，所以只要JDBC 支持的数据库 MyBatis 都支持）。</li><li>能够与 Spring 很好的集成；</li><li>提供映射标签，支持对象与数据库的 ORM 字段关系映射；提供对象关系映射标签，支持对象关系组件维护。</li></ol><h3 id="Mybatis的缺点"><a href="#Mybatis的缺点" class="headerlink" title="Mybatis的缺点"></a>Mybatis的缺点</h3><p>SQL 语句的编写工作量较大，尤其当字段多、关联表多时，对开发人员编写</p><p>SQL 语句的功底有一定要求。</p><p>SQL 语句依赖于数据库，导致数据库移植性差，不能随意更换数据库。</p><h3 id="MyBatis-框架适用场合"><a href="#MyBatis-框架适用场合" class="headerlink" title="MyBatis 框架适用场合"></a>MyBatis 框架适用场合</h3><p>MyBatis 专注于 SQL 本身，是一个足够灵活的 DAO 层解决方案。</p><p>对性能的要求很高，或者需求变化较多的项目，如互联网项目，MyBatis 将是</p><p>不错的选择。</p><h3 id="Mybais-基本注解有什么"><a href="#Mybais-基本注解有什么" class="headerlink" title="Mybais 基本注解有什么"></a>Mybais 基本注解有什么</h3><ol><li>@Insert简单插入</li><li>@Upload简单修改</li><li>@Delete简单删除</li><li>@Select简单查询</li></ol><h3 id="Mybatis的表关联的映射有哪几种"><a href="#Mybatis的表关联的映射有哪几种" class="headerlink" title="Mybatis的表关联的映射有哪几种"></a>Mybatis的表关联的映射有哪几种</h3><p>一对一查询： 一对多查询： 多对多查询：</p><h3 id="JDBC缺点是什么"><a href="#JDBC缺点是什么" class="headerlink" title="JDBC缺点是什么"></a>JDBC缺点是什么</h3><p>结果处理存在着重复代码，处理相当的麻烦，sql写在代码中不好维护，频繁的创建数据库连接对象容易造成系统资源的浪费。</p><h3 id="mybatis是如何解决JDBC存在的问题"><a href="#mybatis是如何解决JDBC存在的问题" class="headerlink" title="mybatis是如何解决JDBC存在的问题"></a>mybatis是如何解决JDBC存在的问题</h3><p>比mybatis将sql语句配置在一个xml文件中与Java代码分离，这样利于维护，还有mybatis将自动封装Java对象映射到sql语句</p><h3 id="实现一对多有哪几种方式"><a href="#实现一对多有哪几种方式" class="headerlink" title="实现一对多有哪几种方式"></a>实现一对多有哪几种方式</h3><p>两种方式：联合查询、嵌套查询两个方式。嵌套查询它是先查一个表，然后根据这个表里的外键ID，再去另一个表里查询数据。联合查询它是通过几个表一起联合查询的，只查询一次。</p><h3 id="使用Mybatis框架时-当实体类中的属性名和表中的字段名不一样，怎么办"><a href="#使用Mybatis框架时-当实体类中的属性名和表中的字段名不一样，怎么办" class="headerlink" title="使用Mybatis框架时 当实体类中的属性名和表中的字段名不一样，怎么办"></a>使用Mybatis框架时 当实体类中的属性名和表中的字段名不一样，怎么办</h3><ol><li>写sql语句时起别名，别名跟类名属性保持一致</li><li>在Mapper映射中使用resultMap来自定义映射规则</li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot</title>
      <link href="/posts/1864766114/"/>
      <url>/posts/1864766114/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>Spring Boot 相关内容</p>          </div><h3 id="什么是-Spring-Boot"><a href="#什么是-Spring-Boot" class="headerlink" title="什么是 Spring Boot"></a>什么是 Spring Boot</h3><p>Spring Boot 是Spring社区发布的一个开源项目，旨在帮助开发者快速并且更简单的构建项目。大多数Spring Boot 项目只需要很少的配置文件。</p><h3 id="Spring-Boot-自动装配的原理"><a href="#Spring-Boot-自动装配的原理" class="headerlink" title="Spring Boot 自动装配的原理"></a>Spring Boot 自动装配的原理</h3><p>在 spring 程序中 main方法中，添加<strong>@SpringBootApplication</strong> 或者 <strong>@EnableAutoConfiguration</strong> 会自动去maven容器中读取每个 starter 中的<strong>spring.factories</strong>文件，该文件里配置了所有需要被创建spring 容器中的<strong>bean</strong>。</p><h3 id="Spring-Boot-读取配置文件的方式"><a href="#Spring-Boot-读取配置文件的方式" class="headerlink" title="Spring Boot 读取配置文件的方式"></a>Spring Boot 读取配置文件的方式</h3><p>Spring Boot 默认读取配置文件为 application.properties 或者是 application.yml</p><h3 id="Spring-Boot的优缺点"><a href="#Spring-Boot的优缺点" class="headerlink" title="Spring Boot的优缺点"></a>Spring Boot的优缺点</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><ol><li>快速构建项目</li><li>对主流开发框架的无配置集成</li><li>项目可独立运行，无须外部依赖 Servlet 容器</li><li>提供运行时的应用监控</li><li>极大的提高了开发、部署效率</li><li>与云计算的天然集成</li></ol><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><ol><li>如果你不认同spring框架，也许这就是缺点</li></ol><h3 id="Spring-Boot的几个常用注解"><a href="#Spring-Boot的几个常用注解" class="headerlink" title="Spring Boot的几个常用注解"></a>Spring Boot的几个常用注解</h3><ol><li>@RestController 和 @Controller 指定一个类，作为控制器的注解</li><li>@RequestMapping 方法级别的映射注解</li><li>@EnableAutoConfiguration和@SpringBootApplication是类级别的注解，根据maven依赖的 jar 来自动猜测完成正确的 spring 的对应配置，只要引入了spring-boot-starter-web的依赖，默认会自动配置 Spring MVC 和 Tomcat 容器</li><li>@Configuration 类级别的注解，一般这个注解用来标识main 方法所在的类，完成元数据 bean的初始化</li><li>@ComponentScan 类级别的注解，自动扫描加载所有的 Spring 组件包括 Bean注入，一般用在 main方法所在的类上</li><li>@ImportResource 类级别注解，当我们必须使用一个xml的配置时，使用@ImportResource和@Configuration来标识这个文件资源的类</li><li>@Autowired 注解，一般结合@ComponentScan注解，来自动注入一个 Service 或 Dao 级别的Bean</li><li>@Component 类级别注解，用来标识一个组件，比如我自定了一个 filter，则需要用此注解标识后，Spring Boot才会正确识别</li></ol><h3 id="spring的IOC-和AOP"><a href="#spring的IOC-和AOP" class="headerlink" title="spring的IOC 和AOP"></a>spring的IOC 和AOP</h3><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200622090710.jpg" alt></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200622090735.jpg" alt></p><h3 id="Spring-Boot-的核心配置文件有哪几个，区别是什么"><a href="#Spring-Boot-的核心配置文件有哪几个，区别是什么" class="headerlink" title="Spring Boot 的核心配置文件有哪几个，区别是什么"></a>Spring Boot 的核心配置文件有哪几个，区别是什么</h3><p>Spring Boot 的核心配置文件是 application 和bootstrap 配置文件</p><p>application 配置文件，主要用于 Spring Boot 项目的自动化配置</p><p>bootstrap 配置文件有以下应用场景</p><p>使用 Spring Cloud Config 配置中心时，这时需要在 bootstrap 配置文件中添加连接到配置中心的配置属性来加载外部配置中心的配置信息； 一些固定的不能被覆盖的属性；一些加密/解密的场景</p><h3 id="Spring-Boot-的配置文件有哪几种格式，有什么区别"><a href="#Spring-Boot-的配置文件有哪几种格式，有什么区别" class="headerlink" title="Spring Boot 的配置文件有哪几种格式，有什么区别"></a>Spring Boot 的配置文件有哪几种格式，有什么区别</h3><p><strong>.properties 和 .yml</strong></p><p>yml拥有天然的树状结构；</p><p>在properties文件中是以”.”进行分割的， 在.yml中是用”:”进行分割；</p><p>.yml的数据格式是K-V格式（和json很像），并且通过”:”进行赋值；</p><p>在.yml中缩进一定不能使用TAB，否则会报很奇怪的错误；</p><p>每个k的冒号后面一定都要加一个空格；</p><p>.yml比.properties对中文对支持更友好。</p><h3 id="Spring-Boot-需要独立的容器运行吗"><a href="#Spring-Boot-需要独立的容器运行吗" class="headerlink" title="Spring Boot 需要独立的容器运行吗"></a>Spring Boot 需要独立的容器运行吗</h3><p>可以不需要，内置Tomcat /jetty 等容器</p><h3 id="运行-Spring-Boot-有哪几种方式"><a href="#运行-Spring-Boot-有哪几种方式" class="headerlink" title="运行 Spring Boot 有哪几种方式"></a>运行 Spring Boot 有哪几种方式</h3><ol><li>打包用命令或者放到容器中运行</li><li>用 Maven / Gradle 插件运行</li><li>直接执行 main 方法</li></ol><h3 id="如何集成-Spring-Boot-和-ActiveMQ"><a href="#如何集成-Spring-Boot-和-ActiveMQ" class="headerlink" title="如何集成 Spring Boot 和 ActiveMQ"></a>如何集成 Spring Boot 和 ActiveMQ</h3><p>对于集成 Spring Boot 和 ActiveMQ，只需要引入相应的依赖。只需要很少的配置，并且不需要样板代码</p><h3 id="什么是-Swagger"><a href="#什么是-Swagger" class="headerlink" title="什么是 Swagger"></a>什么是 Swagger</h3><p>Swagger广泛用于可视化API，使用Swagger UI为前端开发人员提供在线沙箱。Swagger是用于生成RESTful Web服务的可视化表示的工具，规范和完整框架实现。它使文档能够以与服务器相同的速度更新。当通过Swagger正确定义时，消费者可以使用最少量的实现逻辑来理解远程服务并与其进行交互。因此，Swagger消除了调用服务时的猜测。</p><h3 id="如何使用-Spring-Boot实现-异常处理"><a href="#如何使用-Spring-Boot实现-异常处理" class="headerlink" title="如何使用 Spring Boot实现 异常处理"></a>如何使用 Spring Boot实现 异常处理</h3><p>Spring 提供了一种使用 ControllerAdvice 处理异常的非常有用的方法。通过实现一个ControllerAdvice类，来处理控制器类抛出的所有异常</p><h3 id="RequestMapping-和-GetMapping的不同之处"><a href="#RequestMapping-和-GetMapping的不同之处" class="headerlink" title="RequestMapping 和 GetMapping的不同之处"></a>RequestMapping 和 GetMapping的不同之处</h3><ol><li>RequestMapping 具有类属性的，可以进行 GET，POST，PUT或者其他的注释中具有的请求方法</li><li>GetMapping 是GET请求方法中的一个特例。它只是 ResquestMapping 的一个延伸，目的是为了提高清晰度。</li></ol><h3 id="Spring-Boot-是否可以兼容老-Spring-项目"><a href="#Spring-Boot-是否可以兼容老-Spring-项目" class="headerlink" title="Spring Boot 是否可以兼容老 Spring 项目"></a>Spring Boot 是否可以兼容老 Spring 项目</h3><p>可以兼容，使用 @ImportResource 注入老 Spring 项目配置文件</p><h3 id="如何理解-Spring-Boot中的-Starters"><a href="#如何理解-Spring-Boot中的-Starters" class="headerlink" title="如何理解 Spring Boot中的 Starters"></a>如何理解 Spring Boot中的 Starters</h3><p><strong>Starters</strong>可以理解为启动器，它包含了一系列可以集成到应用里面的依赖包，你可以一站式集成<strong>Spring</strong>及其他技术，而不需要到处找实例代码和依赖包。</p><p>例如：你想使用 <strong>Spring JPA</strong>访问数据库，只要加入<strong>spring-boot-starter-data-jpa</strong> 启动器依赖就能使用了。</p><h3 id="Spring-Boot-支持哪些日志框架"><a href="#Spring-Boot-支持哪些日志框架" class="headerlink" title="Spring Boot 支持哪些日志框架"></a>Spring Boot 支持哪些日志框架</h3><ol><li>Java Util Logging</li><li>Log4j2</li><li>Lockback</li></ol><p>如果你使用 Starters 启动器，Spring Boot 将使用Lockback作为默认的日志框架</p><h3 id="Spring-Boot实现热部署的方式有哪几种"><a href="#Spring-Boot实现热部署的方式有哪几种" class="headerlink" title="Spring Boot实现热部署的方式有哪几种"></a>Spring Boot实现热部署的方式有哪几种</h3><ol><li>Spring Loaded</li><li>Spring-boot-devtools</li></ol><h3 id="Spring-Boot的项目的开发环境，生产环境如何切换"><a href="#Spring-Boot的项目的开发环境，生产环境如何切换" class="headerlink" title="Spring Boot的项目的开发环境，生产环境如何切换"></a>Spring Boot的项目的开发环境，生产环境如何切换</h3><p>profile配置:</p><p>spring-boot默认为了支持不同的配置环境.</p><p>配置步骤：</p><ol><li>提供环境<ol><li>​    按照命名模板:application-{profile}.properties(例如: application-pro1.properties/application-pro2.properties)</li></ol></li><li>选择激活的环境<ol><li>application.properties中设置:spring.profiles.active=pro1</li></ol></li></ol><h3 id="如何使用Spring-Boot实现分页和排序"><a href="#如何使用Spring-Boot实现分页和排序" class="headerlink" title="如何使用Spring Boot实现分页和排序"></a>如何使用Spring Boot实现分页和排序</h3><p>使用Spring Boot实现分页非常简单。使用Spring Data-JPA可以实现将可分页的org.springframework.data.domain.Pageable传递给存储库方法。</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven依赖</title>
      <link href="/posts/3261239934/"/>
      <url>/posts/3261239934/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>一些常用的Maven依赖</p>          </div><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--MySQL--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="log4j"><a href="#log4j" class="headerlink" title="log4j"></a>log4j</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--log4j--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="druid"><a href="#druid" class="headerlink" title="druid"></a>druid</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入mybatis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Thymeleaf"><a href="#Thymeleaf" class="headerlink" title="Thymeleaf"></a>Thymeleaf</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--thymeleaf模板引擎--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-java8time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Thymeleaf和security整合包"><a href="#Thymeleaf和security整合包" class="headerlink" title="Thymeleaf和security整合包"></a>Thymeleaf和security整合包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- thymeleaf整合包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Spring整合thymeleaf模板"><a href="#Spring整合thymeleaf模板" class="headerlink" title="Spring整合thymeleaf模板"></a>Spring整合thymeleaf模板</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--thymeleaf模板--&gt;</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;org.thymeleaf&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;thymeleaf-spring5&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;org.thymeleaf.extras&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;thymeleaf-extras-java8time&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Shiro"><a href="#Shiro" class="headerlink" title="Shiro"></a>Shiro</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- shiro --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="SpringSecurity"><a href="#SpringSecurity" class="headerlink" title="SpringSecurity"></a>SpringSecurity</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--security--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="热部署"><a href="#热部署" class="headerlink" title="热部署"></a>热部署</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 热部署 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span> <span class="comment">&lt;!-- 这个需要为 true 热部署才有效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JSONObject"><a href="#JSONObject" class="headerlink" title="JSONObject"></a>JSONObject</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;net.sf.json-lib&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;json-lib&lt;/artifactId&gt;</span></span><br><span class="line">    <span class="string">&lt;version&gt;2.4&lt;/version&gt;</span></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">必须加jdk的版本号</span> <span class="string">--&gt;</span></span><br><span class="line">    <span class="string">&lt;classifier&gt;jdk15&lt;/classifier&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常用命名空间"><a href="#常用命名空间" class="headerlink" title="常用命名空间"></a>常用命名空间</h3><h4 id="th"><a href="#th" class="headerlink" title="th:"></a>th:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:th="http://www.thymeleaf.org"</span><br></pre></td></tr></table></figure><h4 id="sec"><a href="#sec" class="headerlink" title="sec:"></a>sec:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity4"</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot集成SpringSecurity</title>
      <link href="/posts/3984882913/"/>
      <url>/posts/3984882913/</url>
      
        <content type="html"><![CDATA[<blockquote><p>记录贴，方便以后查看</p></blockquote><h3 id="导入pom依赖"><a href="#导入pom依赖" class="headerlink" title="导入pom依赖"></a>导入pom依赖</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--security--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.3.1.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- thymeleaf整合包 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.thymeleaf.extras&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;thymeleaf-extras-springsecurity4&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.0.4.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--thymeleaf模板引擎--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.thymeleaf&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;thymeleaf-spring5&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.thymeleaf.extras&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;thymeleaf-extras-java8time&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="修改application-properties配置"><a href="#修改application-properties配置" class="headerlink" title="修改application.properties配置"></a>修改application.properties配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭thymeleaf缓存</span></span><br><span class="line"><span class="string">spring.thymeleaf.cache=false</span></span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(&#123;<span class="string">"/"</span>,<span class="string">"/index"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toLogin"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">toLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="string">"views/login"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/level1/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">level1</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"views/level1/"</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/level2/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">level2</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"views/level2/"</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/level3/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">level3</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"views/level3/"</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新建Config类"><a href="#新建Config类" class="headerlink" title="新建Config类"></a>新建Config类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><p>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//授权</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求授权的规则</span></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                <span class="comment">//首页所有人都可以访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/"</span>).permitAll()</span><br><span class="line">                <span class="comment">//拥有对应权限的人才能访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/level1/**"</span>).hasRole(<span class="string">"vip1"</span>)</span><br><span class="line">                .antMatchers(<span class="string">"/level2/**"</span>).hasRole(<span class="string">"vip2"</span>)</span><br><span class="line">                .antMatchers(<span class="string">"/level3/**"</span>).hasRole(<span class="string">"vip3"</span>);</span><br></pre></td></tr></table></figure><h4 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h4><p>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//认证</span></span><br><span class="line">    <span class="comment">//密码编码  passwordEncoder</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>添加用户及权限：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这些数据应该从数据库中读</span></span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">                <span class="comment">//角色以及对应的权限</span></span><br><span class="line">                .withUser(<span class="string">"jinan"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip2"</span>,<span class="string">"vip3"</span>)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">//角色以及对应的权限</span></span><br><span class="line">                .withUser(<span class="string">"root"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>,<span class="string">"vip2"</span>,<span class="string">"vip3"</span>)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">//角色以及对应的权限</span></span><br><span class="line">                .withUser(<span class="string">"guest"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>将密码进行编码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">.password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>))</span><br></pre></td></tr></table></figure><h4 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//没有权限默认会跳到登录页面,需要开启登录的界面</span></span><br><span class="line">http.formLogin()</span><br></pre></td></tr></table></figure><p>定制登录页</p><ol><li><pre><code class="java">http.formLogin().loginPage(<span class="string">"/toLogin"</span>);&lt;!--￼<span class="number">10</span>--&gt;</code></pre></li></ol><h4 id="注销功能"><a href="#注销功能" class="headerlink" title="注销功能"></a>注销功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.logout();</span><br></pre></td></tr></table></figure><ol><li><pre><code class="java"><span class="comment">//注销成功后跳转到首页</span>http.logout().logoutSuccessUrl(<span class="string">"/"</span>);&lt;!--￼<span class="number">12</span>--&gt;</code></pre></li></ol><h4 id="记住我功能"><a href="#记住我功能" class="headerlink" title="记住我功能"></a>记住我功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.rememberMe();</span><br></pre></td></tr></table></figure><p>自定义接受前端参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.rememberMe().rememberMeParameter(<span class="string">"remember"</span>);</span><br></pre></td></tr></table></figure><p>前端：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"remember"</span> /&gt;</span> 记住我</span><br></pre></td></tr></table></figure><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><h4 id="导入头文件"><a href="#导入头文件" class="headerlink" title="导入头文件"></a>导入头文件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:th="http://www.thymeleaf.org" xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity4"</span><br></pre></td></tr></table></figure><h4 id="判断是否登录"><a href="#判断是否登录" class="headerlink" title="判断是否登录"></a>判断是否登录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sec:authorize=<span class="string">"!isAuthenticated()"</span> <span class="comment">//未登录</span></span><br><span class="line">sec:authorize=<span class="string">"isAuthenticated()"</span><span class="comment">//已登录</span></span><br></pre></td></tr></table></figure><h4 id="显示当前登录的用户名"><a href="#显示当前登录的用户名" class="headerlink" title="显示当前登录的用户名"></a>显示当前登录的用户名</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sec:authentication=<span class="string">"name"</span><span class="comment">//获取当前登录的用户名</span></span><br></pre></td></tr></table></figure><p>根据权限显示不同内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sec:authorize=<span class="string">"hasRole('vip1')"</span></span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><h4 id="html动态显示"><a href="#html动态显示" class="headerlink" title="html动态显示"></a>html动态显示</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--springboot2<span class="number">.0</span><span class="number">.9</span>版本支持--&gt;</span><br><span class="line">                &lt;!--如果未登录--&gt;</span><br><span class="line">                &lt;div sec:authorize=<span class="string">"!isAuthenticated()"</span>&gt;</span><br><span class="line">                    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span> th:href=<span class="string">"@&#123;/toLogin&#125;"</span>&gt;</span><br><span class="line">                        &lt;i class="address card icon"&gt;&lt;/i&gt; 登录</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;!--如果已登录--&gt;</span><br><span class="line">                &lt;div sec:authorize=<span class="string">"isAuthenticated()"</span>&gt;</span><br><span class="line">                    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span>&gt;</span><br><span class="line">                        用户名：&lt;span sec:authentication="name"&gt;&lt;/span&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div sec:authorize=<span class="string">"isAuthenticated()"</span>&gt;</span><br><span class="line">                    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span> th:href=<span class="string">"@&#123;/logout&#125;"</span>&gt;</span><br><span class="line">                        &lt;i class="sign-out icon"&gt;&lt;/i&gt; 注销</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="SecurityConfig"><a href="#SecurityConfig" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        super.configure(http);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//首页所有人可以访问，但是功能页只有对应权限的人才能访问</span></span><br><span class="line">        <span class="comment">//请求授权的规则</span></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                <span class="comment">//首页所有人都可以访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/"</span>).permitAll()</span><br><span class="line">                <span class="comment">//拥有对应权限的人才能访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/level1/**"</span>).hasRole(<span class="string">"vip1"</span>)</span><br><span class="line">                .antMatchers(<span class="string">"/level2/**"</span>).hasRole(<span class="string">"vip2"</span>)</span><br><span class="line">                .antMatchers(<span class="string">"/level3/**"</span>).hasRole(<span class="string">"vip3"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//没有权限默认会跳到登录页面,需要开启登录的界面</span></span><br><span class="line">        <span class="comment">//定制登录页</span></span><br><span class="line">        http.formLogin().loginPage(<span class="string">"/toLogin"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第二种方式，表单如果提交到 login 的话</span></span><br><span class="line">        <span class="comment">// usernameParameter 表单的用户名</span></span><br><span class="line">        <span class="comment">// passwordParameter 表单的密码</span></span><br><span class="line">        http.formLogin().loginPage(<span class="string">"/toLogin"</span>).usernameParameter(<span class="string">"user"</span>).passwordParameter(<span class="string">"psd"</span>).loginProcessingUrl(<span class="string">"/login"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第二种方式，表单如果提交到 login 的话</span></span><br><span class="line">        <span class="comment">//http.formLogin().loginPage("/toLogin").usernameParameter("user").passwordParameter("psd").loginProcessingUrl("/login");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//防止网站攻击 get post</span></span><br><span class="line">        http.csrf().disable();  <span class="comment">//关闭csrf功能，注销失败可能失败的原因</span></span><br><span class="line">        <span class="comment">//注销功能，注销成功后跳转到首页</span></span><br><span class="line">        http.logout().logoutSuccessUrl(<span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启记住我功能 cookies，自定义接受前端的参数</span></span><br><span class="line">        http.rememberMe().rememberMeParameter(<span class="string">"remember"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="comment">//密码编码  passwordEncoder</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">       <span class="comment">//这些数据应该从数据库中读</span></span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">                <span class="comment">//角色以及对应的权限</span></span><br><span class="line">                .withUser(<span class="string">"jinan"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip2"</span>,<span class="string">"vip3"</span>)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">//角色以及对应的权限</span></span><br><span class="line">                .withUser(<span class="string">"root"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>,<span class="string">"vip2"</span>,<span class="string">"vip3"</span>)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">//角色以及对应的权限</span></span><br><span class="line">                .withUser(<span class="string">"guest"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> SpringSecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot集成Swagger</title>
      <link href="/posts/1553907357/"/>
      <url>/posts/1553907357/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</p><p>总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法、参数和模型紧密集成到服务器端的代码，允许 API 来始终保持同步。Swagger 让部署管理和使用功能强大的 API 从未如此简单。</p></blockquote><h3 id="SpringBoot集成Swagger"><a href="#SpringBoot集成Swagger" class="headerlink" title="SpringBoot集成Swagger"></a>SpringBoot集成Swagger</h3><ol><li><p>新建一个springboot项目</p></li><li><p>引入pom依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger依赖--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>配置Swagger——&gt; config配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2 <span class="comment">//开启Swagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>测试运行，访问swagger界面 <a href="http://127.0.0.1:8080/swagger-ui.html" target="_blank" rel="noopener">http://127.0.0.1:8080/swagger-ui.html</a></p><p>效果图：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200614195806.png" alt="Swagger"></p></li></ol><h3 id="配置Swagger的bean实例"><a href="#配置Swagger的bean实例" class="headerlink" title="配置Swagger的bean实例"></a>配置Swagger的bean实例</h3><p>Swagger的bean实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置Swagger的Docket的bean实例</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">            .apiInfo(apiInfo());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置Swagger信息  apiInfo</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//作者信息</span></span><br><span class="line">    Contact contact = <span class="keyword">new</span> Contact(<span class="string">"jinan"</span>,<span class="string">"https://jinan6.vip/"</span>,<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  <span class="keyword">new</span> ApiInfo(</span><br><span class="line">            <span class="string">"仅安的swagger信息"</span>,</span><br><span class="line">            <span class="string">"仅安的Api文档"</span>,</span><br><span class="line">            <span class="string">"1.1"</span>,</span><br><span class="line">            <span class="string">"https://jinan6.vip/"</span>   ,</span><br><span class="line">            contact,</span><br><span class="line">            <span class="string">"Apache 2.0"</span>,</span><br><span class="line">            <span class="string">"http://www.apache.org/licenses/LICENSE-2.0"</span>,</span><br><span class="line">            <span class="keyword">new</span> ArrayList()</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615082137.png" alt="bean实例"></p><h3 id="Swagger配置扫描接口"><a href="#Swagger配置扫描接口" class="headerlink" title="Swagger配置扫描接口"></a>Swagger配置扫描接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.select()</span><br><span class="line"><span class="comment">//RequestHandlerSelectors，配置要扫描接口的方式</span></span><br><span class="line"><span class="comment">//basePackage  指定要扫描的包</span></span><br><span class="line"><span class="comment">// any() 扫描全部</span></span><br><span class="line"><span class="comment">//none() 不扫描</span></span><br><span class="line"><span class="comment">//withClassAnnotation() 扫描类上的注解，参数是一个注解的反射对象</span></span><br><span class="line"><span class="comment">//withMethodAnnotation() 扫描方法上的注解</span></span><br><span class="line">.apis(RequestHandlerSelectors.basePackage(<span class="string">"com.jinan.controller"</span>))</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615084653.png" alt="自定义扫描接口"></p><p>过滤信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//paths() 过滤什么路径</span></span><br><span class="line">               .paths(PathSelectors.ant(<span class="string">"/jinan/**"</span>))</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615084952.png" alt="过滤"></p><h3 id="配置是否启动SWagger"><a href="#配置是否启动SWagger" class="headerlink" title="配置是否启动SWagger"></a>配置是否启动SWagger</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.enable(<span class="keyword">false</span>)</span><br><span class="line"><span class="comment">//enbale是否启动SWagger ，如果为false，则不能再浏览器中访问</span></span><br></pre></td></tr></table></figure><h3 id="配合API文档的分组"><a href="#配合API文档的分组" class="headerlink" title="配合API文档的分组"></a>配合API文档的分组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.groupName(<span class="string">"仅安"</span>)</span><br></pre></td></tr></table></figure><h4 id="配置多个分组"><a href="#配置多个分组" class="headerlink" title="配置多个分组"></a>配置多个分组</h4><p>写多个实例就可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Docket <span class="title">docket1</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class="string">"A"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Docket <span class="title">docket2</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class="string">"B"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Docket <span class="title">docket3</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class="string">"C"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Docket <span class="title">docket4</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class="string">"D"</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615092516.png" alt="分组"></p><h3 id="实体类配置"><a href="#实体类配置" class="headerlink" title="实体类配置"></a>实体类配置</h3><p>新建一个实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModel</span>(<span class="string">"用户实体类"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"用户名"</span>)</span><br><span class="line">    <span class="keyword">public</span> String username;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">public</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在控制器中加入代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只要接口的中返回值中存在我们的实体类，就会被扫描到Swagger中</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">user</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"hello2控制类"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/hello2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello2</span><span class="params">(@ApiParam(<span class="string">"用户名"</span>)</span> String username)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="string">"111"</span>+username;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ol><li><strong>@ApiModel</strong>   实体类注释</li><li><strong>@ApiModelProperty</strong>  实体类字段注释</li><li><strong>@ApiOperation</strong>  接口的注释</li><li><strong>@ApiParam</strong>  接口里面的参数注释</li></ol><p>效果：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615094912.png" alt="实体类"></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615094952.png" alt="接口"></p><h3 id="测试API接口"><a href="#测试API接口" class="headerlink" title="测试API接口"></a>测试API接口</h3><p>新建一个测试接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"用户登录控制器"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/log"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String  <span class="title">log</span><span class="params">(@RequestParam @ApiParam(<span class="string">"用户名"</span>)</span> String username, @RequestParam @<span class="title">ApiParam</span><span class="params">(<span class="string">"用户密码"</span>)</span> String password)</span>&#123;</span><br><span class="line">        String start=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(username.equals(<span class="string">"123"</span>)&amp;&amp;password.equals(<span class="string">"123"</span>))&#123;</span><br><span class="line">            start=<span class="string">"登录成功"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            start=<span class="string">"用户名或密码错误"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> start;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>找到需要测试的接口</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615102100.png" alt></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200615102438.png" alt></p><p>测试完成后会在下方显示结果，成功与否</p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> Swagger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象与面向过程</title>
      <link href="/posts/1359691355/"/>
      <url>/posts/1359691355/</url>
      
        <content type="html"><![CDATA[<h3 id="面向过程与面向对象的区别？"><a href="#面向过程与面向对象的区别？" class="headerlink" title="面向过程与面向对象的区别？"></a>面向过程与面向对象的区别？</h3><p>实例：吃鱼香肉丝</p><ol><li>自己买材料、肉、调料、胡萝卜，然后进行切菜切肉，盛到盘子里，开吃</li><li>去饭店 ，张嘴喊，老板，来一份鱼香肉丝，开吃</li></ol><h3 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h3><p>面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个一次调用就可以了。</p><p><strong>优点：</strong>性能比面向对象好，因为类调用时需要实例化，开销比较大，比较消耗资源。</p><p><strong>缺点：</strong>不易维护，不易复用，不易扩展。</p><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>万物皆为对象</p><p>面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而且为了描述某个事物在整个解决问题的步骤中的行为。</p><p><strong>优点：</strong>易维护，易复用，易扩展，由于面对对象有封装，继承，多态性的特征，可以设计出低耦合的系统，使系统，更加灵活，更加易于维护</p><p><strong>缺点：</strong>性能比面向过程差</p><h3 id="面向对象特性："><a href="#面向对象特性：" class="headerlink" title="面向对象特性："></a>面向对象特性：</h3><p><strong>封装：</strong>隐藏对象的属性和实现细节，仅对外提供公共访问方式，将变化隔离，便于使用，提高复用性和安全性。</p><p><strong>继承：</strong>提高代码复用性；继承是多态的前提。</p><p><strong>多态：</strong>父类或接口定义的引用变量可以指向子类或具体实现类的实例对象。提高了程序的扩展性。</p><h3 id="面向对象基本原则"><a href="#面向对象基本原则" class="headerlink" title="面向对象基本原则"></a>面向对象基本原则</h3><p><strong>单一职责原则：</strong>每一个类或者方法只有一个功能，或者是只有一个重要的功能。</p><p><strong>里氏替换原则：</strong>在使用父类的任何地方都可以使用子类，并且不影响程序的运行。</p><p><strong>依赖倒置原则：</strong>高模块和低模块都应该依赖接口或者抽象，先有接口，再有模块。</p><p><strong>接口隔离原则：</strong>和单一原则差不多，接口尽量小而且单一，不要把所有的东西都写在一个接口中。</p><p><strong>迪米特原则：</strong>减少类之间的耦合，减少模块之间的耦合，利于复用。（最少知识）</p><p><strong>开闭原则：</strong>对于类的扩展是开放的，修改时关闭的（尽量不要修改之前的代码）</p>]]></content>
      
      
      <categories>
          
          <category> 面向对象 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA设置Maven仓库阿里云镜像</title>
      <link href="/posts/2352548230/"/>
      <url>/posts/2352548230/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>使用maven.aliyun.com中的仓库地址作为下载源，速度更快更稳定 </p>          </div><p>阿里云maven仓库地址：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmaven.aliyun.com%2Fmvn%2Fview" target="_blank" rel="noopener">https://maven.aliyun.com/mvn/view</a></p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li><p>找到idea中maven中的“<strong>settings.xml</strong>”位置</p></li><li><p>一般在安装目录下的<strong>IntelliJ IDEA 2020.1\plugins\maven\lib\maven3\conf</strong>里</p></li><li><p>找到&lt; mirror &gt; 标签</p></li><li><p>在标签下加入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyunmaven&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;阿里云公共仓库&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br></pre></td></tr></table></figure></li></ol><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200619160055.jpg" alt></p><p>然后保存即可</p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>向GitHub仓库推送本地文件夹</title>
      <link href="/posts/3120427724/"/>
      <url>/posts/3120427724/</url>
      
        <content type="html"><![CDATA[<blockquote><p>向GitHub仓库推送本地文件夹</p></blockquote><p>首页先在<strong>GitHub</strong>上新建一个仓库，取名任意</p><p>其次在本地随便新建一个文件夹，在该文件夹内右键<strong>Git Bash Here</strong></p><p>输入以下命令，下载到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone  #后面跟上你的仓库地址</span><br></pre></td></tr></table></figure><p>然后在下载下来的文件夹内，加入你想要添加的文件</p><p>添加完成后，输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add .    #添加全部文件（git  add  -A）</span><br><span class="line">git commit -m &#39;add all the file&#39;    #提交修改</span><br><span class="line">git status    #查看是否还有未提交</span><br><span class="line">git remote  add  origin  你的仓库地址    #远程仓库关联到origin名称上</span><br><span class="line">git push origin master    #将add内容推送到远程仓库</span><br></pre></td></tr></table></figure><p>上传过程中可能还会需要验证你的GitHub的用户名和密码，验证完成稍等一会即可</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库优化</title>
      <link href="/posts/3155752545/"/>
      <url>/posts/3155752545/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>关于MySQL数据库优化 </p>          </div><h2 id="了解为什么要数据库优化"><a href="#了解为什么要数据库优化" class="headerlink" title="了解为什么要数据库优化"></a>了解为什么要数据库优化</h2><h3 id="数据库优化的目的"><a href="#数据库优化的目的" class="headerlink" title="数据库优化的目的"></a>数据库优化的目的</h3><h4 id="避免出现页面访问错误"><a href="#避免出现页面访问错误" class="headerlink" title="避免出现页面访问错误"></a>避免出现页面访问错误</h4><ul><li>由于数据库连接timeout产生页面5xx错误</li><li>由于慢查询造成页面无法加载</li><li>由于阻塞造成数据无法提交</li></ul><h4 id="增加数据库的稳定性"><a href="#增加数据库的稳定性" class="headerlink" title="增加数据库的稳定性"></a>增加数据库的稳定性</h4><ul><li>很多数据库问题都是由于低效的查询引起的</li></ul><h4 id="优化用户体验"><a href="#优化用户体验" class="headerlink" title="优化用户体验"></a>优化用户体验</h4><ul><li>流畅页面的访问速度</li><li>良好的网站功能体验</li></ul><h2 id="了解数据库优化的几个方式"><a href="#了解数据库优化的几个方式" class="headerlink" title="了解数据库优化的几个方式"></a>了解数据库优化的几个方式</h2><h3 id="优化方式"><a href="#优化方式" class="headerlink" title="优化方式"></a>优化方式</h3><h4 id="可以从几个方面进行数据库优化"><a href="#可以从几个方面进行数据库优化" class="headerlink" title="可以从几个方面进行数据库优化"></a>可以从几个方面进行数据库优化</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/3155752545/image-20200604155255484.png" alt="优化方式"></p><h4 id="如何查看SQL的查询效率"><a href="#如何查看SQL的查询效率" class="headerlink" title="如何查看SQL的查询效率"></a>如何查看SQL的查询效率</h4><p>在日常工作中，我们有时会开慢查询去记录一些执行时间比较久的SQL语句，找出这些SQL语句并不意味着完事了，此时我们常常用到<span style="color:red"><strong>explain</strong></span>这个命令来查看这个SQL语句的执行计划，查看该SQL语句有没有使用上了索引，有没有做全表扫描，这些都可以通过<strong>explain</strong>命令来查看。所以我们深入了解MySQL的基于开销的优化器，还可以获得很多可能被优化器考虑到的访问策略的细节，以及当运行SQL语句时哪种策略预计会被优化器采用</p><ul><li>–实际SQL，查找用户名为Jefabc的员工</li><li>select * from emp where name =’Jefabc’ ;</li><li><span style="color:red">– 查看SQL是否使用索引，前面加上explain即可</span></li><li>explain  select * from emp where name =’Jefabc’ ;</li></ul><h4 id="概要描述："><a href="#概要描述：" class="headerlink" title="概要描述："></a>概要描述：</h4><p><strong>explain 出来的信息有10列，分别是id、select_type、table、type、possible_keys、key、key_len、ref、rows、Extra。</strong></p><ol><li>id：选择标识符</li><li>select_type： 表示查询的类型</li><li>table： 输出结果的集</li><li>type： 表示表的连接类型<ul><li>对外访问方式，表示MySQL在表中找到所需行的方式，又称“访问类型”</li><li>常用的类型有 <strong>ALL</strong>、<strong>index</strong>、<strong>range</strong>、<strong>ref</strong>、<strong>eq_ref</strong>、<strong>const</strong>、<strong>system</strong>、<strong>NULL</strong></li><li>ALL：FUll Index Scan，MySQL将遍历全表以找到匹配的行</li><li>index：Full Index Scan，index与ALL区别为index类型值遍历索引树</li><li>range：只检索给定范围的行，使用一个索引来选择行</li><li>ref：表示上述表的连接匹配条件，即哪些列或常用被用于查找索引列上的值</li></ul></li><li>possible_keys：表示查询时，可能使用的索引</li><li>key：表示实际使用的索引</li><li>key_len：索引字段的长度</li><li>ref：列与索引的比较</li><li>rows：扫描出的行数（估算的行数）</li><li>filtered：按表条件过滤的百分比</li><li>Extra：执行情况的描述和说明</li></ol><h2 id="使用索引和优化数据表结构来优化数据库查询"><a href="#使用索引和优化数据表结构来优化数据库查询" class="headerlink" title="使用索引和优化数据表结构来优化数据库查询"></a>使用索引和优化数据表结构来优化数据库查询</h2><h3 id="索引创建原则"><a href="#索引创建原则" class="headerlink" title="索引创建原则"></a>索引创建原则</h3><p><span style="color:red">1、索引创建原则</span></p><p>a. ORDER BY +  LIMIT组合的索引优化</p><p>如果一个SQL语句形如：</p><p><strong>SELECT [column1],[column2….. FROM [TABLE] ORDER BY [sort] LIMIT[offset],[LIMIT];</strong></p><p>这个SQL语句优化比较简单，在[sort]这个栏位.上建立索引即可。</p><p>b.WHERE + ORDER BY +LIMIT组合的索引优化</p><p>如果一个SQL语句形如:</p><p><strong>SELECT [column1],[column2…. FROM [TABLE] WHERE [columnX] =[VALUE] ORDER BY [sort] LIMIT [offset],[LIMI刀];</strong> </p><p>这个语句，如果你仍然采用第一个例子中建立索引的方法，虽然可以用到索引，但是效率不高。更高效的方法是建立一个联合索引(columnX ,sort)</p><ul><li>怎么加快查询速度，优化查询效率，主要原则就是应尽量避免全表扫描，应该考虑在<strong>where</strong>及<strong>order by</strong>涉及的列上建立索引。</li><li>建立索引不是建的越多越好，原则是：<ul><li><strong>第一</strong>：第一:一个 表的索引不是越多越好，也没有一一个具体的数字， 根据以往的经验，一一个表的索引最多不能超过6个，因为索引越多，对update 和insert操作也会有性能的影响，涉及到索引的新建和重建操作。</li><li><strong>第二</strong>：建立索引的方法为：<ul><li>多数查询经常使用的列：</li><li>很少进行修改操作的列</li><li>索引需要建立在数据差异化大的列上</li></ul></li></ul></li></ul><p><strong>四种索引的使用场景</strong></p><p>PRIMARY,INDEX,UNIQUE这三种是一类</p><p>PRIMARY主键。就是唯一且不能为空</p><p>INDEX索引，普通的</p><p>UNIQUE 唯一索引。不允许有重复。</p><p>FULLTEXT是全文索引，用于在一篇文章中，检索文本信息的。</p><p>举个例子来说，比如你在为某商场做一个会员卡的系统。</p><p>这个系统有一个会员表</p><p>有下列字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">会员编号  INT</span><br><span class="line">会员姓名  VARCHAR(10)</span><br><span class="line">会员身份证号码  VARCHAR(18)</span><br><span class="line">会员电话  VARCHAR(10)</span><br><span class="line">会员地址 VARCHAR (50)</span><br><span class="line">会员备注信息 TEXT</span><br></pre></td></tr></table></figure><p><span style="color:red">2、SQL查询注意部分</span></p><ol><li><p>任何地方都不要使用 select * from t，用具体的字段列表代替  *****，不要返回用不到的任何地段</p></li><li><p>应尽量避免在where子句中使用<strong>！=</strong>或<strong>&lt;&gt;</strong>操作符，否则将引擎放弃使用索引而进行全表扫描</p></li><li><p>应尽量避免在where子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。</p><p>如:</p><p>select id from t where num/2= 100</p><p>应改为: </p><p>select id from t where num=100*2</p></li><li><p>4.应尽量避免在where子句中使用or来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，</p></li></ol><p>如:</p><p>select id from t where num=10 or num=20</p><p>应改为:</p><p>select id from t where num=10 union all select id from t where num=20</p><h3 id="表结构方面优化"><a href="#表结构方面优化" class="headerlink" title="表结构方面优化"></a>表结构方面优化</h3><ol><li>1.选择最合适的字段属性，使用可以存在数据的最小的数据类型，例如邮政编码，手机号码这类定长的数字可以用char(6),char(11);性别或者是否这种判断性文字可以用tinyint;字段属性尽量为notnull这样不用判断是否为空，减少一个步骤(用其他方式表达你想表达的NULL比如-1) ;如果一定要用text这种类型，最好是采用分表存储; </li><li>2.将常用信息和不常用信息分表存储，比如一个商城网站的用户表，用户的昵称，头像，密码，账号这类字段用户登录就会用到，而用户的兴趣爱好了，喜欢的颜色了这种字段就分表存储，相信大家京东账号中的个人信息可能也就在注册的时候打开过，以后就再没注意过了吧。</li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
          <category> 优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题优化</title>
      <link href="/posts/3112011529/"/>
      <url>/posts/3112011529/</url>
      
        <content type="html"><![CDATA[<div class="note success">            <p>关于Butterfly主题的一些优化 </p>          </div><h3 id="优化文章链接"><a href="#优化文章链接" class="headerlink" title="优化文章链接"></a>优化文章链接</h3><p>Hexo默认使用的文章永久链接格式是：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">year/:month/:day/:title/</span><br></pre></td></tr></table></figure><p>这种链接，如果遇上个中文标题，简直要爆炸，在分享时会出现乱码问题。</p><p>这种方式不仅导致链接变得非常长，而且一旦修改文章发布日期或者标题，链接立马失效，造成大量死链</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>安装abbrlink插件</p><p>在博客根目录下执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>安装完成后==编辑站点配置文件==，修改如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#permalink: :year/:month/:day/:title/</span></span><br><span class="line"><span class="comment">#permalink_defaults:</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span> <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>   <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>重新生成部署即可</p><h3 id="加入哔哩哔哩番剧页面插件"><a href="#加入哔哩哔哩番剧页面插件" class="headerlink" title="加入哔哩哔哩番剧页面插件"></a>加入哔哩哔哩番剧页面插件</h3><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><a href="https://jinan6.vip/bangumis/">实例效果</a></p><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure><h4 id="更新插件"><a href="#更新插件" class="headerlink" title="更新插件"></a>更新插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --update --save</span><br></pre></td></tr></table></figure><h4 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bangumi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">path:</span> </span><br><span class="line">  <span class="attr">vmid:</span> </span><br><span class="line">  <span class="attr">title:</span> <span class="string">'追番列表'</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">'生命不息，追番不止！'</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">loading:</span></span><br></pre></td></tr></table></figure><ul><li><strong>enable</strong>: 是否启用</li><li><strong>path</strong>: 番剧页面路径，默认 <code>bangumis/index.html</code></li><li><strong>vmid</strong>: 哔哩哔哩番剧页面的 <code>vmid(uid)</code>, <a href="https://blog.hclonely.com/go/?to=aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20v" target="_blank" rel="noopener">https://space.bilibili.com/</a> 通过这个链接获取</li><li><strong>title</strong>: 该页面的标题</li><li><strong>quote</strong>: 写在页面开头的一段话，支持 html 语法</li><li><strong>show</strong>: 初始显示页面：<code>0: 想看</code> , <code>1: 在看</code> , <code>2: 看过</code>，默认为 <code>1</code></li><li><strong>loading</strong>: 图片加载完成前的 loading 图片</li></ul><h4 id="创建一个页面"><a href="#创建一个页面" class="headerlink" title="创建一个页面"></a>创建一个页面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page bangumis</span><br></pre></td></tr></table></figure><p>编辑这个页面的==index.md==文件，加入type</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 番剧</span><br><span class="line">date: 2020-06-01 08:06:18</span><br><span class="line">type: "bangumis"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="如果哔哩哔哩上面的番剧进行了更新，需要用"><a href="#如果哔哩哔哩上面的番剧进行了更新，需要用" class="headerlink" title="如果哔哩哔哩上面的番剧进行了更新，需要用"></a>如果哔哩哔哩上面的番剧进行了更新，需要用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -u</span><br></pre></td></tr></table></figure><p>执行番剧的更新</p><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -d</span><br></pre></td></tr></table></figure><p>参考自<a href="https://blog.hclonely.com/posts/8422e92e/" target="_blank" rel="noopener">Hexo哔哩哔哩番剧页面插件</a> </p><h3 id="添加音乐页面"><a href="#添加音乐页面" class="headerlink" title="添加音乐页面"></a>添加音乐页面</h3><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p><a href="https://jinan6.vip/music/">实例页面</a></p><h4 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">aplayer</span></span><br><span class="line"></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-tag-aplayer</span></span><br></pre></td></tr></table></figure><h4 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">music</span></span><br></pre></td></tr></table></figure><p>修改==index.md==文件，加入type</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 音乐</span><br><span class="line">date: 2020-05-29 13:51:08</span><br><span class="line">type: "music"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>然后加入以下代码，即可实现效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> <span class="tag">&lt;<span class="name">html</span>&gt;</span> <span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span> <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> <span class="comment">&lt;!-- require APlayer --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span><span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> <span class="comment">&lt;!-- require MetingJS --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">meting-js</span> <span class="attr">server</span>=<span class="string">"netease"</span> <span class="attr">type</span>=<span class="string">"playlist"</span> <span class="attr">id</span>=<span class="string">"你的网易云歌单id"</span>&gt;</span><span class="tag">&lt;/<span class="name">meting-js</span>&gt;</span>  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文章统计图表"><a href="#文章统计图表" class="headerlink" title="文章统计图表"></a>文章统计图表</h3><h4 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h4><p><a href="https://jinan6.vip/tags/">标签页</a></p><p><a href="https://jinan6.vip/categories/">分类页</a></p><p><a href="https://jinan6.vip/archives/">归档页</a></p><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-charts -S</span><br></pre></td></tr></table></figure><h4 id="归档页面"><a href="#归档页面" class="headerlink" title="归档页面"></a>归档页面</h4><p>在<code>主题目录/Butterfly/layout/archive.pug</code>文件的<code>#archive</code>下面添加一行<code>#posts-chart</code>, 新添加的比上一行多缩进两个空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">block content</span><br><span class="line">  include .&#x2F;includes&#x2F;mixins&#x2F;article-sort.pug</span><br><span class="line">  #archive</span><br><span class="line">    #posts-chart</span><br></pre></td></tr></table></figure><h4 id="标签和分类页"><a href="#标签和分类页" class="headerlink" title="标签和分类页"></a>标签和分类页</h4><p>编辑<code>主题目录/Butterfly/layout/page.pug</code>文件，在<code>.tag-cloud</code>下面添加一行<code>#tags-chart</code>，在<code>.category-content</code>下面添加一行<code>#categories-chart</code>，新添加的比上一行多缩进两个空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">block content</span><br><span class="line">  if page.type &#x3D;&#x3D;&#x3D; &#39;tags&#39;</span><br><span class="line">    .tag-cloud</span><br><span class="line">      #tags-chart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">else if page.type &#x3D;&#x3D;&#x3D; &#39;categories&#39;</span><br><span class="line">  .category-content</span><br><span class="line">    #categories-chart</span><br></pre></td></tr></table></figure><p>此功能参考自<a href="https://blog.hclonely.com/posts/57bd67ce/#文章统计图表" target="_blank" rel="noopener">懒人大佬</a></p><h3 id="Valine添加标签及图标"><a href="#Valine添加标签及图标" class="headerlink" title="Valine添加标签及图标"></a>Valine添加标签及图标</h3><p>参考<a href="https://blog.hclonely.com/posts/409d3090/" target="_blank" rel="noopener">懒人大佬</a></p><h3 id="解决Valine自动唤醒失败问题"><a href="#解决Valine自动唤醒失败问题" class="headerlink" title="解决Valine自动唤醒失败问题"></a>解决Valine自动唤醒失败问题</h3><p>参考<a href="https://www.antmoe.com/posts/2380732b/index.html" target="_blank" rel="noopener">小康大佬</a></p><h3 id="添加说说功能"><a href="#添加说说功能" class="headerlink" title="添加说说功能"></a>添加说说功能</h3><p><a href="https://artitalk.js.org/doc.html#👀-前言" target="_blank" rel="noopener">文档</a>已经很详细了。</p><h3 id="优化移动端显示"><a href="#优化移动端显示" class="headerlink" title="优化移动端显示"></a>优化移动端显示</h3><p>参考自 <a href="https://blog.lete114.top/article/eef7397d.html" target="_blank" rel="noopener">乐特博客</a></p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>标签内容来自 <a href="https://www.antmoe.com/posts/a811d614/index.html" target="_blank" rel="noopener">小康博客</a></p><h3 id="自定义小标签"><a href="#自定义小标签" class="headerlink" title="自定义小标签"></a>自定义小标签</h3><div class="snote red"><p>默认red</p></div><div class="snote quote"><p>quote</p></div><div class="snote info"><p>info</p></div><div class="snote done"><p>done</p></div><div class="snote success"><p>success</p></div><div class="snote danger"><p>danger</p></div><div class="snote error"><p>error</p></div><div class="snote radiation"><p>radiation</p></div><div class="snote bug"><p>bug</p></div><div class="snote idea yellow"><p>idea-yellow</p></div><div class="snote link blue"><p>link- blue</p></div><div class="snote paperclip"><p>paperclip</p></div><div class="snote todo"><p>todo</p></div><div class="snote msg cyan"><p>msg cyan</p></div><div class="snote guide"><p>guide</p></div><div class="snote download"><p>download</p></div><div class="snote up"><p>up</p></div><div class="snote undo"><p>undo</p></div><div class="snote quote"><p class="p subtitle">小标题</p></div><h3 id="小标签"><a href="#小标签" class="headerlink" title="小标签"></a>小标签</h3><p><span class="inline-tag red">红色小标签</span><br><span class="inline-tag green">绿色小标签</span><br><span class="inline-tag blue">蓝色小标签</span><br><span class="inline-tag yellow">黄色小标签</span><br><span class="inline-tag grey">灰色小标签</span></p><h3 id="渐变背景标签"><a href="#渐变背景标签" class="headerlink" title="渐变背景标签"></a>渐变背景标签</h3><div class="tip"><p>默认情况</p><p></p></div><div class="tip info"><p>info</p><p></p></div><div class="tip success"><p>success</p><p></p></div><div class="tip error"><p>error</p><p></p></div><div class="tip warning"><p>warning</p><p></p></div><div class="tip font5 fas fa-atom"><p>自定义font5图标</p><p></p></div><div class="tip wtgo font5 fas fa-bolt"><p>文字</p><p></p></div><div class="tip ban font5 fas fa-ban"><p>文字</p><p></p></div><div class="tip home font5 fas fa-home"><p>文字</p><p></p></div><div class="tip important font5 fas fa-home"><p>魔改标签4</p><p></p></div><div class="tip ref font5 fas fa-sync"><p>魔改标签5</p><p></p></div><div class="tip ffa font5 fas fa-cogs"><p>魔改标签6</p><p></p></div><div class="tip key font5 fas fa-key"><p>魔改标签7</p><p></p></div><div class="tip socd font5 fas fa-bell"><p>魔改标签8</p><p></p></div><div class="tip qq font5 fab fa-qq"><p>魔改标签9</p><p></p></div><h4 id="添加动画效果"><a href="#添加动画效果" class="headerlink" title="添加动画效果"></a>添加动画效果</h4><div class="tip faa-horizontal animated"><p>默认情况</p><p></p></div><div class="tip info faa-flash animated"><p>info</p><p></p></div><div class="tip success faa-spin animated"><p>success</p><p></p></div><div class="tip error faa-shake animated"><p>error</p><p></p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip faa-horizontal animated'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>默认情况<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip info faa-flash animated'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip success faa-spin animated'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>success<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tip error faa-shake animated'</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>error<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>faa-wrench animated</td><td>faa-wrench表示抖动，animated表示自动</td></tr><tr><td>faa-wrench animated-hover</td><td>animated-hover表示hover点击动画</td></tr><tr><td>faa-fast</td><td>快速</td></tr><tr><td>faa-slow</td><td>慢速</td></tr></tbody></table><h3 id="tag标签格式"><a href="#tag标签格式" class="headerlink" title="tag标签格式"></a>tag标签格式</h3><div class="checkbox"><input type="checkbox">            <p>纯文本测试</p>            </div><div class="checkbox checked"><input type="checkbox" checked="checked">            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">markdown</a> 语法</p>            </div><div class="checkbox red"><input type="checkbox">            <p>支持自定义颜色</p>            </div><div class="checkbox green checked"><input type="checkbox" checked="checked">            <p>绿色 + 默认选中</p>            </div><div class="checkbox yellow checked"><input type="checkbox" checked="checked">            <p>黄色 + 默认选中</p>            </div><div class="checkbox cyan checked"><input type="checkbox" checked="checked">            <p>青色 + 默认选中</p>            </div><div class="checkbox blue checked"><input type="checkbox" checked="checked">            <p>蓝色 + 默认选中</p>            </div><div class="checkbox plus green checked"><input type="checkbox" checked="checked">            <p>增加</p>            </div><div class="checkbox minus yellow checked"><input type="checkbox" checked="checked">            <p>减少</p>            </div><div class="checkbox times red checked"><input type="checkbox" checked="checked">            <p>叉</p>            </div><div class="checkbox"><input type="radio">            <p>纯文本测试</p>            </div><div class="checkbox checked"><input type="radio" checked="checked">            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">markdown</a> 语法</p>            </div><div class="checkbox red"><input type="radio">            <p>支持自定义颜色</p>            </div><div class="checkbox green"><input type="radio">            <p>绿色</p>            </div><div class="checkbox yellow"><input type="radio">            <p>黄色</p>            </div><div class="checkbox cyan"><input type="radio">            <p>青色</p>            </div><div class="checkbox blue"><input type="radio">            <p>蓝色</p>            </div><h3 id="Folding"><a href="#Folding" class="headerlink" title="Folding"></a>Folding</h3><details><summary> <p>查看图片测试</p> </summary>              <div class="content">              <p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/jinan6/PicGo-img/img/20200620194436.jpg" alt></p>              </div>            </details><details cyan open><summary> <p>查看默认打开的折叠框</p> </summary>              <div class="content">              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details green><summary> <p>查看代码测试</p> </summary>              <div class="content">                            </div>            </details><details yellow><summary> <p>查看列表测试</p> </summary>              <div class="content">              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details red><summary> <p>查看嵌套测试</p> </summary>              <div class="content">              <details blue><summary> <p>查看嵌套测试2</p> </summary>              <div class="content">              <details><summary> <p>查看嵌套测试3</p> </summary>              <div class="content">              <p>hahaha <span><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/emoji/tieba/%E6%BB%91%E7%A8%BD.png" style="height:24px"></span></p>              </div>            </details>              </div>            </details>              </div>            </details><h3 id="Fancybox"><a href="#Fancybox" class="headerlink" title="Fancybox"></a>Fancybox</h3><p>一行一个图片</p><div class="gallery ">              <p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt="图片描述"></p>            </div><p>一行多个图片（不换行）</p><div class="gallery ">              <p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B18FCBB3-67FD-48CC-B4F3-457BA145F17A.jpeg" alt="图片描述"><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/67239FBB-E15D-4F4F-8EE8-0F1C9F3C4E7C.jpeg" alt="图片描述"><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/00E0F0ED-9F1C-407A-9AA6-545649D919F4.jpeg" alt="图片描述"></p>            </div><p>多行多个图片</p><div class="gallery stretch" col="4">              <p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B951AE18-D431-417F-B3FE-A382403FF21B.jpeg" alt><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/AEB33F9D-7294-4CF1-B8C5-3020748A9D45.jpeg" alt><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/250662D4-5A21-4AAA-BB63-CD25CF97CFF1.jpeg" alt><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/10A0FCE5-36A1-4AD0-8CF0-019259A89E03.jpeg" alt><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/abstract/B951AE18-D431-417F-B3FE-A382403FF21B.jpeg" alt><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/AEB33F9D-7294-4CF1-B8C5-3020748A9D45.jpeg" alt><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/250662D4-5A21-4AAA-BB63-CD25CF97CFF1.jpeg" alt><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-wallpaper/landscape/10A0FCE5-36A1-4AD0-8CF0-019259A89E03.jpeg" alt></p>            </div><h3 id="使用neat压缩"><a href="#使用neat压缩" class="headerlink" title="使用neat压缩"></a>使用neat压缩</h3><p>在博客根目录下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p>在站点配置文件加入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">neat_html:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'*.min.css'</span></span><br><span class="line"><span class="attr">neat_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'*.min.js'</span></span><br></pre></td></tr></table></figure><h3 id="hexo-offline-popup"><a href="#hexo-offline-popup" class="headerlink" title="hexo-offline-popup"></a>hexo-offline-popup</h3><p>hexo-offline-popup 是一个 <a href="https://hexo.io/" target="_blank" rel="noopener">hexo</a> 插件， 它可加速你的Hexo网站的加载速度，以及网站内容更新弹窗提示。</p><ol><li><p>使用</p><p>在博客根目录安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-offline-popup --save</span><br></pre></td></tr></table></figure></li><li><p>在博客根目录的<code>_config.yml</code>中添加如下配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># offline config passed to sw-precache.</span></span><br><span class="line"><span class="attr">service_worker:</span></span><br><span class="line">  <span class="attr">maximumFileSizeToCacheInBytes:</span> <span class="number">5242880</span></span><br><span class="line">  <span class="attr">staticFileGlobs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">public/**/*.&#123;js,html,css,png,jpg,gif,svg,eot,ttf,woff,woff2&#125;</span></span><br><span class="line">  <span class="attr">stripPrefix:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ol><p>具体请看 插件作者  👉👉👉 <a href="https://colsrch.top/posts/32c8ba21/index.html?_sw-precache=93427639c70cbddfaff098f669eff7a2" target="_blank" rel="noopener">Colsrch’s blog</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>next主题添加自定义友链</title>
      <link href="/posts/48141/"/>
      <url>/posts/48141/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Hexo博客Next主题友链页面，本站用的是next7.8版本，版本不同可能略有差异</p></blockquote><h3 id="link渲染文件"><a href="#link渲染文件" class="headerlink" title="link渲染文件"></a>link渲染文件</h3><p>在 <code>hexo/themes/next/layout</code> 目录下建一个 <code>links.swig</code>文件，写入以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">  &#123;######################&#125;</span><br><span class="line">  &#123;### LINKS BLOCK ###&#125;</span><br><span class="line">  &#123;######################&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">"links"</span>&gt;</span><br><span class="line">        &lt;style&gt;</span><br><span class="line"></span><br><span class="line">            #links&#123;</span><br><span class="line">               margin-top: <span class="number">5</span>rem;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .links-content&#123;</span><br><span class="line">                margin-top:<span class="number">1</span>rem;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .link-navigation::after &#123;</span><br><span class="line">                content: <span class="string">" "</span>;</span><br><span class="line">                display: block;</span><br><span class="line">                clear: both;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .card &#123;</span><br><span class="line">                width: <span class="number">300</span>px;</span><br><span class="line">                font-size: <span class="number">1</span>rem;</span><br><span class="line">                padding: <span class="number">10</span>px <span class="number">20</span>px;</span><br><span class="line">                border-radius: <span class="number">4</span>px;</span><br><span class="line">                transition-duration: <span class="number">0.15</span>s;</span><br><span class="line">                margin-bottom: <span class="number">1</span>rem;</span><br><span class="line">                display:flex;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:nth-child(odd) &#123;</span><br><span class="line">                float: left;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:nth-child(even) &#123;</span><br><span class="line">                float: right;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:hover &#123;</span><br><span class="line">                transform: scale(<span class="number">1.1</span>);</span><br><span class="line">                box-shadow: <span class="number">0</span> <span class="number">2</span>px <span class="number">6</span>px <span class="number">0</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6</span>px <span class="number">0</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.04</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            .card a &#123;</span><br><span class="line">                border:none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .ava &#123;</span><br><span class="line">                width: <span class="number">3</span>rem!important;</span><br><span class="line">                height: <span class="number">3</span>rem!important;</span><br><span class="line">                margin:<span class="number">0</span>!important;</span><br><span class="line">                margin-right: <span class="number">1</span>em!important;</span><br><span class="line">                border-radius:<span class="number">4</span>px;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header &#123;</span><br><span class="line">                font-style: italic;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                width: <span class="number">236</span>px;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header a &#123;</span><br><span class="line">                font-style: normal;</span><br><span class="line">                color: #2bbc8a;</span><br><span class="line">                font-weight: bold;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header a:hover &#123;</span><br><span class="line">                color: #d480aa;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header .info &#123;</span><br><span class="line">                font-style:normal;</span><br><span class="line">                color:#a3a3a3;</span><br><span class="line">                font-size:<span class="number">14</span>px;</span><br><span class="line">                min-width: <span class="number">0</span>;</span><br><span class="line">                text-overflow: ellipsis;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                white-space: nowrap;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="links-content"&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">             &lt;div class="no-icon note warning"&gt;&lt;div class="link-info"&gt;👨‍🎓 跟着大佬走，成为小大佬&lt;/</span>div&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="link-navigation"&gt;</span></span><br><span class="line"><span class="regexp">                    &#123;% for link in theme.defaultlinks %&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                    &lt;div class="card"&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;img class="ava nofancybox" src="&#123;&#123; link.avatar &#125;&#125;"/</span>&gt;</span><br><span class="line">                        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card-header"</span>&gt;</span><br><span class="line">                        &lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link.site &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> &#123;&#123; link.nickname &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link.site &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"focus-links"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-plus"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="symbol">&amp;nbsp;</span>关注<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;div class="info"&gt;&#123;&#123; link.info &#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">                        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &lt;div class="no-icon note primary"&gt;&lt;div class="link-info"&gt;🍭 五湖四海的朋友们&lt;/</span>div&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">             &lt;div class="link-navigation"&gt;</span></span><br><span class="line"><span class="regexp">                    &#123;% for link in theme.friendslinks %&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                    &lt;div class="card"&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;img class="ava nofancybox" src="&#123;&#123; link.avatar &#125;&#125;"/</span>&gt;</span><br><span class="line">                        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card-header"</span>&gt;</span><br><span class="line">                        &lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link.site &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> &#123;&#123; link.nickname &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link.site &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"focus-links"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-plus"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="symbol">&amp;nbsp;</span>关注<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;div class="info"&gt;&#123;&#123; link.info &#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">                        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#123;&#123; page.content &#125;&#125;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  &#123;##########################&#125;</span></span><br><span class="line"><span class="regexp">  &#123;### END LINKS BLOCK ###&#125;</span></span><br><span class="line"><span class="regexp">  &#123;##########################&#125;</span></span><br><span class="line"><span class="regexp">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure><h3 id="page渲染文件"><a href="#page渲染文件" class="headerlink" title="page渲染文件"></a>page渲染文件</h3><p>修改 <code>hexo/themems/next/layout/page.swig</code> 文件，在</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- elif page.type === <span class="string">'schedule'</span> and not page.title %&#125;</span><br><span class="line">    &#123;&#123;- __(<span class="string">'title.schedule'</span>) + page_title_suffix &#125;&#125;</span><br></pre></td></tr></table></figure><p>下添加以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- elif page.type &#x3D;&#x3D;&#x3D; &#39;links&#39; and not page.title %&#125;</span><br><span class="line">  &#123;&#123;- __(&#39;title.links&#39;) + page_title_suffix &#125;&#125;</span><br></pre></td></tr></table></figure><p>然后在这个文件中，接着引入刚才新建的 swig 页面：</p><p>在</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include <span class="string">'_scripts/pages/schedule.swig'</span> %&#125;</span><br></pre></td></tr></table></figure><p>下，加入以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elif page.type === <span class="string">'links'</span> %&#125;</span><br><span class="line">           &#123;% include <span class="string">'links.swig'</span> %&#125;</span><br></pre></td></tr></table></figure><h3 id="index文件"><a href="#index文件" class="headerlink" title="index文件"></a>index文件</h3><p>修改 <code>links</code> 文件夹下的 <code>index.md</code> 文件，可以自己根据需要修改</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2020-05-12 13:56:52</span><br><span class="line">type: "links"</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">### 友链声明：</span></span><br><span class="line"></span><br><span class="line">1、本站会主动保存您的 HTTPS 形式的头像图片链接</span><br><span class="line">2、本站会定期清理无法访问的友链，如果更换了链接信息请至评论区留言，谢谢合作！</span><br><span class="line">3、本站会定期查看双方是否互为友链，如果取消本站友链，本站也会将您的友链移除</span><br><span class="line"></span><br><span class="line"><span class="section">### 申请方式：</span></span><br><span class="line"></span><br><span class="line">先将本站的友链添加到您的友链，相关信息如下</span><br><span class="line">然后按照以下格式在本站留言区留言，待博主为您添上友链</span><br><span class="line"></span><br><span class="line">&gt;名称：Sakura` Blogs</span><br><span class="line">&gt;头像链接：https://jinan6.github.io/images/avatar.png</span><br><span class="line">&gt;主页链接：https://jinan6.github.io/</span><br><span class="line">&gt;说明信息：个人小站</span><br></pre></td></tr></table></figure><h3 id="config配置文件"><a href="#config配置文件" class="headerlink" title="config配置文件"></a>config配置文件</h3><p>最后，我们添加友链的话，需要在主题配置文件 <code>hexo/themes/next/_config.xml</code> 文件末尾添加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 友情链接</span><br><span class="line">defaultlinks:</span><br><span class="line">  - nickname: AomanHao     # 昵称</span><br><span class="line">    avatar: http:<span class="comment">//www.aomanhao.top/images/Avatar.jpg    # 头像地址</span></span><br><span class="line">    site: http:<span class="comment">//www.aomanhao.top #友链地址</span></span><br><span class="line">    info: 图像处理，优化世界</span><br><span class="line"></span><br><span class="line">friendslinks:</span><br><span class="line">  - nickname: AomanHao     # 昵称</span><br><span class="line">    avatar: http:<span class="comment">//www.aomanhao.top/images/Avatar.jpg    # 头像地址</span></span><br><span class="line">    site: http:<span class="comment">//www.aomanhao.top #友链地址</span></span><br><span class="line">    info: 图像处理，优化世界</span><br></pre></td></tr></table></figure><p><code>defaultlinks:</code>呼应的是<code>link.swig</code>文件中 <code>👨‍🎓 跟着大佬走，成为小大佬</code>段落，此处链接写大佬的博客；<br><code>friendslinks:</code>呼应的是<code>link.swig</code>文件中 <code>🍭 五湖四海的朋友们</code>段落，此处链接写朋友的博客。<br>此处内容可以根据自己需要自行修改</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.aomanhao.top/2019/12/29/hexo_links/" target="_blank" rel="noopener">AomanHao的个人博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Next </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库引擎</title>
      <link href="/posts/29333/"/>
      <url>/posts/29333/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关于数据库引擎</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INNODB  默认使用</span><br><span class="line">MYISAM  早些年使用</span><br></pre></td></tr></table></figure><h3 id="INNODB引擎和MYISAM引擎的区别"><a href="#INNODB引擎和MYISAM引擎的区别" class="headerlink" title="INNODB引擎和MYISAM引擎的区别"></a>INNODB引擎和MYISAM引擎的区别</h3><table><thead><tr><th></th><th>MYISAM</th><th>INNODB</th></tr></thead><tbody><tr><td>事务支持</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键约束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间的大小</td><td>较小</td><td>较大，约为两倍</td></tr></tbody></table><p>常规使用操作</p><ul><li>MYISAM   节约空间，速度较快</li><li>INNODB   安全性高，事务的处理，多表用户操作</li></ul><blockquote><p>在物理空间的位置</p></blockquote><p>所有数据库文件都存在<strong>data</strong>目录下</p><p>本质还是文件的存储！</p><h3 id="MySQL引擎在物理文件上的区别"><a href="#MySQL引擎在物理文件上的区别" class="headerlink" title="MySQL引擎在物理文件上的区别"></a>MySQL引擎在物理文件上的区别</h3><ul><li>InnoDB 在数据库表中只有一个*.frm文件，以及上级目录下的 ibdata1文件</li><li>MYISAM对应文件<ul><li>*.frm   表结构的定义文件</li><li>*.MYD   数据文件（data）</li><li>*.MYI  索引文件（index）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
          <category> 引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库设计</title>
      <link href="/posts/41739/"/>
      <url>/posts/41739/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关于数据库设计的一些知识点</p></blockquote><a id="more"></a><h3 id="什么是数据库设计？"><a href="#什么是数据库设计？" class="headerlink" title="什么是数据库设计？"></a>什么是数据库设计？</h3><p>简单来说,数据库设计就是根据业务系统的具体需要,结合我们所选用的DBMS(数据库管理系统) ,为这个业务系统构造出最优的数据存储模型。并建立好数据库中的表结构及表与表之间的关联关系的过程。使之能<strong>有效的</strong>对应用系统中的数据进行<strong>存储</strong>,并可以<strong>高效的</strong>对已经存储的数据进行<strong>访问</strong></p><h3 id="为什么要进行数据库设计？"><a href="#为什么要进行数据库设计？" class="headerlink" title="为什么要进行数据库设计？"></a>为什么要进行数据库设计？</h3><table><thead><tr><th>优良的设计</th><th>糟糕的设计</th></tr></thead><tbody><tr><td>减少数据冗余</td><td>存在大量数据冗余</td></tr><tr><td>避免数据维护异常</td><td>存在数据插入，更新，删除异常</td></tr><tr><td>节约存储空间</td><td>浪费大量存储空间</td></tr><tr><td>高效的访问</td><td>访问数据低效</td></tr></tbody></table><h3 id="设计步骤"><a href="#设计步骤" class="headerlink" title="设计步骤"></a>设计步骤</h3><p>需求分析———逻辑设计———物理设计———维护优化</p><h3 id="为什么要进行需求分析？"><a href="#为什么要进行需求分析？" class="headerlink" title="为什么要进行需求分析？"></a>为什么要进行需求分析？</h3><ol><li>了解系统中所要存储的数据</li><li>了解数据的存储特点</li><li>了解数据的生命周期</li></ol><h3 id="要搞清楚的一些问题"><a href="#要搞清楚的一些问题" class="headerlink" title="要搞清楚的一些问题"></a>要搞清楚的一些问题</h3><ol><li>实体及实体之间的关系（一对一，一对多，多对对）</li><li>实体所包含的属性有什么？</li><li>那些属性或属性的组合可以唯一标识一个实体</li></ol><h3 id="实例演示"><a href="#实例演示" class="headerlink" title="实例演示"></a><center>实例演示</center></h3><p>以一个小型的电子商务网站为例，在这个电子商务网站的系统中包含了几个核心模块：<span style="color:red"><strong>用户模块</strong>，</span><span style="color:red"><strong>商品模块</strong>，</span><span style="color:red"><strong>订单模块</strong>，</span><span style="color:red"><strong>购物车模块</strong>，</span><span style="color:red"><strong>供应商模块</strong>。</span></p><h4 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200525194743301.png" alt></p><h4 id="商品模块"><a href="#商品模块" class="headerlink" title="商品模块"></a>商品模块</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200525194905458.png" alt="商品模块"></p><h4 id="订单模块"><a href="#订单模块" class="headerlink" title="订单模块"></a>订单模块</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200525195035039.png" alt="订单模块"></p><h4 id="购物车模块"><a href="#购物车模块" class="headerlink" title="购物车模块"></a>购物车模块</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200525195113526.png" alt="购物车模块"></p><h4 id="供应商模块"><a href="#供应商模块" class="headerlink" title="供应商模块"></a>供应商模块</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200525195141092.png" alt="供应商模块"></p><h4 id="各模块之间的关系"><a href="#各模块之间的关系" class="headerlink" title="各模块之间的关系"></a>各模块之间的关系</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200525195257690.png" alt="关系图"></p><h4 id="实体之间的关系"><a href="#实体之间的关系" class="headerlink" title="实体之间的关系"></a>实体之间的关系</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526095527277.png" alt="实体之间的关系"></p><h3 id="逻辑设计是做什么的"><a href="#逻辑设计是做什么的" class="headerlink" title="逻辑设计是做什么的"></a>逻辑设计是做什么的</h3><ol><li>将需求转化为数据库的逻辑模型</li><li>通过ER图的形式对逻辑模型进行展示</li><li>同所选用的具体的DBMS系统无关</li></ol><h4 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526101428664.png" alt="解释"></p><h4 id="ER图例说明"><a href="#ER图例说明" class="headerlink" title="ER图例说明"></a>ER图例说明</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526101532280.png" alt="ER图"></p><hr><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526101637132.png" alt="实例"></p><h3 id="设计范式概要"><a href="#设计范式概要" class="headerlink" title="设计范式概要"></a>设计范式概要</h3><p>常见数据库设计范式包括：</p><p>第一范式，第二范式，第三范式及BC范式，当然还有第四以及第五范式，不过这里我们把重点放到前三个范式上，这也是目前我们大多数数据库设计要遵循的范式。</p><h3 id="数据操作异常及数据冗余"><a href="#数据操作异常及数据冗余" class="headerlink" title="数据操作异常及数据冗余"></a>数据操作异常及数据冗余</h3><h4 id="数据操作异常"><a href="#数据操作异常" class="headerlink" title="数据操作异常"></a>数据操作异常</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526102133363.png" alt="数据异常"></p><h4 id="数据冗余"><a href="#数据冗余" class="headerlink" title="数据冗余"></a>数据冗余</h4><p>数据冗余是指相同的数据在多个地方存在，或者说表中的某个列可以由其他列进行计算得到，这样就说表中存在数据冗余。</p><h3 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h3><p><strong>定义：</strong>数据库表中的所有字段都是单一属性，不可再分的。</p><p>这个单一属性是由基本的数据类型所构成的，如整数，浮点数，字符串</p><p><strong>换句话说</strong>   <span style="color:red"><strong>第一范式要求数据库中的表都是二维表</strong></span></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526105325301.png" alt="例子"></p><h3 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h3><p><strong>定义：</strong>数据库的表中不存在非关键字段对任一候选关键字段的部分函数依赖。</p><p>部分函数依赖是指存在着组合关键字中的任一关键字决定非关键字的情况</p><p><strong>换句话说</strong> <span style="color:red"><strong>所有单关键字段的表都符合第二范式</strong></span></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526103909262.png" alt="例子"></p><p>由于供应商和商品之间是多对多的关系</p><p>所以只有使用商品名称和供应商名称才可以唯一标识出一件商品</p><p>也就是商品名称和供应商名称是一组组合关键字。</p><p>上表中存在以下的部分函数依赖关系</p><p>（商品名称）——&gt;（价格，描述，重量，商品有效期）</p><p>（供应商名称）——&gt;（供应商电话）</p><h4 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h4><ol><li>插入异常</li><li>删除异常</li><li>更新异常</li><li>数据冗余</li></ol><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>新建一张表</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526104513794.png" alt="新表"></p><h3 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h3><p>定义：</p><p>第三范式实在第二范式的基础上定义的，如果数据表中不存在非关键字段，对任意候选关键字段的传递函数依赖则符合第三范式</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526104759021.png" alt="表"></p><p>存在以下转递函数依赖关系：</p><p>（商品名称）——&gt;（分类）——&gt;（分类描述）</p><p>也就是说存在非关键字段   “分类描述”</p><p>对关键字段  “商品名称”  的传递函数依赖</p><h4 id="存在的问题-1"><a href="#存在的问题-1" class="headerlink" title="存在的问题"></a>存在的问题</h4><p>（分类，分类描述）对于每一个商品都会进行记录，所以存在着数据冗余。同时也还存在数据的插入，更新及删除异常。</p><h4 id="解决-1"><a href="#解决-1" class="headerlink" title="解决"></a>解决</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526105146033.png" alt="表"></p><h3 id="BC范式"><a href="#BC范式" class="headerlink" title="BC范式"></a>BC范式</h3><p><strong>定义:</strong></p><p>在第三范式的基础之上,数据库表中如果不存在任何字段对任一候选关键字段的传递函数依赖则附合BC范式。也就是说如果是复合关键字,则复合关键字之间也不能存在函数依赖关系。</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526105538621.png" alt="例子"></p><p><strong>假定：</strong></p><p>供应商联系人只能受雇于一家供应商，每家供应商可以供应多个商品则存在如下决定关系：</p><p>（供应商，商品ID）——&gt;（联系人，商品数量）</p><p>（联系人，供应商）——&gt;（供应商，商品数量）</p><p><strong>存在下列关系因此不符合要求</strong></p><p>（供应商）——&gt;（供应商联系人）</p><p>（供应商联系人）——&gt;（供应商）</p><p>并且存在数据操作异常及数据冗余</p><h4 id="解决-2"><a href="#解决-2" class="headerlink" title="解决"></a>解决</h4><p>使用拆表的方式</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526110122986.png" alt="拆表"></p><h3 id="数据库物理设计要做什么？"><a href="#数据库物理设计要做什么？" class="headerlink" title="数据库物理设计要做什么？"></a>数据库物理设计要做什么？</h3><ol><li>选择合适的数据库管理系统</li><li>定义数据库、表及字段的命名规范</li><li>根据所选的DBMS系统选择合适的字段类型</li><li>反范式化设计</li></ol><h4 id="选择合适的数据库"><a href="#选择合适的数据库" class="headerlink" title="选择合适的数据库"></a>选择合适的数据库</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526110943364.png" alt="常见数据库"></p><h3 id="MySQL常用的存储引擎"><a href="#MySQL常用的存储引擎" class="headerlink" title="MySQL常用的存储引擎"></a>MySQL常用的存储引擎</h3><table><thead><tr><th>存储引擎</th><th>事务</th><th>锁粒度</th><th>主要应用</th><th>忌用</th></tr></thead><tbody><tr><td>MyISAM</td><td>不支持</td><td>支持并发插入的表级锁</td><td>SELECT，INSERT</td><td>读写操作频繁</td></tr><tr><td>MRG_MYISAM</td><td>不支持</td><td>支持并发插入的表级锁</td><td>分段归档，数据仓库</td><td>全局查找过多的场景</td></tr><tr><td>Innodb</td><td>支持</td><td>支持MVCC的行级锁</td><td>事务处理</td><td>无</td></tr><tr><td>Archive</td><td>不支持</td><td>行级锁</td><td>日志记录，值支持insert，select</td><td>需要随机读取，更新，删除</td></tr><tr><td>Ndb cluster</td><td>支持</td><td>行级锁</td><td>高可用性</td><td>大部分应用</td></tr></tbody></table><h3 id="表及字段的命名规则"><a href="#表及字段的命名规则" class="headerlink" title="表及字段的命名规则"></a>表及字段的命名规则</h3><p><strong>所有对象命名应该遵循下述规则：</strong></p><ol><li><p><strong>可读性原则</strong></p><p>使用大写和小写来格式化的库对象名字以获得良好的可读性。</p><p>例如：使用CustAddress而不是custaddress来提高可读性。（这里要注意有些DBMS系统对表明的大小写是敏感的）</p></li><li><p><strong>表意性原则</strong></p><p>对象的名字应该能够描述它所标识的对象。</p><p>例如：对于表，表的名称应该能够体现表中存储的数据内容；对于存储过程，存储过程应该能够体现存储过程的功能。</p></li><li><p><strong>长名原则</strong></p><p>尽可能少使用或者不使用缩写，适用于数据库（DATABASE）名之外的任一对象</p></li></ol><table><thead><tr><th>FullName</th><th>Sex</th><th>birthday</th><th>Address</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>1978-03-01</td><td>北京市</td></tr></tbody></table><h3 id="数据库字段类型选择原则"><a href="#数据库字段类型选择原则" class="headerlink" title="数据库字段类型选择原则"></a>数据库字段类型选择原则</h3><p>列的数据类型一方面影响数据存储空间的开销，另一方面也会影响数据查询性能。当一个列可以选择多种数据类型时，<strong>应该优先考虑</strong>数字类型，<strong>其次是</strong>日期或者二进制类，<strong>最后是</strong>字符类型。对于<strong>相同级别</strong>的数据类型，应该<strong>优先选择</strong>占用空间小的数据类型。</p><h4 id="各个类型的占用空间"><a href="#各个类型的占用空间" class="headerlink" title="各个类型的占用空间"></a>各个类型的占用空间</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526142911511.png" alt="类型"></p><p><span style="color:red"><strong>以上选择原则主要是从下面两个角度考虑：</strong></span></p><ol><li><p>在对数据进行比较（查询条件，join条件及排序）操作时：</p><p><strong>同样的数据，字符处理往往比数字处理慢。</strong></p></li><li><p>在数据库中，数据处理以页为单位，<strong>列的长度越小，利于性能提升。</strong></p></li></ol><h4 id="char与varchar如何选择"><a href="#char与varchar如何选择" class="headerlink" title="char与varchar如何选择"></a>char与varchar如何选择</h4><p><strong>原则：</strong></p><ol><li><p>如果列中要存储的数据长度差不多是一致的， 则应该考虑用char，否则应该考虑用varchar。</p></li><li><p>如果列中的最大数据长度小于50Byte，则一般也考虑用char。</p><p>（当然，如果这个列很少用，则给予节省空间和减少 I/O 的考虑，还是可以选择用varchar）</p></li><li><p>一般不宜定义大于50Byte的char类型列</p></li></ol><h3 id="decimal和float如何选择"><a href="#decimal和float如何选择" class="headerlink" title="decimal和float如何选择"></a>decimal和float如何选择</h3><p><strong>原则：</strong></p><ol><li>decimal用于存储精确数据，而float只能用于存储非精确数据。故精确数据只能选择用decimal类型。</li><li>由于float的存储空间开销一般比decimal小（精确到7位小数只需要4个字节，而精确到15位小数只需要8个字节），故非精确数据优先选择float类型。</li></ol><h3 id="时间类型如何存储"><a href="#时间类型如何存储" class="headerlink" title="时间类型如何存储"></a>时间类型如何存储</h3><ol><li><p><strong>使用 int 来存储时间字段的优缺点</strong></p><p>优点：字段长度比datatime小。</p><p>缺点：使用不方便，要进行函数转换。 </p><p>限制：只能存储到 2038-1-19  11: 14:07 即2^32为 2147483648</p></li><li><p><strong>需要存储的时间粒度</strong></p><p>年   月   日   小时  分  秒   周 </p></li></ol><h3 id="数据库设计其他注意事项"><a href="#数据库设计其他注意事项" class="headerlink" title="数据库设计其他注意事项"></a>数据库设计其他注意事项</h3><hr><h3 id="如何选择主键"><a href="#如何选择主键" class="headerlink" title="如何选择主键"></a>如何选择主键</h3><ol><li><p><strong>区分业务主键和数据库主键</strong></p><p>业务主键用于标识业务数据，进行表与表之间的关联；</p><p>数据库主键为了优化数据存储（Innodb会生成6个字节的隐含主键）</p></li><li><p><strong>根据数据库的类型，考虑主键是否要顺序增长</strong></p><p>有些数据库是按主键的顺序逻辑存储的</p></li><li><p><strong>主键的字段类型所占用空间要尽可能的小</strong></p><p>对于使用聚集索引方式存储的表，每个索引后都会附加主键信息。</p></li></ol><hr><h3 id="避免使用外键约束"><a href="#避免使用外键约束" class="headerlink" title="避免使用外键约束"></a>避免使用外键约束</h3><ol><li>降低数据导入的效率</li><li>增加维护成本</li><li>虽然不建议使用外键约束，但是相关联的列上一定要索引</li></ol><hr><h3 id="避免使用触发器"><a href="#避免使用触发器" class="headerlink" title="避免使用触发器"></a>避免使用触发器</h3><ol><li>降低数据导入的效率</li><li>可能会出现意想不到的数据异常</li><li>使业务逻辑变的复杂</li></ol><hr><h3 id="关于预留字段"><a href="#关于预留字段" class="headerlink" title="关于预留字段"></a>关于预留字段</h3><ol><li>无法准确的知道预留字段的类型</li><li>无法准确的知道预留字段中所存储的内容</li><li>后期维护预留字段所要的成本，同增加一个字段所需要的成本是相同的</li><li><span style="color:red"><strong>严禁</strong></span>使用预留字段</li></ol><hr><h3 id="什么是反范式化"><a href="#什么是反范式化" class="headerlink" title="什么是反范式化"></a>什么是反范式化</h3><p><span style="color:red"><strong>反范式化</strong></span>是针对范式化而言的，所谓的反范式化就是为了<span style="color:red"><strong>性能</strong></span>和<span style="color:red"><strong>读取效率</strong></span>的考虑而适当的对第三范式的要求进行<span style="color:red"><strong>违反</strong></span>，而允许存在少量的数据冗余，换句话来说，反范式化就是使用空间来换取时间。</p><h3 id="为什么反范式化"><a href="#为什么反范式化" class="headerlink" title="为什么反范式化"></a>为什么反范式化</h3><ol><li>减少表的关联数量</li><li>增加数据的读取效率</li><li>反范式化一定要适度</li></ol><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526154923596.png" alt="例子"></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526155002906.png" alt="查询"></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526155021754.png" alt="查询"></p><p>查询的时候较为复杂</p><p><strong>反范式化之后</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526155102089.png" alt="反范式化"></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526155116682.png" alt="查询"></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526155136600.png" alt="查询"></p><h3 id="数据库维护和优化要做什么"><a href="#数据库维护和优化要做什么" class="headerlink" title="数据库维护和优化要做什么"></a>数据库维护和优化要做什么</h3><ol><li>维护数据字典</li><li>维护索引</li><li>维护表结构</li><li>在适当的时候对表进行水平高拆分或垂直拆分</li></ol><h3 id="数据库如何维护数据字典"><a href="#数据库如何维护数据字典" class="headerlink" title="数据库如何维护数据字典"></a>数据库如何维护数据字典</h3><ol><li>使用第三方工具对数据字典进行维护</li><li>利用数据库本身的备注字段来维<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526155710071.png" alt="备注">护数据字典。以MySQL为例</li><li>导出数据字典</li></ol><h3 id="数据库如何维护索引"><a href="#数据库如何维护索引" class="headerlink" title="数据库如何维护索引"></a>数据库如何维护索引</h3><h4 id="如何选择合适的列建立索引？"><a href="#如何选择合适的列建立索引？" class="headerlink" title="如何选择合适的列建立索引？"></a>如何选择合适的列建立索引？</h4><ol><li>出现在  where 从句，  group by  从句， order by 从句中的列</li><li>可选择性高德列要放在索引的前面</li><li>索引中不要包含太长的数据类型</li></ol><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ol><li>索引并不是越多越好，过多的索引不但会降低写效率，而且会降低读的效率</li><li>定期维护索引碎片</li><li>在SQL语句中不要使用强制索引关键字</li></ol><h3 id="数据库如何维护表结构"><a href="#数据库如何维护表结构" class="headerlink" title="数据库如何维护表结构"></a>数据库如何维护表结构</h3><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ol><li><p>使用在线变更表结构的工具</p><p>MySQL 5.5之前可以使用 pt-online-schema-change</p><p>MySQL 5.6 之后本身支持在线表结构的变更</p></li><li><p>同时对数据字典进行维护</p></li><li><p>控制表的宽度和大小</p></li></ol><h3 id="数据库中适合的操作"><a href="#数据库中适合的操作" class="headerlink" title="数据库中适合的操作"></a>数据库中适合的操作</h3><ol><li>批量操作  VS  逐条操作</li><li>禁止使用 Select * 这样的查询</li><li>控制使用用户自定义函数</li><li>不要使用数据库中的全文索引</li></ol><h3 id="表的垂直拆分"><a href="#表的垂直拆分" class="headerlink" title="表的垂直拆分"></a>表的垂直拆分</h3><ol><li>经常一起查询的列放到一起</li><li>text，blob等大字段拆分出到附加表中</li></ol><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526160941638.png" alt="垂直拆分"></p><h3 id="表的水平拆分"><a href="#表的水平拆分" class="headerlink" title="表的水平拆分"></a>表的水平拆分</h3><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526161548429.png" alt="拆分"></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/41739/image-20200526161439575.png" alt="水平拆分"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>以上内容根据 <a href="https://www.imooc.com/learn/117" target="_blank" rel="noopener">数据库设计那些事</a>进行整理</p>]]></content>
      
      
      <categories>
          
          <category> 数据库设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客美化之CSS篇</title>
      <link href="/posts/26259/"/>
      <url>/posts/26259/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注意：本样式美化方式只适用于 Next 主题，并且最好懂一些 CSS 前端知识，以便有些不兼容样式部分可以自行在浏览器中 F12 调试。</p></blockquote><p>修改的话就找到next主题目录下的 <code>next\source\css\_custom\custom.styl</code> ，这个文件是Next主题预留给用户自定义修改css样式的文件，所以我们绝大多数全局样式都在这里进行修改即可。</p><p>由于next7.x版本以上删除了 <code>_custom\custom.styl</code> ，没有则新建，新建完成后在<code>next\source\css\main.styl</code>引入即可，在末尾加入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">"_custom/custom"</span>;</span><br></pre></td></tr></table></figure><p>以下附上我的 <code>custom.styl</code> 文件内容为了以后方便查看</p><p>文件位置：<strong>hexo/themes/next/source/css/_custom/custom.styl</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br></pre></td><td class="code"><pre><span class="line"> //背景图片</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(/images/aaa.jpg);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    background-attachment:fixed; //不重复</span><br><span class="line">    background-size: cover;      //填充</span><br><span class="line">    <span class="selector-tag">background-position</span><span class="selector-pseudo">:50</span>% 50%;</span><br><span class="line">&#125;</span><br><span class="line">//文章内容的透明度设置</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  opacity: 1;//0.9为透明</span><br><span class="line">  // padding: 25px;//阅读全文增加的间距</span><br><span class="line">  padding: 15px;//阅读全文增加的间距</span><br><span class="line">  <span class="selector-tag">-webkit-box-shadow</span>: 0 0 14<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(202,203,203,0<span class="selector-class">.5</span>);</span><br><span class="line">  <span class="selector-tag">-moz-box-shadow</span>: 0 0 14<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(202,203,204,0<span class="selector-class">.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span><span class="selector-class">.index</span><span class="selector-class">.posts-expand</span>&#123;</span><br><span class="line">opacity: 1;//0.9为透明</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> //侧边框的透明度设置</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  border-radius: 20px;//侧边栏下方圆角</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏的透明度设置</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  // background: rgba(255,255,255,0.9);//侧边栏上部分透明度</span><br><span class="line">  <span class="selector-tag">border-radius</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//搜索框（local-search）的透明度设置</span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"> // 主页文章添加阴影效果</span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">   <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</span><br><span class="line">   <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// /*更好的侧边滚动条*/</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:start</span><span class="selector-pseudo">:increment</span>,<span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:end</span><span class="selector-pseudo">:decrement</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-corner</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track</span>,<span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:start</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="comment">/*background: url(../images/scrollbar_arrow.png) no-repeat 0 0;*/</span>  <span class="comment">/*可以添加滚动条样式*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//文章标题与内容之间的间距</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'Lato'</span>, <span class="string">"PingFang SC"</span>, <span class="string">"Microsoft YaHei"</span>, sans-serif;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.75em</span>;</span><br><span class="line">    margin: 3px 0 8px 0;//主要</span><br><span class="line">    <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//其他文章圆角</span><br><span class="line"><span class="selector-class">.post-block</span> + <span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">15px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//第一篇文章圆角</span><br><span class="line"><span class="selector-tag">article</span><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">15px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line">//文章间距</span><br><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">35px</span>;</span><br><span class="line">border-radius 15px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//精品文章</span><br><span class="line"><span class="selector-class">.jingping</span>&#123;</span><br><span class="line">  <span class="attribute">background </span>: <span class="number">#00a8c3</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">2px</span> <span class="number">4px</span> <span class="number">2px</span> <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line">//评论圆角</span><br><span class="line"><span class="selector-class">.v</span><span class="selector-attr">[data-class=v]</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// //小猫</span><br><span class="line">// //自定义回到顶部样式</span><br><span class="line">// .back-to-top &#123;</span><br><span class="line">//   right: 60px;</span><br><span class="line">//   width: 70px;  //图片素材宽度</span><br><span class="line">//   height: 900px;  //图片素材高度</span><br><span class="line">//   top: -900px;</span><br><span class="line">//   bottom: unset;</span><br><span class="line">//   transition: all .5s ease-in-out;</span><br><span class="line">//   background: url("/images/scroll.png");</span><br><span class="line"></span><br><span class="line">//   //隐藏箭头图标</span><br><span class="line">//   &gt; i &#123;</span><br><span class="line">//     display: none;</span><br><span class="line">//   &#125;</span><br><span class="line"></span><br><span class="line">//   &amp;.back-to-top-on &#123;</span><br><span class="line">//     bottom: unset;</span><br><span class="line">//     top: 100vh &lt; (900px + 200px) ? calc( 100vh - 900px - 200px ) : 0px;</span><br><span class="line">//   &#125;</span><br><span class="line">// &#125;</span><br><span class="line">//阅读全文</span><br><span class="line">// .btn &#123;</span><br><span class="line">//     display: inline-block;</span><br><span class="line">//     padding: 0 20px;</span><br><span class="line">//     font-size: 14px;</span><br><span class="line">//     color: #fff;</span><br><span class="line">//     background: #222;</span><br><span class="line">//     border: 2px solid #222;</span><br><span class="line">//     text-decoration: none;</span><br><span class="line">//     border-radius: 0;</span><br><span class="line">//     transition-property: background-color;</span><br><span class="line">//     transition-duration: 0.2s;</span><br><span class="line">//     transition-timing-function: ease-in-out;</span><br><span class="line">//     transition-delay: 0s;</span><br><span class="line">//     line-height: 2;</span><br><span class="line">// &#125;</span><br><span class="line"></span><br><span class="line">//主体的间距 距离左侧</span><br><span class="line"><span class="selector-class">.content</span><span class="selector-class">.index</span><span class="selector-class">.posts-expand</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line"> // margin-bottom: 50px;</span><br><span class="line">    <span class="selector-tag">padding</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    // box-shadow: 0 0 14px rgba(202,203,203,.5);</span><br><span class="line">&#125;</span><br><span class="line">//引用显示的左侧颜色</span><br><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">4px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--blockquote-color);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">border-left-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line">//目录字体大小</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-tag">ol</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    font-size: 15px;//</span><br><span class="line">&#125;</span><br><span class="line">//文章下方标签的CSS</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-tags</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">24</span>);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'Comic Sans MS'</span>,sans-serif;</span><br><span class="line">    <span class="attribute">transition</span>: .<span class="number">2s</span> ease-out;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line">//文章下方上一篇下一篇的样式</span><br><span class="line"><span class="selector-class">.post-nav-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5073b8</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line">//近期文章样式</span><br><span class="line"><span class="selector-class">.links-of-blogroll-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links-of-blogroll-list</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5073b8</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line">.links-of-blogroll-list a:hover &#123;//鼠标移动增加下划线</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-id">#5073b8</span>;</span><br><span class="line">    <span class="selector-tag">font-weight</span>: 700;</span><br><span class="line"><span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line">//去除超链接下划线</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">//文章内容里的超链接</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">a</span><span class="selector-pseudo">:not(.btn)</span><span class="selector-pseudo">:not(.hexo-douban-button)</span><span class="selector-pseudo">:not(.hexo-douban-tab)</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5073b8</span>;</span><br><span class="line">    // border-bottom: none;</span><br><span class="line"><span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999</span>;</span><br><span class="line">    <span class="selector-tag">text-decoration</span>: <span class="selector-tag">none</span>;</span><br><span class="line">&#125;</span><br><span class="line">.post-body a:not(.btn):not(.hexo-douban-button):not(.hexo-douban-tab):hover &#123;//鼠标移动上取消下划线</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-id">#5073b8</span>;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">    <span class="selector-tag">text-decoration</span>: <span class="selector-tag">none</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//文章目录默认展开</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.nav-child</span> &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line"></span><br><span class="line">//打赏按钮</span><br><span class="line"><span class="selector-class">.reward-container</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: inline-block;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">        <span class="attribute">font-style</span>: normal;</span><br><span class="line">        <span class="attribute">font-variant</span>: normal;</span><br><span class="line">        <span class="attribute">font-stretch</span>: normal;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">        <span class="attribute">font-family</span>: <span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#f44336</span>;</span><br><span class="line">&#125;</span><br><span class="line">//评论框去除下方广告</span><br><span class="line"><span class="selector-class">.v</span><span class="selector-attr">[data-class=v]</span> <span class="selector-class">.txt-right</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 文章主体阴影</span><br><span class="line">// .content.index.posts-expand &#123;</span><br><span class="line">//     opacity: 1;</span><br><span class="line">//     padding: 10px;</span><br><span class="line">//     // margin-top: 30px;</span><br><span class="line">//     margin-bottom: 50px;</span><br><span class="line">//     padding: 25px;</span><br><span class="line">//     // -webkit-box-shadow: 0 0 14px rgba(202,203,203,0.5);</span><br><span class="line">//     // -moz-box-shadow: 0 0 14px rgba(202,203,204,0.5);</span><br><span class="line">// &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span><span class="selector-class">.post</span><span class="selector-class">.posts-expand</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">border-radius: 30px;//圆角</span><br><span class="line">    <span class="selector-tag">-webkit-box-shadow</span>: 0 0 14<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(202,203,203,0<span class="selector-class">.5</span>);</span><br><span class="line">    <span class="selector-tag">-moz-box-shadow</span>: 0 0 14<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(202,203,204,0<span class="selector-class">.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--content-bg-color);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">3px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> -<span class="number">1px</span> <span class="number">0.5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">09</span>);</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--text-color);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">240px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//相关文章样式</span><br><span class="line"><span class="selector-class">.popular-posts-header</span> &#123;</span><br><span class="line">   // font-size: 1.5em;</span><br><span class="line">   <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>;</span><br><span class="line">   <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.popular-posts</span> <span class="selector-class">.popular-posts-item</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">3em</span>;</span><br><span class="line">    <span class="attribute">list-style-type</span>: <span class="string">"🏷️ "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.popular-posts-title</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.12em</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line">.popular-posts-title a:hover&#123;//鼠标放上取消下划线</span><br><span class="line">    <span class="selector-tag">font-size</span>: 1<span class="selector-class">.12em</span>;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//文章下方分页样式</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//分页圆角</span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//评论区样式图片</span><br><span class="line"><span class="selector-tag">textarea</span><span class="selector-id">#veditor</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/drew233/cdn/<span class="number">20200409110727</span>.webp);</span><br><span class="line">// background-image: url(/images/评论.webp);</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">background-size</span>: <span class="selector-tag">contain</span>;</span><br><span class="line">    <span class="selector-tag">background-repeat</span>: <span class="selector-tag">no-repeat</span>;</span><br><span class="line">    <span class="selector-tag">background-position</span>: <span class="selector-tag">right</span>;</span><br><span class="line">    <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(255,255,255,0);</span><br><span class="line">    <span class="selector-tag">resize</span>: <span class="selector-tag">vertical</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//简繁体字体颜色</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-id">#translateLink</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: beige;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Next </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo-git-backup插件备份博客源文件</title>
      <link href="/posts/47733/"/>
      <url>/posts/47733/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在搭建好hexo博客之后也要给自己的博客进行备份，文章丢失可是很麻烦的一件事情。可以借助一个插件来进行备份源文件</p></blockquote><h4 id="查看hexo版本"><a href="#查看hexo版本" class="headerlink" title="查看hexo版本"></a>查看hexo版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>如果你的版本是2.x.x使用这条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup@0.0.91 --save</span><br></pre></td></tr></table></figure><p>如果你的版本是3.x.x或者4.x.x则使用这条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure><h4 id="建立分支"><a href="#建立分支" class="headerlink" title="建立分支"></a>建立分支</h4><p>来到你的github仓库目录或者是coding的仓库目录，选择新建分支，我创建的分支名都为backup</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>打开博客配置文件_config.yml</p><p>在最下方添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">backup:</span><br><span class="line">    type: git</span><br><span class="line">    message: update xxx</span><br><span class="line">    theme: coney,landscape,xxx</span><br><span class="line">    repository:</span><br><span class="line">       github: git@github.com:xxx&#x2F;xxx.git,branchName</span><br><span class="line">       gitcafe: git@github.com:xxx&#x2F;xxx.git,branchName</span><br></pre></td></tr></table></figure><p><strong>theme</strong> 是主题名</p><p><strong>message</strong> 是自定义信息</p><p><strong>branchName</strong> 是分支名，用英文逗号和仓库名隔开备份</p><h4 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h4><p>在博客根目录使用以下命令进行备份</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo backup</span><br><span class="line">或者简写</span><br><span class="line">hexo b</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 备份 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+next主题优化设置</title>
      <link href="/posts/25396/"/>
      <url>/posts/25396/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote><p>搭建完博客之后，感觉原有的主题太单调了，于是这几天找了很多的教程，也踩了很多的坑，因为教程上的版本和使用的版本不同，很多地方都不相同，往往一个小功能试验好多种方式，才能达到想要的效果。在这里记录下成功过的案例，方便以后查看。或许以后有朝一日，还能帮助他人</p></blockquote><h4 id="本文目录"><a href="#本文目录" class="headerlink" title="本文目录"></a>本文目录</h4><ul><li>在右上角或者左上角实现fork me on github</li><li>实现点击出现桃心效果</li><li>修改文章内链接文本样式</li><li>修改文章底部的那个带#号的标签</li><li>在每篇文章末尾统一添加“本文结束”标记</li><li>新增看板娘(能说话、能换装)</li><li>开启代码块复制功能及更换样式</li><li>打字特效</li><li>个性化回到顶部</li><li>文章末尾版权声明</li><li>添加图片灯箱</li><li>相关文章推荐</li><li>站点及文章字数统计</li><li>站点运行时间统计</li><li>实现简体 / 繁体一键切换</li><li>开启本地博客搜索功能</li><li>设置侧栏阅读进度百分比</li><li>文章置顶</li><li>精品文章</li><li>博客加入canvas粒子时钟</li><li>为站点添加标题崩溃特效</li><li>添加valine评论系统</li><li>用LeanClound给hexo+next博客添加文章阅读数</li><li>博主头像圆形并旋转</li><li>添加近期文章板块</li><li>添加博客热门文章页</li><li>添加文章打赏功能</li></ul><p><b>一些基本的设置参考官方文档：<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next官方文档</a></b></p><h4 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h4><h5 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200515193027529.png" alt="效果图"></h5><h5 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a> 或者 <a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200515193240630.png" alt="代码"></p><p>然后粘贴刚才复制的代码到<strong>\themes\next\layout_layout.swig</strong>文件中，放在<strong><div class="headband"></div></strong>的下面，并把<strong>href</strong>改为你自己的<strong>GitHub</strong>地址<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200515193903771.png" alt="更改地址"></p><h4 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h4><h5 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a>效果图</h5><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/5308475-78e64c0a80bb559e.webp" alt="效果图"></p><h5 id="具体实现方法-1"><a href="#具体实现方法-1" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在<strong>\themes\next\source\js/src</strong>目录下新建<span style="color:red"><strong>love.js</strong></span>输入以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>然后打开<strong>\themesnext\layout\layout.swig</strong>在末尾增加以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h4><h5 id="效果图-2"><a href="#效果图-2" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/5308475-8cc4fc18c399af7e.webp" alt="效果"></h5><h5 id="具体实现方法-2"><a href="#具体实现方法-2" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>打开<strong>\themes\next\source\css_common\components\post\post.styl</strong>在末尾添加以下<strong>CSS</strong>样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-id">#fc6423</span>;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h4><h5 id="效果图-3"><a href="#效果图-3" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200515195209340.png" alt="效果图"></h5><h5 id="具体实现方法-3"><a href="#具体实现方法-3" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>打开<strong>\themes\next\layout_macro\post.swig</strong>搜索</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tag_indicate = '#'</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tag_indicate = '<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>'</span><br></pre></td></tr></table></figure><h4 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h4><h5 id="效果图-4"><a href="#效果图-4" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200521215626753.png" alt="效果"></h5><h5 id="具体实现方法-4"><a href="#具体实现方法-4" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在<strong>\themes\next\layout_macro</strong>中新建<strong>passage-end-tag.swig</strong></p><p>并添加以下内容</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">        &lt;div style="text-align:center;color: rgba(234,16,61,.569);font-size: 18px;margin-top: 20px;" class="tag-end"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<strong>\themes\next\layout_macro\post.swig</strong> 在<span style="color:red"><strong>post-footer</strong></span>之前加入以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">      &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200515201112827.png" alt="代码位置"></p><p>然后打开主题配置文件(<strong>主题目录下的_config.yml</strong>)，在末尾添加以下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="新增看板娘-能说话、能换装"><a href="#新增看板娘-能说话、能换装" class="headerlink" title="新增看板娘(能说话、能换装)"></a>新增看板娘(能说话、能换装)</h4><h5 id="效果图-5"><a href="#效果图-5" class="headerlink" title="效果图"></a>效果图</h5><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://blog.pangao.vip/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98-1.gif" alt="效果"></p><h5 id="具体实现方法-5"><a href="#具体实现方法-5" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>1、下载 <a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener">张书樵大神的项目</a>，解压到本地博客目录的 <code>themes/next/source</code> 下，修改文件夹名为 <code>live2d-widget</code>，修改项目中的 <code>autoload.js</code> 文件，如下：<br>将</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/"</span>;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">"/live2d-widget/"</span>;</span><br></pre></td></tr></table></figure><p>2、打开在<code>/themes/next/layout/_layout.swig</code>，在<strong>head标签</strong>中加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.min.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>在末尾加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;&#x2F;live2d-widget&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>3、在 <code>主题配置文件</code> 中,新增如下内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>4、想修改看板娘大小、位置、格式、文本内容等，可查看并修改 <code>waifu-tips.js</code> 、 <code>waifu-tips.json</code> 和 <code>waifu.css</code>。</p><h4 id="开启代码块复制功能及更换样式"><a href="#开启代码块复制功能及更换样式" class="headerlink" title="开启代码块复制功能及更换样式"></a>开启代码块复制功能及更换样式</h4><p>在主题配置文件中修改以下代码：</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200516222500714.png" alt="样式"></p><p>自己根据需要修改即可</p><h4 id="文章末尾版权声明"><a href="#文章末尾版权声明" class="headerlink" title="文章末尾版权声明"></a>文章末尾版权声明</h4><h5 id="效果图-6"><a href="#效果图-6" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517170054604.png" alt="效果图"></h5><h5 id="具体实现方法："><a href="#具体实现方法：" class="headerlink" title="具体实现方法："></a>具体实现方法：</h5><p>在主题配置文件中开启文章底部的版权声明，版权声明默认使用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">CC BY-NC-SA 4.0</a> 许可协议，用户可以根据自身需要修改 <code>licence</code> 字段变更协议。</p><p>编辑 主题配置文件，修改如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true    # 默认显示版权信息</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure><h4 id="添加图片灯箱"><a href="#添加图片灯箱" class="headerlink" title="添加图片灯箱"></a>添加图片灯箱</h4><p>添加灯箱功能，实现点击图片后放大聚焦图片，并支持幻灯片播放、全屏播放、缩略图、快速分享到社交媒体等，该功能由 <a href="https://github.com/fancyapps/fancybox" target="_blank" rel="noopener">fancyBox</a> 提供。</p><p>在根目录下执行以下命令安装相关依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-fancybox3 themes&#x2F;next&#x2F;source&#x2F;lib&#x2F;fancybox</span><br></pre></td></tr></table></figure><p>在主题配置文件中设置 <code>fancybox: true</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">themes\next_config.yml</span><br><span class="line">fancybox: true</span><br></pre></td></tr></table></figure><h4 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h4><h5 id="效果图-7"><a href="#效果图-7" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517170527296.png" alt="效果"></h5><h5 id="具体实现方法-6"><a href="#具体实现方法-6" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在站点根目录中执行以下命令安装依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure><p>在主题配置文件中开启相关文章推荐功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">related_posts:</span><br><span class="line">  enable: true</span><br><span class="line">  title: 相关文章推荐</span><br><span class="line">  display_in_home: false</span><br><span class="line">  params:</span><br><span class="line">    maxCount: 5</span><br></pre></td></tr></table></figure><h4 id="站点及文章字数统计"><a href="#站点及文章字数统计" class="headerlink" title="站点及文章字数统计"></a>站点及文章字数统计</h4><h5 id="效果图-8"><a href="#效果图-8" class="headerlink" title="效果图)"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517170949578.png" alt="站点">)<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517171011384.png" alt="文章"></h5><h5 id="具体实现方法-7"><a href="#具体实现方法-7" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在根目录下执行如下命令安装相关依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p>启用该功能需要同时修改站点配置文件和主题配置文件。</p><p>将如下配置项添加到<strong>站点配置文件</strong>中，这些配置项主要用于控制每项统计信息是否显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#字数与时间 </span><br><span class="line">  symbols_count_time:</span><br><span class="line">  symbols: true                # 文章字数统计</span><br><span class="line">  time: true                   # 文章阅读时长</span><br><span class="line">  total_symbols: true          # 站点总字数统计</span><br><span class="line">  total_time: true             # 站点总阅读时长</span><br><span class="line">  exclude_codeblock: false     # 排除代码字数统计</span><br></pre></td></tr></table></figure><p>主题配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true  #显示属性名称,设为false后只显示图标和统计数字,不显示属性的文字</span><br><span class="line">  item_text_post: true  #显示属性名称,设为false后只显示图标和统计数字,不显示属性的文字</span><br><span class="line">  item_text_total: true #底部footer是否显示字数统计属性文字(如站点总字数,站点阅读时长 ≈ 1 分钟)</span><br><span class="line">  awl: 4#平均每个字符的长度</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure><h4 id="站点运行时间统计"><a href="#站点运行时间统计" class="headerlink" title="站点运行时间统计"></a>站点运行时间统计</h4><h5 id="效果图-9"><a href="#效果图-9" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517171353373.png" alt="运行时间"></h5><h5 id="具体实现方法-8"><a href="#具体实现方法-8" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>打开<strong>\themes\next\layout_partials\footer.swig</strong>,在末尾添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;&lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now &#x3D; new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt &#x3D; new Date(&quot;05&#x2F;10&#x2F;2020 22:00:00&quot;); &#x2F;&#x2F;此处修改你的建站时间或者网站上线时间 </span><br><span class="line">        now.setTime(now.getTime() + 250);</span><br><span class="line">        days &#x3D; (now - grt) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24;</span><br><span class="line">        dnum &#x3D; Math.floor(days);</span><br><span class="line">        hours &#x3D; (now - grt) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum);</span><br><span class="line">        hnum &#x3D; Math.floor(hours);</span><br><span class="line">        if (String(hnum).length &#x3D;&#x3D; 1) &#123;</span><br><span class="line">            hnum &#x3D; &quot;0&quot; + hnum;</span><br><span class="line">        &#125;</span><br><span class="line">        minutes &#x3D; (now - grt) &#x2F; 1000 &#x2F; 60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum &#x3D; Math.floor(minutes);</span><br><span class="line">        if (String(mnum).length &#x3D;&#x3D; 1) &#123;</span><br><span class="line">            mnum &#x3D; &quot;0&quot; + mnum;</span><br><span class="line">        &#125;</span><br><span class="line">        seconds &#x3D; (now - grt) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum &#x3D; Math.round(seconds);</span><br><span class="line">        if (String(snum).length &#x3D;&#x3D; 1) &#123;</span><br><span class="line">            snum &#x3D; &quot;0&quot; + snum;</span><br><span class="line">        &#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;  本站已运行 &quot; + dnum + &quot; 天 &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    setInterval(&quot;createtime()&quot;, 250);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="添加站点访问量统计"><a href="#添加站点访问量统计" class="headerlink" title="添加站点访问量统计"></a>添加站点访问量统计</h4><h5 id="效果图-10"><a href="#效果图-10" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517172730649.png" alt="效果图"></h5><h5 id="具体实现方法-9"><a href="#具体实现方法-9" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>打开主题配置文件，修改以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># Show Views &#x2F; Visitors of the website &#x2F; page with busuanzi.</span><br><span class="line"># Get more information on http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true              # 设true 开启</span><br><span class="line">  # total_visitors: true       # 总阅读人数（uv数）</span><br><span class="line">  # total_visitors_icon: user  # 阅读总人数的图标</span><br><span class="line">  # total_views: true          # 总阅读次数（pv数）</span><br><span class="line">  # total_views_icon: eye      # 阅读总次数的图标</span><br><span class="line">  # post_views: false           # 开启内容阅读次数</span><br><span class="line">  # post_views_icon: eye       # 内容页阅读数的图标</span><br><span class="line">  # # 效果：本站访客数12345人次</span><br><span class="line">  site_uv: true</span><br><span class="line">  # site_uv_header: 本站访客数</span><br><span class="line">  # site_uv_footer: 人次</span><br><span class="line">  # # 效果：本站总访问量12345次</span><br><span class="line">  site_pv: true</span><br><span class="line">  # site_pv_header: 本站总访问量</span><br><span class="line">  # site_pv_footer: 次</span><br><span class="line">  # page_pv: true</span><br></pre></td></tr></table></figure><p>打开<strong>\themes\next\layout_partials\footer.swig</strong>,在末尾添加以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 不蒜子统计 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-user"</span>&gt;</span>你是第<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>个小伙伴<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-divider"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-eye"</span>&gt;</span>本站已被浏览<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次啦<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="实现简体-繁体一键切换"><a href="#实现简体-繁体一键切换" class="headerlink" title="实现简体 / 繁体一键切换"></a>实现简体 / 繁体一键切换</h4><h5 id="效果图-11"><a href="#效果图-11" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517173246459.png" alt="简/繁"></h5><h5 id="具体实现方法-10"><a href="#具体实现方法-10" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>1、首先，<a href="https://www.imatx.com/down/tw_cn.zip" target="_blank" rel="noopener">点击这里</a>右键另存下载简繁字体切换所需的tw_cn.js文件，我们把这个文件放到 <code>~/themes/next/source/js</code> 文件夹下。</p><p><strong>修改模板</strong>，在我们想要显示简繁转换按钮的地方添加如下代码。例如，我在 NexT 主题的布局文件 <code>~/themes/next/layout/_partials/footer.swig</code> 里添加了如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;translate-style&quot;&gt;</span><br><span class="line">繁&#x2F;简：&lt;a id&#x3D;&quot;translateLink&quot; href&#x3D;&quot;javascript:translatePage();&quot;&gt;繁体</span><br><span class="line">&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;tw_cn.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">var defaultEncoding &#x3D; 2; &#x2F;&#x2F;网站编写字体是否繁体，1-繁体，2-简体</span><br><span class="line">var translateDelay &#x3D; 0; &#x2F;&#x2F;延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span><br><span class="line">var cookieDomain &#x3D; &quot;https:&#x2F;&#x2F;tding.top&#x2F;&quot;; &#x2F;&#x2F;Cookie地址, 一定要设定, 通常为你的网址</span><br><span class="line">var msgToTraditionalChinese &#x3D; &quot;繁体&quot;; &#x2F;&#x2F;此处可以更改为你想要显示的文字</span><br><span class="line">var msgToSimplifiedChinese &#x3D; &quot;简体&quot;; &#x2F;&#x2F;同上，但两处均不建议更改</span><br><span class="line">var translateButtonId &#x3D; &quot;translateLink&quot;; &#x2F;&#x2F;默认互换id</span><br><span class="line">translateInitilization();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>读者可以在<strong>博客底部点击简体 / 繁体</strong>来看具体的切换字体效果。</p><h4 id="开启本地博客搜索功能"><a href="#开启本地博客搜索功能" class="headerlink" title="开启本地博客搜索功能"></a>开启本地博客搜索功能</h4><h5 id="效果图-12"><a href="#效果图-12" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517174420239.png" alt="搜索"></h5><h5 id="具体实现方法-11"><a href="#具体实现方法-11" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>提升读者用户体验，博客内肯定是需要一个全局搜索按钮的。当然hexo已经集成了几款开源的搜索插件，一般都使用的是 local_search。</p><p>搜索 local_search，设置代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # unescape html strings to the readable one</span><br><span class="line">  unescape: false&#96;</span><br></pre></td></tr></table></figure><p>注意该搜索功能需要依赖 <code>hexo-generator-searchdb</code> 插件，依然还是使用命令 <code>npm install hexo-generator-searchdb --save</code> 来进行安装。然后 在 hexo 站点根目录配置文件 _config.xml 的末尾，加入以下代码即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><h4 id="设置侧栏阅读进度百分比"><a href="#设置侧栏阅读进度百分比" class="headerlink" title="设置侧栏阅读进度百分比"></a>设置侧栏阅读进度百分比</h4><h5 id="具体实现方法-12"><a href="#具体实现方法-12" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>编辑站点配置文件，修改 back2top 部分如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  sidebar: true</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure><h4 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h4><h5 id="具体实现方法-13"><a href="#具体实现方法-13" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在站点目录的 node_modules/hexo-generator-index/lib/generator.js 中，把改文件的代码全改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var pagination &#x3D; require(&#39;hexo-pagination&#39;);</span><br><span class="line">module.exports &#x3D; function(locals)&#123;</span><br><span class="line">  var config &#x3D; this.config;</span><br><span class="line">  var posts &#x3D; locals.posts;</span><br><span class="line">    posts.data &#x3D; posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; &#x2F;&#x2F; 两篇文章top都有定义</span><br><span class="line">            if(a.top &#x3D;&#x3D; b.top) return b.date - a.date; &#x2F;&#x2F; 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; &#x2F;&#x2F; 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; &#x2F;&#x2F; 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; &#x2F;&#x2F; 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir &#x3D; config.pagination_dir || &#39;page&#39;;</span><br><span class="line">  return pagination(&#39;&#39;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&#39;index&#39;, &#39;archive&#39;],</span><br><span class="line">    format: paginationDir + &#39;&#x2F;%d&#x2F;&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后可以在博文模板post中加个top键，值为整数，并且值为大越靠前。</p><p>在主题目录中的themes\next\layout_macro的post文件，打开查询第一个：post-meta。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-meta"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后这个div的下一行添加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">&lt;i class&#x3D;&quot;fa fa-thumb-tack&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">&lt;font color&#x3D;7D26CD&gt;置顶&lt;&#x2F;font&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;post-meta-divider&quot;&gt;|&lt;&#x2F;span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h4 id="精品文章"><a href="#精品文章" class="headerlink" title="精品文章"></a>精品文章</h4><h5 id="具体实现方法-14"><a href="#具体实现方法-14" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在 <code>/themes/next/layout/_macro/</code> 路径，找到 <code>post.swig</code> ，在前 <code>文置</code> 顶功能后边，加上如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.essential%&#125;</span><br><span class="line">     &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">         &lt;i class&#x3D;&quot;fa fa-newspaper-o jingping&quot;&gt;精品&lt;&#x2F;i&gt;</span><br><span class="line">     &lt;&#x2F;span&gt;</span><br><span class="line">     &lt;span class&#x3D;&quot;post-meta-divider&quot;&gt;|&lt;&#x2F;span&gt;</span><br><span class="line"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在 <code>themes/next/source/css/_custom/custom.styl</code> 中，增加如下样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jingping</span>&#123;</span><br><span class="line">  <span class="attribute">background </span>: <span class="number">#00a8c3</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">2px</span> <span class="number">4px</span> <span class="number">2px</span> <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要设置精品的文章md文件中，加入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">essential: true</span><br></pre></td></tr></table></figure><h4 id="博客加入canvas粒子时钟"><a href="#博客加入canvas粒子时钟" class="headerlink" title="博客加入canvas粒子时钟"></a>博客加入canvas粒子时钟</h4><h5 id="效果图-13"><a href="#效果图-13" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517175435773.png" alt="时钟"></h5><h5 id="具体实现方法-15"><a href="#具体实现方法-15" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>它是一个可以和客户端同步的时钟，其特点是当时间走动时，数字将会散落成一个个粒子动画。</p><p>在 <code>/themes/next/layout/_custom/</code> 目录下，新建 <code>clock.swig</code> 文件，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"width:60%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--粒子时钟js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/canvas-dance-time.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>/themes/next/layout/_macro/sidebar.swig</code> 中引入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &#39;..&#x2F;_custom&#x2F;clock.swig&#39; %&#125;</span><br></pre></td></tr></table></figure><p>可根据自己的偏好来设置具体位置，我是加在了侧栏的末尾。</p><p>在 <code>/themes/next/source/js/src</code> 目录下，新建 <code>canvas-dance-time.js</code> 文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line">(function()&#123;</span><br><span class="line">    var WINDOW_WIDTH &#x3D; 820;</span><br><span class="line">    var WINDOW_HEIGHT &#x3D; 250;</span><br><span class="line">    var RADIUS &#x3D; 7; &#x2F;&#x2F;球半径</span><br><span class="line">    var NUMBER_GAP &#x3D; 10; &#x2F;&#x2F;数字之间的间隙</span><br><span class="line">    var u&#x3D;0.65; &#x2F;&#x2F;碰撞能量损耗系数</span><br><span class="line">    var context; &#x2F;&#x2F;Canvas绘制上下文</span><br><span class="line">    var balls &#x3D; []; &#x2F;&#x2F;存储彩色的小球</span><br><span class="line">    const colors &#x3D; [&quot;#33B5E5&quot;,&quot;#0099CC&quot;,&quot;#AA66CC&quot;,&quot;#9933CC&quot;,&quot;#99CC00&quot;,&quot;#669900&quot;,&quot;#FFBB33&quot;,&quot;#FF8800&quot;,&quot;#FF4444&quot;,&quot;#CC0000&quot;]; &#x2F;&#x2F;彩色小球的颜色</span><br><span class="line">    var currentNums &#x3D; []; &#x2F;&#x2F;屏幕显示的8个字符</span><br><span class="line">    var digit &#x3D;</span><br><span class="line">        [</span><br><span class="line">            [</span><br><span class="line">                [0,0,1,1,1,0,0],</span><br><span class="line">                [0,1,1,0,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,0,1,1,0],</span><br><span class="line">                [0,0,1,1,1,0,0]</span><br><span class="line">            ],&#x2F;&#x2F;0</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,1,1,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [1,1,1,1,1,1,1]</span><br><span class="line">            ],&#x2F;&#x2F;1</span><br><span class="line">            [</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,1,1,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,1,1,1,1,1]</span><br><span class="line">            ],&#x2F;&#x2F;2</span><br><span class="line">            [</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,1,1,1,0,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],&#x2F;&#x2F;3</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,1,0],</span><br><span class="line">                [0,0,1,1,1,1,0],</span><br><span class="line">                [0,1,1,0,1,1,0],</span><br><span class="line">                [1,1,0,0,1,1,0],</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,1,1]</span><br><span class="line">            ],&#x2F;&#x2F;4</span><br><span class="line">            [</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,1,1,1,1,0],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],&#x2F;&#x2F;5</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,1,1,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,0,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],&#x2F;&#x2F;6</span><br><span class="line">            [</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0]</span><br><span class="line">            ],&#x2F;&#x2F;7</span><br><span class="line">            [</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],&#x2F;&#x2F;8</span><br><span class="line">            [</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,1,1,0,0,0,0]</span><br><span class="line">            ],&#x2F;&#x2F;9</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,0,0,0]</span><br><span class="line">            ]&#x2F;&#x2F;:</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">    function drawDatetime(cxt)&#123;</span><br><span class="line">        var nums &#x3D; [];</span><br><span class="line"></span><br><span class="line">        context.fillStyle&#x3D;&quot;#005eac&quot;</span><br><span class="line">        var date &#x3D; new Date();</span><br><span class="line">        var offsetX &#x3D; 70, offsetY &#x3D; 30;</span><br><span class="line">        var hours &#x3D; date.getHours();</span><br><span class="line">        var num1 &#x3D; Math.floor(hours&#x2F;10);</span><br><span class="line">        var num2 &#x3D; hours%10;</span><br><span class="line">        nums.push(&#123;num: num1&#125;);</span><br><span class="line">        nums.push(&#123;num: num2&#125;);</span><br><span class="line">        nums.push(&#123;num: 10&#125;); &#x2F;&#x2F;冒号</span><br><span class="line">        var minutes &#x3D; date.getMinutes();</span><br><span class="line">        var num1 &#x3D; Math.floor(minutes&#x2F;10);</span><br><span class="line">        var num2 &#x3D; minutes%10;</span><br><span class="line">        nums.push(&#123;num: num1&#125;);</span><br><span class="line">        nums.push(&#123;num: num2&#125;);</span><br><span class="line">        nums.push(&#123;num: 10&#125;); &#x2F;&#x2F;冒号</span><br><span class="line">        var seconds &#x3D; date.getSeconds();</span><br><span class="line">        var num1 &#x3D; Math.floor(seconds&#x2F;10);</span><br><span class="line">        var num2 &#x3D; seconds%10;</span><br><span class="line">        nums.push(&#123;num: num1&#125;);</span><br><span class="line">        nums.push(&#123;num: num2&#125;);</span><br><span class="line"></span><br><span class="line">        for(var x &#x3D; 0;x&lt;nums.length;x++)&#123;</span><br><span class="line">            nums[x].offsetX &#x3D; offsetX;</span><br><span class="line">            offsetX &#x3D; drawSingleNumber(offsetX,offsetY, nums[x].num,cxt);</span><br><span class="line">            &#x2F;&#x2F;两个数字连一块，应该间隔一些距离</span><br><span class="line">            if(x&lt;nums.length-1)&#123;</span><br><span class="line">                if((nums[x].num!&#x3D;10) &amp;&amp;(nums[x+1].num!&#x3D;10))&#123;</span><br><span class="line">                    offsetX+&#x3D;NUMBER_GAP;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;说明这是初始化</span><br><span class="line">        if(currentNums.length &#x3D;&#x3D;0)&#123;</span><br><span class="line">            currentNums &#x3D; nums;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            &#x2F;&#x2F;进行比较</span><br><span class="line">            for(var index &#x3D; 0;index&lt;currentNums.length;index++)&#123;</span><br><span class="line">                if(currentNums[index].num!&#x3D;nums[index].num)&#123;</span><br><span class="line">                    &#x2F;&#x2F;不一样时，添加彩色小球</span><br><span class="line">                    addBalls(nums[index]);</span><br><span class="line">                    currentNums[index].num&#x3D;nums[index].num;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        renderBalls(cxt);</span><br><span class="line">        updateBalls();</span><br><span class="line"></span><br><span class="line">        return date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function addBalls (item) &#123;</span><br><span class="line">        var num &#x3D; item.num;</span><br><span class="line">        var numMatrix &#x3D; digit[num];</span><br><span class="line">        for(var y &#x3D; 0;y&lt;numMatrix.length;y++)&#123;</span><br><span class="line">            for(var x &#x3D; 0;x&lt;numMatrix[y].length;x++)&#123;</span><br><span class="line">                if(numMatrix[y][x]&#x3D;&#x3D;1)&#123;</span><br><span class="line">                    var ball&#x3D;&#123;</span><br><span class="line">                        offsetX:item.offsetX+RADIUS+RADIUS*2*x,</span><br><span class="line">                        offsetY:30+RADIUS+RADIUS*2*y,</span><br><span class="line">                        color:colors[Math.floor(Math.random()*colors.length)],</span><br><span class="line">                        g:1.5+Math.random(),</span><br><span class="line">                        vx:Math.pow(-1, Math.ceil(Math.random()*10))*4+Math.random(),</span><br><span class="line">                        vy:-5</span><br><span class="line">                    &#125;</span><br><span class="line">                    balls.push(ball);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function renderBalls(cxt)&#123;</span><br><span class="line">        for(var index &#x3D; 0;index&lt;balls.length;index++)&#123;</span><br><span class="line">            cxt.beginPath();</span><br><span class="line">            cxt.fillStyle&#x3D;balls[index].color;</span><br><span class="line">            cxt.arc(balls[index].offsetX, balls[index].offsetY, RADIUS, 0, 2*Math.PI);</span><br><span class="line">            cxt.fill();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function updateBalls () &#123;</span><br><span class="line">        var i &#x3D;0;</span><br><span class="line">        for(var index &#x3D; 0;index&lt;balls.length;index++)&#123;</span><br><span class="line">            var ball &#x3D; balls[index];</span><br><span class="line">            ball.offsetX +&#x3D; ball.vx;</span><br><span class="line">            ball.offsetY +&#x3D; ball.vy;</span><br><span class="line">            ball.vy+&#x3D;ball.g;</span><br><span class="line">            if(ball.offsetY &gt; (WINDOW_HEIGHT-RADIUS))&#123;</span><br><span class="line">                ball.offsetY&#x3D; WINDOW_HEIGHT-RADIUS;</span><br><span class="line">                ball.vy&#x3D;-ball.vy*u;</span><br><span class="line">            &#125;</span><br><span class="line">            if(ball.offsetX&gt;RADIUS&amp;&amp;ball.offsetX&lt;(WINDOW_WIDTH-RADIUS))&#123;</span><br><span class="line"></span><br><span class="line">                balls[i]&#x3D;balls[index];</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;去除出边界的球</span><br><span class="line">        for(;i&lt;balls.length;i++)&#123;</span><br><span class="line">            balls.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function drawSingleNumber(offsetX, offsetY, num, cxt)&#123;</span><br><span class="line">        var numMatrix &#x3D; digit[num];</span><br><span class="line">        for(var y &#x3D; 0;y&lt;numMatrix.length;y++)&#123;</span><br><span class="line">            for(var x &#x3D; 0;x&lt;numMatrix[y].length;x++)&#123;</span><br><span class="line">                if(numMatrix[y][x]&#x3D;&#x3D;1)&#123;</span><br><span class="line">                    cxt.beginPath();</span><br><span class="line">                    cxt.arc(offsetX+RADIUS+RADIUS*2*x,offsetY+RADIUS+RADIUS*2*y,RADIUS,0,2*Math.PI);</span><br><span class="line">                    cxt.fill();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cxt.beginPath();</span><br><span class="line">        offsetX +&#x3D; numMatrix[0].length*RADIUS*2;</span><br><span class="line">        return offsetX;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var canvas &#x3D; document.getElementById(&quot;canvas&quot;);</span><br><span class="line">    canvas.width&#x3D;WINDOW_WIDTH;</span><br><span class="line">    canvas.height&#x3D;WINDOW_HEIGHT;</span><br><span class="line">    context &#x3D; canvas.getContext(&quot;2d&quot;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;记录当前绘制的时刻</span><br><span class="line">    var currentDate &#x3D; new Date();</span><br><span class="line"></span><br><span class="line">    setInterval(function()&#123;</span><br><span class="line">        &#x2F;&#x2F;清空整个Canvas，重新绘制内容</span><br><span class="line">        context.clearRect(0, 0, context.canvas.width, context.canvas.height);</span><br><span class="line">        drawDatetime(context);</span><br><span class="line">    &#125;, 50)</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="为站点添加标题崩溃特效"><a href="#为站点添加标题崩溃特效" class="headerlink" title="为站点添加标题崩溃特效"></a>为站点添加标题崩溃特效</h4><blockquote><p>该特效为：当用户离开站点相关的页面时，网页的标题会变成已崩溃，网站图标也会改变；当用户重新回到站点页面时才会恢复正常。</p></blockquote><h5 id="具体实现方法-16"><a href="#具体实现方法-16" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在 <code>/themes/next/source/js/src/</code> 目录下新建 <code>crash_cheat.js</code> ，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$(window).load(function () &#123;</span><br><span class="line">&#x2F;&#x2F;整合页面欺骗特效 window.onload有冲突</span><br><span class="line">    var OriginTitile &#x3D; document.title;</span><br><span class="line">    var titleTime;</span><br><span class="line">    document.addEventListener(&#39;visibilitychange&#39;, function () &#123;</span><br><span class="line">        if (document.hidden) &#123;</span><br><span class="line">            $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;..&#x2F;..&#x2F;images&#x2F;failure.png&quot;);</span><br><span class="line">            $(&#39;[rel&#x3D;&quot;shortcut icon&quot;]&#39;).attr(&#39;href&#39;, &quot;..&#x2F;..&#x2F;images&#x2F;failure.png&quot;);</span><br><span class="line">            document.title &#x3D; &#39;(つェ⊂) 我藏好了哦~ &#39;;</span><br><span class="line">            clearTimeout(titleTime);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;..&#x2F;..&#x2F;images&#x2F;favicon.png&quot;);</span><br><span class="line">            $(&#39;[rel&#x3D;&quot;shortcut icon&quot;]&#39;).attr(&#39;href&#39;, &quot;..&#x2F;..&#x2F;images&#x2F;favicon.png&quot;);</span><br><span class="line">            document.title &#x3D; &#39;o(^▽^)o 被你发现啦~ &#39;;</span><br><span class="line">            titleTime &#x3D; setTimeout(function () &#123;</span><br><span class="line">                document.title &#x3D; OriginTitile;</span><br><span class="line">            &#125;, 2000);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在 <code>/themes/next/layout/_layout.swig</code> 文件末尾，添加引用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;crash_cheat.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>上面的图片放在 <code>/themes/next/source/images/</code> 目录下，自行选择喜欢的图片即可。</p><h4 id="添加valine评论系统"><a href="#添加valine评论系统" class="headerlink" title="添加valine评论系统"></a>添加valine评论系统</h4><h5 id="效果图-14"><a href="#效果图-14" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517175844957.png" alt="评论"></h5><h5 id="具体实现方法-17"><a href="#具体实现方法-17" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>没有评论系统的博客是没有灵魂的，不仅如此，当前免费开源的评论系统中，valine 因为简洁并且支持匿名留言得到很多博主的喜爱，而像其它的来必力（韩国的）、Gitalk（Github的）等都有这样那样的缺点，不太建议使用。</p><p>需要注意的是valine后台评论保存是依赖于 leancloud的，leancloud 是一个面向个人用户免费的存储系统（当然不止是提供存储功能，还有其它服务），我们需要在 leancloud 官网注册，具体步骤可以看<a href="https://valine.js.org/" target="_blank" rel="noopener">valine的官方文档</a>介绍。</p><p>搜索 valine，找到如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">valine:#评论功能</span><br><span class="line">  enable: true#开关</span><br><span class="line">  appid: #自己的appid</span><br><span class="line">  appkey: #自己的appkey</span><br><span class="line">  notify: false # Mail notifier</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: 欢迎评论 # Comment box placeholder</span><br><span class="line">  avatar: wavatar # Gravatar style</span><br><span class="line">  guest_info: nick,mail,link # Custom comment header</span><br><span class="line">  pageSize: 10 # Pagination size</span><br><span class="line">  language: # Language, available values: en, zh-cn</span><br><span class="line">  visitor: true # Article reading statistic 阅读次数</span><br><span class="line">  comment_count: true # If false, comment count will only be displayed in post page, not in home page</span><br><span class="line">  recordIP: false # Whether to record the commenter IP</span><br><span class="line">  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span><br><span class="line">  #post_meta_order: 0</span><br></pre></td></tr></table></figure><p>注意由于 valine 依赖于 leancloud 存储服务，因此要先去 <a href="https://leancloud.cn/" target="_blank" rel="noopener">https://leancloud.cn</a> 网站注册，获取到 appid 和 appkey 后放到这里就 ok 了。其中 avatar 是设置默认头像，可以去 <a href="https://valine.js.org/avatar" target="_blank" rel="noopener">https://valine.js.org/avatar</a> 选择默认头像，然后在这里设置名字即可。具体使用可以参考<a href="https://valine.js.org/" target="_blank" rel="noopener">valine的官方文档</a>。</p><h4 id="用LeanClound给hexo-next博客添加文章阅读数"><a href="#用LeanClound给hexo-next博客添加文章阅读数" class="headerlink" title="用LeanClound给hexo+next博客添加文章阅读数"></a>用LeanClound给hexo+next博客添加文章阅读数</h4><h5 id="具体实现方法-18"><a href="#具体实现方法-18" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>由于已经使用了valine评论系统，只需要在进行小小的改动，就能实现此功能</p><p>登录到LeanClound，找到上次创建的应用，新建一个Class</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200517180546503.png" alt="图片"></p><p>此处的新建Class名字必须为<code>Counter</code>:</p><h4 id="博主头像圆形并旋转"><a href="#博主头像圆形并旋转" class="headerlink" title="博主头像圆形并旋转"></a>博主头像圆形并旋转</h4><h5 id="具体实现方法-19"><a href="#具体实现方法-19" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在之前的版本里面得自定义才能达到，现在已经可以直接配置了。</p><p>打开主题配置 _config.yml 文件，搜索关键词 <code>avatar:</code> 修改相应配置即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: &#x2F;images&#x2F;avatar.png</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true#开启后，头像为圆形</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: true#开启后，头像获得光标时旋转</span><br></pre></td></tr></table></figure><h4 id="添加近期文章板块"><a href="#添加近期文章板块" class="headerlink" title="添加近期文章板块"></a>添加近期文章板块</h4><h5 id="效果图-15"><a href="#效果图-15" class="headerlink" title="效果图"></a>效果图<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200522124822493.png" alt="近期文章"></h5><h5 id="具体实现方法-20"><a href="#具体实现方法-20" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><p>在 <code>next/layout/_macro/sidebar.swig</code> 中，加入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.recent_posts %&#125;</span><br><span class="line">    &lt;div class&#x3D;&quot;links-of-blogroll motion-element &#123;&#123; &quot;links-of-blogroll-&quot; + theme.recent_posts_layout  &#125;&#125;&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;links-of-blogroll-title&quot;&gt;</span><br><span class="line">        &lt;!-- modify icon to fire by szw --&gt;</span><br><span class="line">        &lt;i class&#x3D;&quot;fa fa-history fa-&#123;&#123; theme.recent_posts_icon | lower &#125;&#125;&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">        &#123;&#123; theme.recent_posts_title &#125;&#125;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;ul class&#x3D;&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">        &#123;% set posts &#x3D; site.posts.sort(&#39;-date&#39;).toArray() %&#125;</span><br><span class="line">        &#123;% for post in posts.slice(&#39;0&#39;, &#39;5&#39;) %&#125;</span><br><span class="line">          &lt;li&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; title&#x3D;&quot;&#123;&#123; post.title &#125;&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;&#123;&#123; post.title &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">          &lt;&#x2F;li&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">      &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在主题配置文件中加入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">recent_posts_title: 近期文章</span><br><span class="line">recent_posts_layout: block</span><br><span class="line">recent_posts: true</span><br></pre></td></tr></table></figure><h4 id="添加博客热门文章页"><a href="#添加博客热门文章页" class="headerlink" title="添加博客热门文章页"></a>添加博客热门文章页</h4><h5 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="/posts/25396/image-20200522212021634.png" alt="热门文章"></h5><h5 id="具体实现方法：-1"><a href="#具体实现方法：-1" class="headerlink" title="具体实现方法："></a>具体实现方法：</h5><p>博客已有的分类，如 categories 和 tags，都是基于博主的，那么有没有一种分类是基于读者的呢？有，一种是搜索，另一种就是这里的文章阅读量排行榜。前提是在主题配置文件中配置了 leancloud_visitors，配置方法在基础配置中已经介绍过了。首先新建页面：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"top"</span></span><br></pre></td></tr></table></figure><p>然后在主题配置文件中加上菜单 top 和它的 icon：</p><p>文件位置：hexo/themes/next/_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">top: &#x2F;top&#x2F; || fa fa-signal</span><br></pre></td></tr></table></figure><p>接着在语言翻译文件中加上菜单 top：</p><p>文件位置：hexo/themes/next/languages/zh-CN.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益 404</span><br><span class="line">  links: 友链</span><br><span class="line">  playlist: 歌单</span><br><span class="line">  top: 热榜</span><br></pre></td></tr></table></figure><p>最后，编辑第一步新建页面生成的文件：</p><p>文件位置：博客根目录/source/top/index.md</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章热度排行</span><br><span class="line">date: <span class="number">2020</span><span class="number">-05</span><span class="number">-22</span> <span class="number">20</span>:<span class="number">46</span>:<span class="number">56</span></span><br><span class="line">comments: <span class="literal">true</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"top"</span> style=<span class="string">"margin-top:30px;"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script src="/</span><span class="regexp">/cdn1.lncld.net/</span><span class="keyword">static</span>/js/<span class="number">3.0</span><span class="number">.4</span>/av-min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;!-- &lt;script src="</span>https:<span class="comment">//cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">&lt;script&gt;AV.initialize(<span class="string">"app_id"</span>, <span class="string">"app_key"</span>);&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    var time = 0</span></span><br><span class="line"><span class="string">    var title = "</span><span class="string">"</span></span><br><span class="line"><span class="string">    var url = "</span><span class="string">"</span></span><br><span class="line"><span class="string">    var query = new AV.Query('Counter');</span></span><br><span class="line"><span class="string">    query.notEqualTo('id', 0);</span></span><br><span class="line"><span class="string">    query.descending('time');</span></span><br><span class="line"><span class="string">    query.limit(1000);</span></span><br><span class="line"><span class="string">    query.find().then(function (todo) &#123;</span></span><br><span class="line"><span class="string">        for (var i = 0; i &lt; 1000; i++) &#123;</span></span><br><span class="line"><span class="string">            var result = todo[i].attributes;</span></span><br><span class="line"><span class="string">            time = result.time;</span></span><br><span class="line"><span class="string">            title = result.title;</span></span><br><span class="line"><span class="string">            url = result.url;</span></span><br><span class="line"><span class="string">            var content = "</span>&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">'my-article-top'</span>&gt;<span class="string">" + "</span>&lt;font color=<span class="string">'#a7a7e5'</span>&gt;<span class="string">" + "</span>➤【热度: <span class="string">" + "</span>&lt;<span class="regexp">/font&gt;" + "&lt;font color='#f1a8ce'&gt;" + time + " ℃】" + "&lt;/</span>font&gt;<span class="string">" + "</span>&lt;a href=<span class="string">'"+"自己的博客地址"+url+"'</span>&gt;<span class="string">" + title + "</span>&lt;<span class="regexp">/a&gt;" + "&lt;/</span>p&gt;<span class="string">";</span></span><br><span class="line"><span class="string">            document.getElementById("</span>top<span class="string">").innerHTML += content</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;, function (error) &#123;</span></span><br><span class="line"><span class="string">        console.log("</span>error<span class="string">");</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style&gt;.post-description &#123;</span></span><br><span class="line"><span class="string">        display: none;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><p>必须将里面的里面的 <code>app_id</code> 和 <code>app_key</code> 替换为你的主题配置文件中的值，必须替换里面博客的链接，1000是显示文章的数量，其它可以自己看情况更改。最后，修改样式可以在 <code>custom.styl</code> 中加入自定义代码。</p><h4 id="开启文章打赏功能"><a href="#开启文章打赏功能" class="headerlink" title="开启文章打赏功能"></a>开启文章打赏功能</h4><p>一篇辛辛苦苦敲出来的文章，不妨开启一下文章打赏功能，万一真有人给你棒棒糖呢</p><p>打开主题配置文件，搜索 reward，找到如下配置并修改：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Reward (Donate)</span><br><span class="line"># Front-matter variable (unsupport animation).</span><br><span class="line">reward_settings:</span><br><span class="line">  # If true, reward will be displayed in every article by default.</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  animation: <span class="literal">true</span></span><br><span class="line">  comment: 如果这篇文章对你有帮助，不妨</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: <span class="regexp">/images/</span>wechatpay.png</span><br><span class="line">  alipay: <span class="regexp">/images/</span>alipay.png</span><br><span class="line">  #paypal: /images/paypal.png</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure><h5 id="未完待续。。。"><a href="#未完待续。。。" class="headerlink" title="未完待续。。。"></a>未完待续。。。</h5>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Next </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo 搭建个人博客基础篇</title>
      <link href="/posts/31683/"/>
      <url>/posts/31683/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><div class="tip info faa-horizontal animated"><p>突发奇想，想自己搞一个博客于是就有了后来的事。记录下这个过程，积累一些经验，同时也方便以后自己看看</p><p></p></div><h4 id="本文目录"><a href="#本文目录" class="headerlink" title="本文目录"></a>本文目录</h4><ul><li>安装环境</li><li>安装<strong>Node.js</strong></li><li>添加国内镜像</li><li>安装<strong>Git</strong></li><li>注册<strong>Github</strong>账号</li><li>创建<strong>Git</strong>仓库</li><li>安装<strong>Hexo</strong></li><li>配置本地<strong>Hexo</strong></li><li>连接<strong>Github</strong>与本地</li><li>写文章，发布</li><li>更换自己喜欢的<strong>Hexo</strong>主题</li><li>结语</li></ul><h4 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h4><p>要想搭建<strong>Hexo</strong>，我们先需要安装一下两个其他的东西</p><ul><li><span style="color:red"><strong>Node.js</strong></span></li><li><span style="color:red"><strong>Git</strong></span></li></ul><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>初识<strong>Node.js</strong></p><blockquote><p>简单的说 Node.js 就是运行在服务端的 JavaScript。</p><p>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。</p><p>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p></blockquote><p>点击 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">这里</a> 进入==Node.js官网==下载对应得版本自行安装即可</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/2020051322344366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="Node.js">检查是否安装完成，按<strong>Win+R</strong>打开命令提示符，输入以下代码，查看版本号，如果出现，即为安装成功</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h4 id="添加国内镜像"><a href="#添加国内镜像" class="headerlink" title="添加国内镜像"></a>添加国内镜像</h4><p>换成阿里的国内镜像，同样是按<strong>Win+R</strong>，输入</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">config</span> <span class="built_in">set</span> registry https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>初识Git</p><blockquote><p>Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p></blockquote><h4 id="安装Git-1"><a href="#安装Git-1" class="headerlink" title="安装Git"></a>安装Git</h4><p>点击 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">这里</a> 进去==Git官网==下载对应版本，自行安装即可<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513223543248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="Git"></p><p>按<strong>Win+R</strong>，输入以下命令查看是否安装成功</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="comment">--version</span></span><br></pre></td></tr></table></figure><h4 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h4><p>点击 <a href="https://github.com/" target="_blank" rel="noopener">这里</a> 进去官网，点击右上角 ==<strong>Sign up</strong>== 进行注册，如果有账号，直接登录即可</p><h4 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a>创建Git仓库</h4><p>登录之后新建一个仓库用来存储<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513223630340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="创建仓库">)<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513222317701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="基本设置"></p><p>点击仓库右上角的 ==<strong>Settings</strong>==，进去页面后往下滑动，找到以下内容<img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513222438682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="GitHub Pages"></p><p>我们就可以通过这里面的这个地址进行访问了</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/202005132225366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="首页"></p><p>以上是默认效果</p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>认识什么是Hexo</p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p>选择一个盘，在里面==新建一个文件夹==用来存放博客文件。建完后在该文件夹右键  <span style="color:red">Git Bash Here</span> 输入以下 命令即可安装</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-<span class="keyword">cli</span> -g</span><br></pre></td></tr></table></figure><p>输入 <span style="color:red">hexo -v</span> 检验是否成功</p><h4 id="配置本地Hexo"><a href="#配置本地Hexo" class="headerlink" title="配置本地Hexo"></a>配置本地Hexo</h4><p>在刚才新建的文件夹下 右键  <span style="color:red">Git Bash Here</span> 输入以下 命令进行==初始化==</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">init</span></span><br><span class="line"><span class="attr">npm</span> <span class="string">install</span></span><br></pre></td></tr></table></figure><p>初始化完成后接着输入 <span style="color:red">hexo g</span> 生成静态网页，然后输入<span style="color:red">hexo s</span> 打开本地服务器，</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显示以下内容表示开启成功</span><br><span class="line">INFO Hexo is running <span class="keyword">at</span> <span class="keyword">http</span>://<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">4000</span>/. Press Ctrl+C <span class="built_in">to</span> <span class="built_in">stop</span>.</span><br></pre></td></tr></table></figure><p>在浏览器地址栏输入  <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 进入，就可以预览了</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513222610660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="首页"></p><p>按 <span style="color:red">Ctrl + C</span>关闭本地服务器</p><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><ol><li>==hexo g 生成静态网页==</li><li>==hexo s打开服务器==</li><li>==hexo clean 清理缓存==</li><li>==hexo d 部署到 Github==</li></ol><h4 id="连接本地与Github"><a href="#连接本地与Github" class="headerlink" title="连接本地与Github"></a>连接本地与Github</h4><h5 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h5><p>右键  <span style="color:red">Git Bash Here</span> 输入以下 命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"Name"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"Email"</span></span><br></pre></td></tr></table></figure><p>里面的<strong>Name</strong>和<strong>Email</strong> 就是注册<strong>Github</strong>时的==用户名==和==邮箱==</p><p>然后生成密钥</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">"Email"</span></span><br></pre></td></tr></table></figure><p><strong>Email</strong>还是注册时的邮箱</p><p>接下来会出现</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa <span class="built_in">key</span> pair.</span><br><span class="line">Enter file in which to <span class="built_in">save</span> the <span class="built_in">key</span> (/c/Users/you/.ssh/id_rsa):</span><br><span class="line"><span class="comment">//到这里可以直接回车将密钥按默认文件进行存储</span></span><br></pre></td></tr></table></figure><p>之后：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Enter</span> <span class="string">passphrase</span> <span class="string">(empty</span> <span class="string">for</span> <span class="literal">no</span> <span class="string">passphrase):</span></span><br><span class="line"><span class="string">//这里是要你输入密码，其实不需要输什么密码，直接回车就行</span></span><br><span class="line"><span class="attr">Enter same passphrase again:</span></span><br></pre></td></tr></table></figure><p>接下来</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/you/.ssh/id_rsa.</span><br><span class="line">Your public <span class="built_in">key</span> has been saved <span class="keyword">in</span> /c/Users/you/.ssh/id_rsa.pub.</span><br><span class="line">The <span class="built_in">key</span> fingerprint <span class="built_in">is</span>:</span><br><span class="line">这里是各种字母数字组成的字符串，结尾是你的邮箱</span><br><span class="line">The <span class="built_in">key</span>'s randomart <span class="built_in">image</span> <span class="built_in">is</span>:</span><br><span class="line">这里也是各种字母数字符号组成的字符串</span><br></pre></td></tr></table></figure><p>这样密钥就生成了，一般会存放在 <span style="color:red">/C/Users/you/.ssh/id_rsa.pub.</span>中</p><p>运行以下命令将其==复制==到剪贴板</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~<span class="regexp">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure><h5 id="连接Github"><a href="#连接Github" class="headerlink" title="连接Github"></a>连接Github</h5><p>点击==<strong>Settings</strong>=</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513222646787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="设置"></p><p>再点击SSH and GPG keys，新建一个SSH，名字随便起，再把刚才复制的密钥粘贴进来</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513222738405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="新建SSH"></p><p>然后打开博客文件夹下的==<span style="color:red">_config.yml</span>== 文件，进行修改，这是博客的配置文件，需要修改以下才能连接<strong>Github</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513222813871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="文件夹"></p><p>修改以下配置</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span></span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repository:</span> git@github.com:jinan6/jinan6.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513223037887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="deploy"></p><p>然后右键  <span style="color:red">Git Bash Here</span> 输入以下 命令,出现用户名，那就成功了</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T <span class="symbol">git@</span>github.com</span><br><span class="line"><span class="comment">//注意不要做任何修改</span></span><br></pre></td></tr></table></figure><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><p>在博客根目录下 ，右键  <span style="color:red">Git Bash Here</span> 输入以下 命令安装一个插件</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i hexo-deployer-git</span><br></pre></td></tr></table></figure><p>然后输入，新建一片文章</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">post</span> <span class="string">"article title"</span></span><br><span class="line">引号内的是名字</span><br></pre></td></tr></table></figure><p>会生成在以下目录里== <strong>根目录/source/_posts=</strong>=</p><p>然后就可以进行编辑了，编辑完成后 输入<span style="color:red">hexo g</span> 生成静态网页，输入<span style="color:red">hexo s</span> 打开本地服务进行预览，确认无误后输入 <span style="color:red">hexo d</span>  部署到<strong>Github</strong></p><p>更换喜欢的主题</p><p>点击 这里 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a> 进去<strong>Hexo</strong> 官网的主题库寻找自己喜欢的主题，选完之后进入它的<strong>Github</strong>地址</p><p>我这里以自用的<strong>next</strong>为例</p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513223250506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="主题地址"></p><p>然后打开<strong>博客文件夹</strong>下的的 ==<strong>themes</strong>== 目录，右键  <span style="color:red">Git Bash Here</span> 输入以下 命令</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">此处填写你刚才复制的主题地址</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@github.<span class="symbol">com:</span>theme-<span class="keyword">next</span>/hexo-theme-<span class="keyword">next</span>.git</span><br></pre></td></tr></table></figure><p>下载完成后会在==<strong>themes</strong>==文件夹下生成该主题的文件夹,然后打开<strong>博客文件夹</strong>下的<span style="color:red">_config.yml</span> 文件，进行修改</p><p>搜索 <strong>theme</strong><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200513223146381.png" alt="更改主题"></p><p>这样就替换完成了，部署到<strong>Github</strong>，在<strong>博客文件夹</strong>根目录下右键  <span style="color:red">Git Bash Here</span>  输入以下命令</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p>这样在此访问网站就可以看到我们的主题就已经更换了</p><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>这样一个简单的个人博客就搭建完成了，后续推出一些美化的博客</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo关于next主题 scroll_to_more失效</title>
      <link href="/posts/49984/"/>
      <url>/posts/49984/</url>
      
        <content type="html"><![CDATA[<center>在美化过程中遇到的问题</center><h6 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h6><p>在使用了&lt;–more–&gt;标签后，点击阅读原文会自动下滑到这个标签之下的内容中，个人感觉体验不是太好</p><hr><h6 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h6><p>(1)：此方法适用于老版本</p><p>在主题配置文件搜索“ scroll_to_more: ” 改成 “ scroll_to_more: false ” 就可以了。</p><hr><p>(2)：新版本已经移除此项，官方认为scroll_to_more是个默认行为for任何hexo主题。需要进行强制修改，在\themes\next\layout_macro\post.swig中将</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(post.path) &#125;&#125;#more"</span> <span class="attr">rel</span>=<span class="string">"contents"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(post.path) &#125;&#125;"</span> <span class="attr">rel</span>=<span class="string">"contents"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Next </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Vue+echars+Java后端数据生成柱状图</title>
      <link href="/posts/34782/"/>
      <url>/posts/34782/</url>
      
        <content type="html"><![CDATA[<center>柱状图</center><p><strong>效果图：</strong><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200305172118753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="效果图"><br><strong>后端controller层代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图表</span></span><br><span class="line">    <span class="meta">@AuthIgnore</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"getData"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span>[] idList= &#123;<span class="number">3L</span>,<span class="number">4L</span>,<span class="number">5L</span>,<span class="number">6L</span>,<span class="number">7L</span>&#125;;</span><br><span class="line">    List&lt;Long&gt; id=<span class="keyword">new</span> ArrayList&lt;Long&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; idList.length; i++) &#123;</span><br><span class="line">id.add(idList[i]);</span><br><span class="line">&#125;</span><br><span class="line">    List&lt;TbUser&gt; userList=userService.selectBatchIds(id);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">"data"</span>,userList);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="注意：上面代码中的-3L-4L-5L-6L-7L，对应的是数据库中的ID"><a href="#注意：上面代码中的-3L-4L-5L-6L-7L，对应的是数据库中的ID" class="headerlink" title="注意：上面代码中的 3L,4L,5L,6L,7L，对应的是数据库中的ID"></a><strong>注意：上面代码中的 3L,4L,5L,6L,7L，对应的是数据库中的ID</strong></h2><p><strong>HTML代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">title</span>&gt;</span>五分钟上手之柱状图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 引入 echarts.js --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../libs/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../libs/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../libs/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">          </span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> vm=<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">          el:<span class="string">"#main"</span>,</span></span><br><span class="line">           data:&#123;</span><br><span class="line">           name:[],</span><br><span class="line">           type:[],</span><br><span class="line">           &#125;,</span><br><span class="line">           methods:&#123;</span><br><span class="line"><span class="actionscript">           getData:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">           $.post(<span class="string">"http://localhost:8081/jeefast-rest/api/getData"</span>,&#123;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">           <span class="comment">//alert(JSON.stringify(data));</span></span></span><br><span class="line"><span class="actionscript">           <span class="keyword">var</span> data=data.data;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> len=data.length;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//alert(len);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//循环前，先清空</span></span></span><br><span class="line">        vm.name=[];</span><br><span class="line">               vm.type=[];</span><br><span class="line">               </span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;<span class="comment">//循环遍历进行追加</span></span></span><br><span class="line">        vm.name.push(data[i].username);</span><br><span class="line">        vm.type.push(data[i].mobile);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="actionscript">         <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">                      <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"><span class="actionscript">                      <span class="comment">// 指定图表的配置项和数据</span></span></span><br><span class="line">                      myChart.setOption(&#123;</span><br><span class="line">                           title: &#123;</span><br><span class="line"><span class="actionscript">                                text: <span class="string">'异步数据加载示例'</span></span></span><br><span class="line">                           &#125;,</span><br><span class="line">                           tooltip: &#123;&#125;,</span><br><span class="line">                           legend: &#123;</span><br><span class="line"><span class="actionscript">                                data: [<span class="string">'市值'</span>]</span></span><br><span class="line">                           &#125;,</span><br><span class="line"><span class="actionscript">                           xAxis: &#123;<span class="comment">//横坐标的值</span></span></span><br><span class="line">                                data: vm.name</span><br><span class="line">                           &#125;,</span><br><span class="line">                           yAxis: &#123;&#125;,</span><br><span class="line"><span class="actionscript">                           series: [&#123;<span class="comment">//纵坐标的值</span></span></span><br><span class="line"><span class="actionscript">                                name: <span class="string">'市值'</span>,</span></span><br><span class="line"><span class="actionscript">                                type: <span class="string">'bar'</span>,</span></span><br><span class="line">                                data: vm.type</span><br><span class="line">                           &#125;]</span><br><span class="line">                      &#125;);</span><br><span class="line">           &#125;);</span><br><span class="line">           &#125;</span><br><span class="line">           &#125;,</span><br><span class="line"><span class="actionscript">           mounted()&#123;<span class="comment">//自动调用里面的方法</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.getData();</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.timer = setInterval(<span class="keyword">this</span>.getData, <span class="number">3000</span>);<span class="comment">//定时器，每3秒执行一次</span></span></span><br><span class="line">        &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">           </span><br><span class="line">          <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Vue+echars+Java后端数据生成饼状图</title>
      <link href="/posts/56512/"/>
      <url>/posts/56512/</url>
      
        <content type="html"><![CDATA[<center>饼图</center><p><strong>效果图：</strong><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20200305171205397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="效果"><br><strong>后端controller代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图表</span></span><br><span class="line">    <span class="meta">@AuthIgnore</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"getData"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span>[] idList= &#123;<span class="number">3L</span>,<span class="number">4L</span>,<span class="number">5L</span>,<span class="number">6L</span>,<span class="number">7L</span>&#125;;</span><br><span class="line">    List&lt;Long&gt; id=<span class="keyword">new</span> ArrayList&lt;Long&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; idList.length; i++) &#123;</span><br><span class="line">id.add(idList[i]);</span><br><span class="line">&#125;</span><br><span class="line">    List&lt;TbUser&gt; userList=userService.selectBatchIds(id);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">"data"</span>,userList);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="注意：上面代码中的-3L-4L-5L-6L-7L，对应的是数据库中的ID"><a href="#注意：上面代码中的-3L-4L-5L-6L-7L，对应的是数据库中的ID" class="headerlink" title="注意：上面代码中的 3L,4L,5L,6L,7L，对应的是数据库中的ID"></a>注意：上面代码中的 3L,4L,5L,6L,7L，对应的是数据库中的ID</h2><p><strong>HTML代码：</strong></p><p>这里引用的都是本地下载好的包<br>还可以引用网上的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.staticfile.org/vue/2.2.2/vue.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="https:/</span><span class="regexp">/cdn.staticfile.org/</span>jquery/<span class="number">1.10</span><span class="number">.2</span>/jquery.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>https:<span class="comment">//cdn.staticfile.org/echarts/4.3.0/echarts.min.js"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>第一个 ECharts 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入 echarts.js --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script src="https://cdn.staticfile.org/echarts/4.3.0/echarts.min.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../libs/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../libs/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../libs/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//Vue</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm=<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el:<span class="string">"#main"</span>,</span></span><br><span class="line">    data:&#123;</span><br><span class="line">    dat:[</span><br><span class="line"><span class="actionscript">    &#123;value:<span class="number">274</span>, name:<span class="string">'联盟广告'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123;value:<span class="number">310</span>, name:<span class="string">'邮件营销'</span>&#125;,</span></span><br><span class="line">    ],</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    methods:&#123;<span class="comment">//自定义方法</span></span></span><br><span class="line"><span class="actionscript">    getData:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    $.post(<span class="string">"http://localhost:8081/jeefast-rest/api/getData"</span>,&#123;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//alert(JSON.stringify(data));</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> data=data.data;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> len=data.length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//alert(len);</span></span></span><br><span class="line"><span class="actionscript">    vm.dat=[]<span class="comment">//先清空</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> info=&#123;&#125;;</span></span><br><span class="line">    info.name=data[i].username;</span><br><span class="line">    info.value=data[i].mobile;</span><br><span class="line"><span class="actionscript">    vm.dat.push(info);<span class="comment">//把info里面的数据追加到data里</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//alert(JSON.stringify(vm.dat));</span></span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"> </span><br><span class="line">        myChart.setOption(&#123;</span><br><span class="line">            series : [</span><br><span class="line">                &#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'访问来源'</span>,</span></span><br><span class="line"><span class="actionscript">                    type: <span class="string">'pie'</span>,    <span class="comment">// 设置图表类型为饼图</span></span></span><br><span class="line"><span class="actionscript">                    radius: <span class="string">'55%'</span>,  <span class="comment">// 饼图的半径，外半径为可视区尺寸（容器高宽中较小一项）的 55% 长度。</span></span></span><br><span class="line"><span class="actionscript">                    data: vm.dat         <span class="comment">// 数据数组，name 为数据项名称，value 为数据项值</span></span></span><br><span class="line">                        </span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    mounted()&#123;<span class="comment">//自动调用里面的方法</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.getData();</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.timer = setInterval(<span class="keyword">this</span>.getData, <span class="number">3000</span>);<span class="comment">//定时器，每3秒执行一次</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux虚拟机 安装java及配置环境（centos 6.7）</title>
      <link href="/posts/59764/"/>
      <url>/posts/59764/</url>
      
        <content type="html"><![CDATA[<center>linux安装java环境</center><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><strong><em>第一步：下载JDK</em></strong><br>进入<a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html下载合适的JDK版本，进行安装" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase-jdk8-downloads.html下载合适的JDK版本，进行安装</a></p><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191213105834340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择合适的版本<br>由于是linux系统，所以需要下载linux版本的  及后缀名为 <strong>tar.gz</strong>的<br>本文  以   <strong>jdk-8u5-linux-i586.tar.gz</strong>  为例</p><p><strong><em>第二步 创建目录</em></strong></p><p>在<strong>usr</strong>目录下创建 <strong>java</strong>目录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/java</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191213110413660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>把下载好的文件放在<strong>java</strong>目录下<br>可以用  <strong>filezilla</strong> 工具进行传输</p><p>输入 ls 查看是否上传成功<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191213110705951.png" alt="在这里插入图片描述"><br>出现上图即为成功</p><p><strong><em>第三步 解压</em></strong><br>进入 <strong>/usr/java/</strong>目录下准备解压</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf jdk-<span class="number">8</span>u5-linux-i586.tar.gz</span><br></pre></td></tr></table></figure><p>等待解压完成</p><h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><p>输入<code>vim /etc/profile</code><br>按 i 键进行插入<br>在最下面添加以下内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set java environment</span><br><span class="line">JAVA_HOME=/usr/java/jdk1<span class="number">.8</span><span class="number">.0_05</span>        </span><br><span class="line">JRE_HOME=/usr/java/jdk1<span class="number">.8</span><span class="number">.0_05</span>/jre     </span><br><span class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure><p>注意：JAVA-HOME   JRE-HOME 均为你自己的路径  和你自己的JDK</p><p>然后按 Esc键  <code>:wq</code> 键  保存退出<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191213111507307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>让修改生效</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>显示 java 版本信息，则说明 JDK 安装成功</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux虚拟机 安装Tomcat9.0（centos 6.7）</title>
      <link href="/posts/13258/"/>
      <url>/posts/13258/</url>
      
        <content type="html"><![CDATA[<center>linux虚拟机上安装Tomcat</center><p>linux虚拟机上安装Tomcat</p><p>注意：安装软件之前要安装java JDk</p><p>安装软件：apache-tomcat-9.0.29.tar.gz<br>下载地址：<a href="https://tomcat.apache.org/download-90.cgihttps://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-90.cgihttps://tomcat.apache.org/download-90.cgi</a><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191212173304320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1、创建目录 ：<code>mkdir /usr/tomcat</code><br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191212173712986.png" alt="在这里插入图片描述"><br>2、将下载的文件 移动到 /usr/tomcat/目录下<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191212173835943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3、进行解压</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf  apache-tomcat-<span class="number">9.0</span><span class="number">.29</span>.tar.gz</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191212174148591.png" alt="解压"><br>4、解压完成后 启动Tomcat<br>    进入Tomcat里面的bin 目录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd bin</span><br></pre></td></tr></table></figure><p>进入bin目录后<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191212180612410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="bin目录"><br>执行： <code>./startup.sh</code>  –&gt;启动tomcat</p><p>执行： <code>./shutdown.sh</code>  –&gt;关闭tomcat<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191212174704499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h2><p>每次开机都要启动，有点麻烦</p><p>可以设置成开机自启</p><p>1、找到/etc文件夹下的rc.local文件，<br>    输入<code>rc.local</code>  按 i 键 或 insert 键进行插入</p><p>2、在文件的最后添加以下java环境变量和启动tomcat命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1<span class="number">.8</span><span class="number">.0_05</span> </span><br><span class="line"></span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br><span class="line"></span><br><span class="line">sh /usr/tomcat/apache-tomcat-<span class="number">9.0</span><span class="number">.29</span>/bin/startup.sh</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191212175306543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="均为你自己路径"><br>添加完成后  按Esc 键<br>然后  按  <code>:wq</code> 进行保存退出  （前面有一个英文的冒号，不要漏掉）</p><p>3、然后给 rc.local文件 添加权限</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x rc.local</span><br></pre></td></tr></table></figure><p>4、最后重启 ，即可访问Tomcat</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用ajax判断用户名唯一性</title>
      <link href="/posts/14393/"/>
      <url>/posts/14393/</url>
      
        <content type="html"><![CDATA[<center>ajax判断用户名唯一</center><h2 id="判断用户名唯一性"><a href="#判断用户名唯一性" class="headerlink" title="判断用户名唯一性"></a>判断用户名唯一性</h2><p><strong>dao层：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value=<span class="string">"select * from stu  where name like CONCAT('%',:name,'%')"</span>,nativeQuery=<span class="keyword">true</span>)</span><br><span class="line">  <span class="function">List&lt;Stu&gt; <span class="title">findByName</span><span class="params">(@Param(<span class="string">"name"</span>)</span> String name)</span>;</span><br></pre></td></tr></table></figure><p>以上SQL语句也可以进行模糊查询，以后会有说明</p><p><strong>service层：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Stu&gt; <span class="title">findByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> stuDao.findByName(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>controller层：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否有重复名字</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"findByName"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">findByName</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">String name=request.getParameter(<span class="string">"name"</span>);</span><br><span class="line"><span class="keyword">if</span> (stuService.findByName(name).size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是添加页面的代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/jquery-1.8.3.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 我导入的是本地的js文件，如果你没有本地的，也可以导入网上的,</span></span><br><span class="line"><span class="comment">例如：&lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt;</span></span><br><span class="line"><span class="comment">&lt;/script&gt;这种的菜鸟教程有很多 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span>  <span class="title">check</span><span class="params">()</span></span>&#123; <span class="comment">//这个是判断姓名不能为空的方法</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> name=<span class="built_in">document</span>.getElementById(<span class="string">"name"</span>);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(name.value==<span class="literal">null</span> ||name.value==<span class="string">""</span> ||name.value.length==<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="actionscript">alert(<span class="string">"姓名不能为空！"</span>)</span></span><br><span class="line">name.focus();</span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 这个是判断姓名唯一性的方法</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">"#name"</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> name=$(<span class="string">"#name"</span>).val();<span class="comment">//获取ID为name的值</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//alert(name);</span></span></span><br><span class="line"><span class="javascript">$.post(<span class="string">"/stu/findByName"</span>,&#123;<span class="attr">name</span>:name&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(data==<span class="literal">true</span>)&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#err"</span>).html(<span class="string">"&lt;font color='red'&gt;该名称已被注册&lt;/font&gt;"</span>);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#submit"</span>).attr(<span class="string">"disabled"</span>,<span class="literal">true</span>);</span></span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#err"</span>).html(<span class="string">"&lt;font color='green'&gt;可以注册&lt;/font&gt;"</span>);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#submit"</span>).attr(<span class="string">"disabled"</span>,<span class="literal">false</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里的提交路径是controller里面的添加方法，改成你自己的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/stu/save"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">id</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"err"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">地址：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">id</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">身份证号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"sid"</span> <span class="attr">id</span>=<span class="string">"sid"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">电话：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"iphone"</span> <span class="attr">id</span>=<span class="string">"iphone"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"submit"</span> <span class="attr">onclick</span>=<span class="string">"return check()"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面附上几张效果图<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191021202911492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我的数据库里有111这个用户名，当你输完之后，触发失焦事件<br>ajax会出来提示，同时，disabled 触发，提交按钮变为灰色，无法点击。<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191021203131265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>当没有与数据库中重名的时候，ajax会提示可以注册<br>提交按钮也就可以点击</p><p>效果图有点难看，不要介意</p>]]></content>
      
      
      <categories>
          
          <category> ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 判断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot 实现自定义排序</title>
      <link href="/posts/14324/"/>
      <url>/posts/14324/</url>
      
        <content type="html"><![CDATA[<center>实现排序小功能</center><p>效果图：<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191105194125483.png" alt="在这里插入图片描述"><br>在文本框中输入值，触发失焦事件，根据正序或是倒序进行排序（dao层中的SQL语句）</p><p>首先在数据库的表中新建一列<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191105194428662.png" alt="在这里插入图片描述"><br>HTML界面<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/20191105194751196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加文本框<br>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"2"</span> <span class="attr">v-model</span>=<span class="string">"site.sort"</span> <span class="attr">v-on:blur</span>=<span class="string">"sort(site.nid,site.sort)"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在文本框输入完值后，鼠标离开，触发失焦事件  v-on:blur  （vue之中）</p><p>下面是方法代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sort:<span class="function"><span class="keyword">function</span>(<span class="params">nid,sort</span>)</span>&#123;</span><br><span class="line"><span class="comment">//alert(11);</span></span><br><span class="line">$.post(<span class="string">"/news/sorts"</span>,&#123;<span class="attr">nid</span>:nid,<span class="attr">sort</span>:sort&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.location.href=<span class="string">"/admin/news"</span>;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>控制层代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"sorts"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sorts</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Integer nid=Integer.parseInt(request.getParameter(<span class="string">"nid"</span>));</span><br><span class="line">Integer sort=Integer.parseInt(request.getParameter(<span class="string">"sort"</span>));</span><br><span class="line"></span><br><span class="line">News news=newsService.findById(nid);</span><br><span class="line">news.setNid(nid);</span><br><span class="line">news.setSort(sort);</span><br><span class="line">newsService.save(news);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">"1"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dao层：<br><img src= "https://cdn.jsdelivr.net/gh/blogimg/emotion/custom/19.webp" data-lazy-src="https://img-blog.csdnimg.cn/201911051952387.png" alt="在这里插入图片描述"><br>根据实际情况在你的SQL语句中加入以上代码<br>具体根据什么排序根据自己起的字段名</p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
